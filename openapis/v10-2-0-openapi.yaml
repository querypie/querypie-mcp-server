components:
  schemas:
    0.9_com.chequer.querypie.api.dto.PageableDto:
      properties:
        currentPage:
          description: Current page number
          format: int32
          type: integer
        pageSize:
          description: Number of items included in the page
          format: int32
          type: integer
        totalElements:
          description: Total number of existing items
          format: int64
          type: integer
        totalPages:
          description: Total number of pages
          format: int32
          type: integer
      required:
        - currentPage
        - pageSize
        - totalElements
        - totalPages
      type: object
    0.9_com.chequer.querypie.api.dto.Responses$ListResponseCom.chequer.querypie.iam.controller.dto.UserRoleDto$Response:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByCompanySearchResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByCompanySearchResponse'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$Response
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$Response:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$Response:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalPolicyNotificationDto$Response
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyNotificationDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalRoleDto$RoleResponse:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$RoleResponse'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalUserAuthHistoryDto$Response
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalUserAuthHistoryDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.iam.controller.dto.ExternalUserDto$Response:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$Response:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.iam.controller.dto.SystemAuthHistoryDto$Response:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.SystemAuthHistoryDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v1.ExternalAccessApprovalDto$Response
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalAccessApprovalDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalDto$Response
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleDto$PartialResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleDto$PartialResponse'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$PageResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$PageResponse'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$PageResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$PageResponse'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.notification.controller.ExternalNotificationChannelDto$Response
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$Response'
          type: array
        page:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? 0.9_com.chequer.querypie.api.dto.Responses$ScanResponseCom.chequer.querypie.dbam.controller.dto.ExternalSqlAuditLogDto$AuditLogResponseJava.lang.String
    : properties:
        hasNext:
          description: '''true'' if there is more logs.'
          type: boolean
        list:
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalSqlAuditLogDto$AuditLogResponse'
          type: array
        nextCursor:
          description: Next cursor
          type: string
      required:
        - hasNext
        - list
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel:
      properties:
        name:
          type: string
        type:
          enum:
            - HTTP
            - AGIT
            - SLACK
          type: string
        uuid:
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDataExportDto$Request:
      properties:
        channelUuid:
          type: string
        clusterGroupUuid:
          description: If specified, alert occurs only when export SQL result data on this connection. <br>Required if connectionSelectAll is false
          type: string
        description:
          type: string
        messageTemplate:
          description: |-
            Alert Policy Message Template <br><b>Message Template Variables</b>
            - Cluster Group Id : {{clusterGroupId}}
            - Cluster Group Name : {{clusterGroupName}}
            - Cluster Id : {{clusterId}}
            - DB Host : {{dbHost}}
            - Replication Type : {{replicationType}}
            - DB Name : {{dbName}}
            - DB User : {{dbUser}}
            - Database Type : {{databaseType}}
            - Host Name : {{hostName}}
            - User Id : {{userId}}
            - User Name : {{userName}}
            - Email : {{email}}
            - Login Id : {{loginId}}
            - Action Type : {{actionType}}
            - SQL Type : {{sqlType}}
            - SQL Text : {{sqlText}}
            - Executed Result : {{execResult}}
            - Executed Millis : {{execMillis}}
            - Executed IP : {{execIp}}
            - Exported Rows : {{expRows}}
            - Reason Comment : {{reasonComment}}
            - Connection Label : {{connectionLabel}}
          example: |-
            {{userName}} exported {{expRows}} rows.
            SQL : {{sqlText}} ({{sqlType}})
          type: string
        name:
          type: string
        rows:
          description: An alert occurs if exported data row count is greater than or equal to this value.
          format: int32
          minimum: 1
          type: integer
        selectAll:
          description: If true, alert is occurs when export SQL result data on all DB Connections.
          type: boolean
      required:
        - channelUuid
        - messageTemplate
        - name
        - rows
        - selectAll
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDataExportDto$Response:
      properties:
        channel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel'
        clusterGroupUuid:
          type: string
        description:
          type: string
        messageTemplate:
          type: string
        name:
          type: string
        rows:
          format: int32
          type: integer
        selectAll:
          type: boolean
        uuid:
          type: string
      required:
        - channel
        - description
        - messageTemplate
        - name
        - rows
        - selectAll
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDbConnectionAttemptDto$Request:
      properties:
        actionCount:
          description: failure action count
          format: int32
          minimum: 1
          type: integer
        channelUuid:
          type: string
        clusterGroupUuid:
          description: If specified, alert occurs only when attempt to connect to this DB connection.<br>Required if connectionSelectAll is false
          type: string
        condition:
          description: DB connection attempt result status that create a alert.
          enum:
            - ALWAYS
            - SUCCESS
            - FAIL
          type: string
        description:
          type: string
        intervalMinutes:
          description: failure interval minutes
          format: int32
          minimum: 1
          type: integer
        messageTemplate:
          description: |-
            Alert Policy Message Template <br><b>Message Template Variables</b>
             - Cluster Group Id : {{clusterGroupId}}
             - Cluster Group Name : {{clusterGroupName}}
             - Cluster Id : {{clusterId}}
             - DB Host : {{dbHost}}
             - Replication Type : {{replicationType}}
             - DB Name : {{dbName}}
             - DB User : {{dbUser}}
             - Database Type : {{databaseType}}
             - Host Name : {{hostName}}
             - User Id : {{userId}}
             - User Name : {{userName}}
             - Email : {{email}}
             - Login Id : {{loginId}}
             - Auth Type : {{authType}}
             - Action Type : {{actionType}}
             - Action At : {{actionAt}}
             - Privilege Types : {{privilegeTypes}}
             - Error : {{error}}
             - Error Message : {{errorMessage}}
             - Client IP : {{clientIp}}
             - Result : {{result}}
             - Failure Action Count : {{failureActionCount}}
             - Failure Interval Minutes : {{failureIntervalMinutes}}
          example: |-
            {{userName}} attempted to connect to the [{{replicationType}}] {{clusterGroupName}} ({{clusterId}}) connection.
            Result: {{result}}
            Error Message : {{errorMessage}}
          type: string
        name:
          type: string
        selectAll:
          description: If true, alert is created for all DB connection attempt.
          type: boolean
      required:
        - channelUuid
        - condition
        - description
        - messageTemplate
        - name
        - selectAll
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDbConnectionAttemptDto$Response:
      properties:
        actionCount:
          format: int32
          type: integer
        channel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel'
        clusterGroupUuid:
          type: string
        condition:
          enum:
            - ALWAYS
            - SUCCESS
            - FAIL
          type: string
        description:
          type: string
        intervalMinutes:
          format: int32
          type: integer
        messageTemplate:
          type: string
        name:
          type: string
        selectAll:
          type: boolean
        uuid:
          type: string
      required:
        - channel
        - condition
        - messageTemplate
        - name
        - selectAll
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationPreventedSqlExecutionDto$Request:
      properties:
        channelUuid:
          type: string
        clusterGroupUuid:
          description: Connection-uuid to send alert when attempted Prevented Query <br>Required if connectionSelectAll is true
          type: string
        description:
          type: string
        messageTemplate:
          description: |-
            Alert Policy Message Template <br><b>Message Template Variables</b>
            - Cluster Group Id : {{clusterGroupId}}
            - Cluster Group Name : {{clusterGroupName}}
            - Cluster Id : {{clusterId}}
            - DB Host : {{dbHost}}
            - Replication Type : {{replicationType}}
            - DB Name : {{dbName}}
            - DB User : {{dbUser}}
            - Database Type : {{databaseType}}
            - Host Name : {{hostName}}
            - User Id : {{userId}}
            - User Name : {{userName}}
            - Email : {{email}}
            - Login Id : {{loginId}}
            - Action Type : {{actionType}}
            - SQL Type : {{sqlType}}
            - SQL Text : {{sqlText}}
            - Executed Result : {{execResult}}
            - Executed Millis : {{execMillis}}
            - Executed IP : {{execIp}}
            - Exported Rows : {{expRows}}
            - Reason Comment : {{reasonComment}}
            - Connection Label : {{connectionLabel}}
          example: '{{userName}} executed {{sqlType}} statement with a restricted access.'
          type: string
        name:
          type: string
        selectAll:
          description: If true, alert occurs when running Prevented SQL on all DB connections
          type: boolean
      required:
        - channelUuid
        - messageTemplate
        - name
        - selectAll
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationPreventedSqlExecutionDto$Response:
      properties:
        channel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel'
        clusterGroupUuid:
          type: string
        description:
          type: string
        messageTemplate:
          type: string
        name:
          type: string
        selectAll:
          type: boolean
        uuid:
          type: string
      required:
        - channel
        - messageTemplate
        - name
        - selectAll
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Level:
      properties:
        value:
          format: int32
          type: integer
      required:
        - value
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Policy:
      properties:
        uuid:
          type: string
      required:
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Request:
      properties:
        channelUuid:
          type: string
        description:
          type: string
        level:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Level'
        messageTemplate:
          description: |-
            Alert Policy Message Template <br><b>Message Template Variables</b>
             - Cluster Group Uuid : {{clusterGroupUuid}}
             - Cluster Group Name : {{clusterGroupName}}
             - Cluster Uuid : {{clusterUuid}}
             - Cluster Name : {{clusterName}}
             - Replication Type : {{replicationType}}
             - Database Host : {{databaseHost}}
             - Database Name : {{databaseName}}
             - Database User : {{databaseUser}}
             - Database Type : {{databaseType}}
             - User Uuid : {{userUuid}}
             - User Name : {{userName}}
             - Email : {{email}}
             - Login Id : {{loginId}}
             - Policy Name : {{policyName}}
             - Object Path : {{objectPath}}
             - Level : {{level}}
          example: |-
            {{userName}} access to {{clusterGroupName}} ({{clusterGroupUuid}}) connection.
            Sensitive Level : {{level}}
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Policy'
      required:
        - channelUuid
        - messageTemplate
        - name
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Response:
      properties:
        channel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel'
        description:
          type: string
        level:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Level'
        messageTemplate:
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Policy'
        privilegeTypes:
          type: string
        uuid:
          type: string
      required:
        - channel
        - messageTemplate
        - name
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSqlExecutionDto$Request:
      properties:
        channelUuid:
          type: string
        clusterGroupUuid:
          description: If specified, alert occurs only when execute query on this connection. <br>Required if connectionSelectAll is false
          type: string
        description:
          type: string
        messageTemplate:
          description: |-
            Alert Policy Message Template <br><b>Message Template Variables</b>
            - Cluster Group Id : {{clusterGroupId}}
            - Cluster Group Name : {{clusterGroupName}}
            - Cluster Id : {{clusterId}}
            - DB Host : {{dbHost}}
            - Replication Type : {{replicationType}}
            - DB Name : {{dbName}}
            - DB User : {{dbUser}}
            - Database Type : {{databaseType}}
            - Host Name : {{hostName}}
            - User Id : {{userId}}
            - User Name : {{userName}}
            - Email : {{email}}
            - Login Id : {{loginId}}
            - Action Type : {{actionType}}
            - SQL Type : {{sqlType}}
            - SQL Text : {{sqlText}}
            - Executed Result : {{execResult}}
            - Executed Millis : {{execMillis}}
            - Executed IP : {{execIp}}
            - Exported Rows : {{expRows}}
            - Reason Comment : {{reasonComment}}
            - Connection Label : {{connectionLabel}}
          example: '{{userName}} executed {{expRows}} rows. SQL : {{sqlText}} ({{sqlType}})'
          type: string
        name:
          type: string
        privilegeTypes:
          description: Target Privilege Types to send Alert
          items:
            description: Target Privilege Types to send Alert
            type: string
          type: array
        privilegeVendor:
          enum:
            - SQL
            - REDIS
          type: string
        rows:
          description: An alert occurs if query result row count is greater than or equal to this value.
          format: int32
          minimum: 1
          type: integer
        selectAll:
          description: If true, alert occurs when execute query on all DB connections
          type: boolean
      required:
        - channelUuid
        - messageTemplate
        - name
        - privilegeTypes
        - privilegeVendor
        - rows
        - selectAll
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSqlExecutionDto$Response:
      properties:
        channel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel'
        clusterGroupUuid:
          type: string
        description:
          type: string
        messageTemplate:
          type: string
        name:
          type: string
        privilegeTypes:
          type: string
        privilegeVendor:
          enum:
            - SQL
            - REDIS
          type: string
        rows:
          format: int32
          type: integer
        selectAll:
          type: boolean
        uuid:
          type: string
      required:
        - channel
        - messageTemplate
        - name
        - privilegeTypes
        - privilegeVendor
        - rows
        - selectAll
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationUnusualLoginAttemptDto$Request:
      properties:
        actionCount:
          description: failure action count
          format: int32
          minimum: 2
          type: integer
        channelUuid:
          type: string
        description:
          type: string
        intervalMinutes:
          description: failure interval minutes
          format: int32
          minimum: 1
          type: integer
        messageTemplate:
          description: |-
            Alert Policy Message Template <br><b>Message Template Variables</b>
             - User Id : {{userId}}
             - User Name : {{userName}}
             - Email : {{email}}
             - Login Id : {{loginId}}
             - Result : {{result}}
             - Current Action Count : {{currentActionCount}}
             - Interval Minutes : {{intervalMinutes}}
          example: '{{userName}} attempted to login {{currentActionCount}} times in {{intervalMinutes}} minutes on different IPs.'
          type: string
        name:
          type: string
      required:
        - actionCount
        - channelUuid
        - intervalMinutes
        - messageTemplate
        - name
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationUnusualLoginAttemptDto$Response:
      properties:
        actionCount:
          format: int32
          type: integer
        channel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel'
        description:
          type: string
        intervalMinutes:
          format: int32
          type: integer
        messageTemplate:
          type: string
        name:
          type: string
        uuid:
          type: string
      required:
        - actionCount
        - channel
        - intervalMinutes
        - messageTemplate
        - name
        - uuid
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationWorkflowNewRequestDto$Request:
      properties:
        channelUuid:
          type: string
        description:
          type: string
        messageTemplate:
          description: |-
            Alert Policy Message Template <br><b>Message Template Variables</b>
             - Request Title : {{requestTitle}}
             - Assignees : {{assignees}}
             - Comment : {{comment}}
             - User Name : {{userName}}
             - Email : {{email}}
             - Access Type : {{accessType}}
          example: |-
            {{userName}} has requested {{accessType}}.
            Title : {{requestTitle}}
            Assignees : {{assignees}}
            Comments : {{comment}}
          type: string
        name:
          type: string
      required:
        - channelUuid
        - messageTemplate
        - name
      type: object
    0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationWorkflowNewRequestDto$Response:
      properties:
        channel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationChannel'
        description:
          type: string
        messageTemplate:
          type: string
        name:
          type: string
        uuid:
          type: string
      required:
        - channel
        - messageTemplate
        - name
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ClusterGroupDto$ConnectionTagDto:
      description: Tags
      properties:
        key:
          type: string
        synchronized:
          type: boolean
        value:
          type: string
      required:
        - key
        - synchronized
        - value
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByClusterSearchResponse:
      properties:
        clusterGroupName:
          description: Cluster Group Name
          type: string
        clusterGroupUuid:
          description: Cluster Group UUID
          example: "1"
          type: string
        clusterUuid:
          description: Cluster UUID
          example: "1"
          type: string
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        type:
          description: Cluster Replication Type
          enum:
            - MASTER
            - SLAVE
            - SINGLE
          example: MASTER
          type: string
        users:
          description: List of Users
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$UserInformation'
          type: array
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByCompanySearchResponse:
      description: Object list per entry
      properties:
        cluster:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ClusterInformation'
        email:
          description: Email
          example: brant@querypie.com
          type: string
        loginId:
          description: Login ID
          example: brant
          type: string
        userName:
          description: User Name
          example: Brant Hwang
          type: string
        userUuid:
          description: User UUID
          example: "1"
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByUserSearchResponse:
      properties:
        clusters:
          description: List of Clusters
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ClusterInformation'
          type: array
        email:
          description: Email
          example: brant@querypie.com
          type: string
        loginId:
          description: Login ID
          example: brant
          type: string
        userName:
          description: User Name
          example: Brant Hwang
          type: string
        userUuid:
          description: User UUID
          example: "1"
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ClusterInformation:
      description: Cluster Information
      properties:
        active:
          description: Cluster by User Active status [true(Active) / false(Deactive)]
          type: boolean
        clusterGroupName:
          description: Cluster Group Name
          type: string
        clusterGroupUuid:
          description: Cluster Group UUID
          example: "1"
          type: string
        clusterUuid:
          description: Cluster UUID
          example: "1"
          type: string
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        roleMapUuid:
          description: Role Mapping UUID (Access Control UUID)
          type: string
        roleName:
          description: Role Name
          example: Default Role
          type: string
        roleUuid:
          description: Role UUID
          example: "15"
          type: string
        type:
          description: Cluster Replication Type
          example: MASTER
          type: string
      required:
        - active
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$GrantResponse:
      properties:
        clusterUuids:
          description: Granted Cluster UUID List
          items:
            description: Granted Cluster UUID List
            type: string
          type: array
        grantedClusterCount:
          description: Granted Cluster Count
          example: 15
          format: int32
          type: integer
        grantedUserCount:
          description: Granted User Count
          example: 10
          format: int32
          type: integer
        roleUuid:
          description: Granted Role UUID
          type: string
        totalGrantedRoles:
          description: Total Granted Roles ( Users x Clusters )
          example: 150
          format: int32
          type: integer
        userUuids:
          description: Granted User UUID List
          items:
            description: Granted User UUID List
            type: string
          type: array
      required:
        - grantedClusterCount
        - grantedUserCount
        - totalGrantedRoles
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$GrantRoleRequest:
      properties:
        clusterUuids:
          description: List of Cluster UUID
          items:
            description: List of Cluster UUID
            type: string
          type: array
        roleUuid:
          description: Role UUID
          type: string
        userUuids:
          description: List of User UUID
          items:
            description: List of User UUID
            type: string
          type: array
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$RevokeResponse:
      properties:
        revokedCount:
          description: Revoked Count
          example: 15
          format: int64
          type: integer
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$RevokeRoleRequest:
      properties:
        clusterUuids:
          description: List of Cluster UUID
          items:
            description: List of Cluster UUID
            type: string
          type: array
        userUuids:
          description: List of User ID
          items:
            description: List of User ID
            type: string
          type: array
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$UserInformation:
      description: List of Users
      properties:
        email:
          description: Email
          example: brant@querypie.com
          type: string
        loginId:
          description: Login ID
          example: brant
          type: string
        roleMapUuid:
          description: Role Map UUID
          example: "3"
          type: string
        roleName:
          description: Role Name
          example: Default Role
          type: string
        roleUuid:
          description: Role UUID
          example: "15"
          type: string
        userName:
          description: User Name
          example: Brant Hwang
          type: string
        userUuid:
          description: User UUID
          example: "1"
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$CreateRequest:
      properties:
        awsAccountId:
          description: Aws account id for `CROSS_ACCOUNT_ROLE`
          type: string
        cloudProvider:
          description: Cloud Provider
          enum:
            - AWS
            - AZURE
            - GCP
          example: AWS
          type: string
        cloudRegion:
          description: Region for AWS, Required when cloud provider is AWS
          example: ap-northeast-2
          type: string
        credentialOption:
          description: Credential option
          enum:
            - INSTANCE_PROFILE
            - CROSS_ACCOUNT_ROLE
            - KEY
            - SERVICE_ACCOUNT
            - WORKLOAD_IDENTITY
            - CLIENT_SECRET
            - PROFILE_CREDENTIAL
          example: INSTANCE_PROFILE
          type: string
        cronExpression:
          description: Cron expression
          example: 0 0 6 * * ?
          type: string
        externalId:
          description: External id for `CROSS_ACCOUNT_ROLE`
          type: string
        gcpProjectName:
          description: Google cloud platform project id
          type: string
        name:
          description: Cloud Provider Display Name
          example: AWS
          type: string
        proxyAuthType:
          description: Proxy Authentication Type
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        proxyEnabled:
          description: Proxy usage
          type: boolean
        replicationMode:
          description: Scheduling mode
          enum:
            - MANUAL
            - SCHEDULING
          example: MANUAL
          type: string
        serviceAccountJson:
          description: Google cloud platform service account json
          type: string
        sourceArn:
          description: Role arn of assigned to the pod for `PROFILE_CREDENTIAL`
          type: string
        subscriptionId:
          description: Azure subscription id
          type: string
        synchronizableDatabaseTypes:
          description: Synchronizable Database Type
          items:
            description: Synchronizable Database Type
            enum:
              - AURORA_MY_SQL
              - AURORA_POSTGRESQL
              - MY_SQL
              - POSTGRESQL
              - MARIA_DB
              - ORACLE
              - SQL_SERVER
              - DYNAMO_DB
              - DOCUMENT_DB
              - REDSHIFT
              - ATHENA
              - REDIS
              - BIG_QUERY
            minLength: 1
            type: string
          minLength: 1
          type: array
        targetArn:
          description: Role arn of assigned to the target account for `CROSS_ACCOUNT_ROLE` / `PROFILE_CREDENTIAL`
          type: string
        tenantId:
          description: Azure tenant id
          type: string
      required:
        - cloudProvider
        - credentialOption
        - replicationMode
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$Response:
      properties:
        awsAccountId:
          description: Aws account id for `CROSS_ACCOUNT_ROLE`
          type: string
        cloudProvider:
          description: Cloud Provider
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          example: AWS
          type: string
        cloudRegion:
          description: Region for aws
          example: ap-northeast-2
          type: string
        createdAt:
          description: Approval Updated At
          format: date-time
          type: string
        createdUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        credentialOption:
          description: Credential option
          enum:
            - INSTANCE_PROFILE
            - CROSS_ACCOUNT_ROLE
            - KEY
            - SERVICE_ACCOUNT
            - WORKLOAD_IDENTITY
            - CLIENT_SECRET
            - PROFILE_CREDENTIAL
          example: INSTANCE_PROFILE
          type: string
        cronExpression:
          description: Cron expression
          example: 0 0 6 * * ?
          type: string
        deleted:
          type: boolean
          writeOnly: true
        enabled:
          type: boolean
          writeOnly: true
        externalId:
          description: External id for `CROSS_ACCOUNT_ROLE`
          type: string
        gcpProjectName:
          description: Google cloud platform project id
          type: string
        isDeleted:
          type: boolean
        isEnabled:
          type: boolean
        name:
          description: Cloud Provider Name
          example: Cloud Provider Name
          type: string
        replicationMode:
          description: Scheduling mode
          enum:
            - MANUAL
            - SCHEDULING
          example: MANUAL
          type: string
        serviceAccountJson:
          description: Google cloud platform service account json
          type: string
        sourceArn:
          description: Role arn of assigned to the pod for `PROFILE_CREDENTIAL`
          type: string
        subscriptionId:
          description: Azure subscription id
          type: string
        synchronizableDatabaseTypes:
          description: Synchronizable Database Type
          items:
            description: Synchronizable Database Type
            enum:
              - AURORA_MY_SQL
              - AURORA_POSTGRESQL
              - MY_SQL
              - POSTGRESQL
              - MARIA_DB
              - ORACLE
              - SQL_SERVER
              - DYNAMO_DB
              - DOCUMENT_DB
              - REDSHIFT
              - ATHENA
              - REDIS
              - BIG_QUERY
            type: string
          type: array
        targetArn:
          description: Role arn of assigned to the target account for `CROSS_ACCOUNT_ROLE` / `PROFILE_CREDENTIAL`
          type: string
        tenantId:
          description: Azure tenant id
          type: string
        updatedAt:
          description: Approval Updated At
          format: date-time
          type: string
        updatedUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        uuid:
          description: Cloud Provider UUID
          example: UUID
          type: string
      required:
        - cloudProvider
        - createdAt
        - createdUser
        - isDeleted
        - isEnabled
        - replicationMode
        - updatedAt
        - updatedUser
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$UpdateRequest:
      properties:
        cronExpression:
          description: Cron expression
          example: 0 0 6 * * ?
          type: string
        name:
          description: Cloud Provider Display Name
          example: AWS
          type: string
        proxyAuthType:
          description: Proxy Authentication Type
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        proxyEnabled:
          description: Proxy usage
          type: boolean
        replicationMode:
          description: Scheduling mode
          enum:
            - MANUAL
            - SCHEDULING
          example: MANUAL
          type: string
        synchronizableDatabaseTypes:
          description: Synchronizable Database Type
          items:
            description: Synchronizable Database Type
            enum:
              - AURORA_MY_SQL
              - AURORA_POSTGRESQL
              - MY_SQL
              - POSTGRESQL
              - MARIA_DB
              - ORACLE
              - SQL_SERVER
              - DYNAMO_DB
              - DOCUMENT_DB
              - REDSHIFT
              - ATHENA
              - REDIS
              - BIG_QUERY
            minLength: 1
            type: string
          minLength: 1
          type: array
      required:
        - replicationMode
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$AddClusterRequest:
      properties:
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        port:
          description: Port
          example: 1521
          format: int32
          type: integer
        type:
          description: Host Replication [`Primary`,`Secondary`,`Single`]
          example: Primary
          pattern: Primary|Secondary|Single
          type: string
      required:
        - host
        - port
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ClusterResponse:
      properties:
        deleted:
          description: Delete Status
          example: false
          type: boolean
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        port:
          description: Port
          example: 1521
          format: int32
          type: integer
        type:
          description: Host Replication [`Primary`,`Secondary`,`Single`]
          example: Primary
          type: string
        uuid:
          description: Cluster UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      required:
        - deleted
        - host
        - port
        - type
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ConnectionAccount:
      description: Database Connection Accounts
      properties:
        kerberosProtocols:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocols'
        type:
          default: UIDPWD
          description: Database Connection Accounts
          enum:
            - NOAUTH
            - SASL_KERBEROS
            - SASL_PLAIN_UID
            - UIDPWD
            - SASL_PLAIN_UIDPWD_SSL
            - NOAUTH_SSL
            - DELEGATION_TOKEN
            - O_AUTH_CLIENT_CREDENTIALS
          type: string
        useMultipleDatabaseAccount:
          type: boolean
          writeOnly: true
        usernamePasswords:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswords'
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ConnectionAccountResponse:
      description: Database Connection Accounts
      properties:
        kerberosProtocols:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocolsResponse'
        type:
          default: UIDPWD
          description: Database Connection Accounts
          enum:
            - NOAUTH
            - SASL_KERBEROS
            - SASL_PLAIN_UID
            - UIDPWD
            - SASL_PLAIN_UIDPWD_SSL
            - NOAUTH_SSL
            - DELEGATION_TOKEN
            - O_AUTH_CLIENT_CREDENTIALS
          type: string
        useMultipleDatabaseAccount:
          default: false
          description: Use Multiple Database Account
          type: boolean
        usernamePasswords:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswordsResponse'
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$CreateClusterRequest:
      description: Cluster List
      properties:
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        port:
          description: Port
          example: 1521
          format: int32
          type: integer
        type:
          description: Host Replication [`Primary`,`Secondary`,`Single`]
          example: Primary
          type: string
      required:
        - host
        - port
        - type
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$CreateInstanceRequest:
      properties:
        exposed:
          default: true
          description: Exposed
          example: true
          type: boolean
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        name:
          description: Instance name
          example: querypie-instance
          type: string
      required:
        - exposed
        - host
        - name
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$CreateRequest:
      properties:
        audited:
          description: 'Audit Enabled (Default : True)'
          example: true
          type: boolean
        authenticationDb:
          description: Authentication DB (MongoDB Only)
          type: string
        awsRegionValue:
          description: AWS Region, Ref https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html (DynamoDB Only)
          example: ap-northeast-2
          type: string
        clusters:
          description: Cluster List
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$CreateClusterRequest'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ConnectionAccount'
        connectionOwners:
          description: Connection Owner
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$CreateRequest'
          type: array
        databaseType:
          description: Database Type
          enum:
            - Mysql
            - MariaDB
            - PostgreSQL
            - Redshift
            - SQLServer
            - AzureSQL
            - Oracle
            - Tibero
            - MongoDB
            - BigQuery
            - Presto
            - Trino
            - Hive
            - Cassandra
            - DynamoDB
            - Snowflake
            - Impala
            - Redis
            - SingleStore
            - Hana
          example: MySQL
          type: string
        databaseVersion:
          description: Database Version
          example: 5.7.10
          type: string
        description:
          description: Description
          example: QueryPie Connection description
          type: string
        dmlSnapshot:
          description: 'DML Snapshot Enabled (Default : False)'
          example: false
          type: boolean
        hideCredential:
          description: Hide this credential from Connection List page
          type: boolean
        ledger:
          description: Ledger
          type: boolean
        listenerType:
          description: Oracle Listener Type (Oracle Only)
          enum:
            - SID
            - SERVICE_NAME
          example: SID
          type: string
        maxDisplayRows:
          description: 'Max Display allowed Row Count (-1 is unlimited), Default : -1'
          example: 1000
          format: int32
          type: integer
        maxExportRows:
          description: 'Max Allowed Export Row Count (-1 is unlimited), Default: -1'
          example: 1000
          format: int32
          type: integer
        name:
          description: Connection Name
          example: QueryPie Connection
          type: string
        password:
          description: Database Connection User Password
          example: p@ssword
          type: string
        proxyAuthType:
          description: Proxy authentication type
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        roleName:
          description: Role Name
          type: string
        schemaName:
          description: Schema Name for RDBMS / Keyspace Name for Cassandra
          example: test_db
          type: string
        serviceAccount:
          description: Service Account (BigQuery Only)
          type: string
        useProxy:
          description: Proxy usage
          type: boolean
        userName:
          description: Database Connection User Name
          example: db_user
          type: string
        warehouseName:
          description: Warehouse Name
          type: string
        zoneUuids:
          description: List of Zone UUID
          example:
            - 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          items:
            description: List of Zone UUID
            example: '["63d2cc6d-dd83-4a31-a817-fc13f1fc57a3"]'
            type: string
          type: array
      required:
        - databaseType
        - hideCredential
        - ledger
        - maxDisplayRows
        - maxExportRows
        - name
        - useProxy
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$InstanceResponse:
      properties:
        deleted:
          description: Delete Status
          example: false
          type: boolean
        exposed:
          description: Expose status
          example: false
          type: boolean
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        name:
          description: Instance name
          example: querypie-instance
          type: string
        uuid:
          description: Instance UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      required:
        - deleted
        - host
        - name
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocol:
      description: Database Connection Kerberos Common Account
      properties:
        keytabUuid:
          description: Kerberos Account Ketyab Uuid
          type: string
        principal:
          description: Kerberos Account Principal
          type: string
        realm:
          description: Kerberos Account Realm
          type: string
        serviceName:
          description: Kerberos Account Service Name
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocolResponse:
      description: Database Connection Kerberos Common Account
      properties:
        principal:
          description: Kerberos Account Principal
          type: string
        realm:
          description: Kerberos Account Realm
          type: string
        serviceName:
          description: Kerberos Account Service Name
          type: string
      required:
        - principal
        - realm
        - serviceName
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocols:
      description: Database Connection Kerberos Accounts
      properties:
        common:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocol'
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocolsResponse:
      description: Database Connection Kerberos Accounts
      properties:
        common:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$KerberosProtocolResponse'
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ProxyPortMappingRequest:
      properties:
        clusterGroupUuids:
          description: Cluster group uuids
          items:
            description: Cluster group uuids
            type: string
          type: array
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$Response:
      properties:
        audited:
          description: Audit Enabled
          example: true
          type: boolean
        authenticationDb:
          description: Authentication DB (MongoDB Only)
          type: string
        awsRegionValue:
          description: AWS Region, Ref https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html (DynamoDB Only)
          example: ap-northeast-2
          type: string
        cloudProviderUuid:
          description: Cloud Provider UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
        clusters:
          description: Cluster List
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ClusterResponse'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ConnectionAccountResponse'
        connectionOwners:
          description: Connection Owners
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$Response'
          type: array
        databaseType:
          description: DatabaseType
          example: MySQL
          type: string
        databaseVersion:
          description: Database Version
          example: 5.7.10
          type: string
        deleted:
          description: Delete Status
          example: false
          type: boolean
        dmlSnapshot:
          description: DML Snapshot Enabled
          example: false
          type: boolean
        hideCredential:
          description: Hide this credential from Connection List page
          type: boolean
        ledger:
          description: Ledger
          type: boolean
        listenerType:
          description: Oracle Listener Type (Oracle Only)
          enum:
            - SID
            - SERVICE_NAME
          example: SID
          type: string
        maxDisplayRows:
          description: Max Display allowed Row Count (-1 is unlimited)
          example: 1000
          format: int32
          type: integer
        maxExportRows:
          description: Max Allowed Export Row Count (-1 is unlimited)
          example: 1000
          format: int32
          type: integer
        name:
          description: Connection Name
          example: QueryPie Connection
          type: string
        networkId:
          description: Network ID
          type: string
        proxyAuthType:
          description: Proxy authentication type
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        roleName:
          description: Role Name
          type: string
        schemaName:
          description: Schema Name for RDBMS / Keyspace Name for Cassandra
          example: test_db
          type: string
        tags:
          description: Tags
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ClusterGroupDto$ConnectionTagDto'
          type: array
        useProxy:
          description: Proxy usage
          type: boolean
        uuid:
          description: Cluster Group UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
        warehouseName:
          description: Warehouse Name
          type: string
        zones:
          description: Zones
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          type: array
      required:
        - cloudProviderUuid
        - deleted
        - hideCredential
        - ledger
        - maxDisplayRows
        - maxExportRows
        - name
        - useProxy
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateClusterRequest:
      properties:
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        port:
          description: Port
          example: 1521
          format: int32
          type: integer
        type:
          description: Host Replication [`Primary`,`Secondary`,`Single`]
          example: Primary
          type: string
        uuid:
          description: Cluster UUID
          example: "10"
          type: string
      required:
        - port
        - type
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateInstanceRequest:
      properties:
        exposed:
          default: true
          description: Exposed
          example: true
          type: boolean
        host:
          description: Host
          example: test-db.querypie.com
          type: string
        name:
          description: Instance name
          example: querypie-instance
          type: string
      required:
        - exposed
        - host
        - name
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateRequest:
      properties:
        audited:
          description: Audit Enabled
          example: true
          type: boolean
        authenticationDb:
          description: Authentication DB (MongoDB Only)
          type: string
        awsRegionValue:
          description: AWS Region, Ref https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html (DynamoDB Only)
          example: ap-northeast-2
          type: string
        clusters:
          description: Cluster List
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateClusterRequest'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ConnectionAccount'
        connectionOwners:
          description: Connection Owner
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$UpdateRequest'
          type: array
        databaseVersion:
          description: Database Version
          example: 5.7.10
          type: string
        description:
          description: Description
          example: QueryPie Connection description
          type: string
        dmlSnapshot:
          description: DML Snapshot Enabled
          example: false
          type: boolean
        hideCredential:
          description: Hide this credential from Connection List page
          type: boolean
        ledger:
          description: Ledger
          type: boolean
        listenerType:
          description: Oracle Listener Type (Oracle Only)
          enum:
            - SID
            - SERVICE_NAME
          example: SID
          type: string
        maxDisplayRows:
          description: Max Display allowed Row Count (-1 is unlimited)
          example: 1000
          format: int32
          type: integer
        maxExportRows:
          description: Max Allowed Export Row Count (-1 is unlimited)
          example: 1000
          format: int32
          type: integer
        name:
          description: Connection Name
          example: QueryPie Connection
          type: string
        proxyAuthType:
          description: Proxy authentication type
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        roleName:
          description: Role Name
          type: string
        schemaName:
          description: Schema Name for RDBMS / Keyspace Name for Cassandra
          example: test_db
          type: string
        serviceAccount:
          description: Service Account (BigQuery Only)
          type: string
        useProxy:
          description: Proxy usage
          type: boolean
        warehouseName:
          description: Warehouse Name
          type: string
        zoneUuids:
          description: List of Zone UUID
          example: UUID
          items:
            description: List of Zone UUID
            example: UUID
            type: string
          type: array
      required:
        - hideCredential
        - ledger
        - maxDisplayRows
        - maxExportRows
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePassword:
      description: Database Connection Username-Password Admin Accounts
      properties:
        password:
          description: Username-Password password
          type: string
        username:
          description: Username-Password username
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswordResponse:
      description: Database Connection Username-Password Admin Accounts
      properties:
        username:
          description: Username-Password username
          type: string
      required:
        - username
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswords:
      description: Database Connection Username-Password Accounts
      properties:
        admin:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePassword'
        common:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePassword'
        proxy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePassword'
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswordsResponse:
      description: Database Connection Username-Password Accounts
      properties:
        admin:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswordResponse'
        common:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswordResponse'
        proxy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UsernamePasswordResponse'
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalMaskingPatternDto$Response:
      properties:
        description:
          description: Masking Description
          example: Masking Description
          type: string
        detectingPattern:
          description: Masking Detecting Pattern
          example: (?:^|\b)\d{6}\p{Pd}\d{7}(?:$|\b)
          type: string
        maskingPattern:
          description: Masking Pattern
          example: (?:^|\b)\d{6}\p{Pd}\d{7}(?:$|\b)
          type: string
        uuid:
          description: Masking Pattern UUID
          example: 5063396b-5047-44ca-833a-61c0e4f6dcd9
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$CreateRequest:
      properties:
        ipBands:
          description: IP Bands(CIDR)
          example: 0.0.0.0/0
          type: string
        name:
          description: name
          type: string
      required:
        - ipBands
        - name
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$UpdateRequest:
      properties:
        ipBands:
          description: IP Bands(CIDR)
          example: 0.0.0.0/0
          type: string
        name:
          description: name
          type: string
      required:
        - ipBands
        - name
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse:
      properties:
        createdAt:
          description: Created At
          format: date-time
          type: string
        ipBands:
          description: IP Bands
          example: CIDR or IP
          type: string
        name:
          description: Zone Name
          example: Zone Name
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: Zone UUID
          example: UUID
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$CreateRequest:
      properties:
        clusterGroupUuid:
          description: Cluster Group UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
        policyType:
          description: Policy Type
          enum:
            - DATA_LEVEL
            - DATA_ACCESS
            - DATA_MASKING
            - NOTIFICATION
            - LEDGER
          example: DATA_ACCESS
          type: string
        title:
          description: Title
          example: Policy Title
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataAccessCreateRequest:
      properties:
        allowedUserUuids:
          description: White List User UUID List
          example:
            - 5063396b-5047-44ca-833a-61c0e4f6dcd9
            - 16238493-5047-44ca-833a-61c0e4f6dcd1
          items:
            description: White List User UUID List
            example: '["5063396b-5047-44ca-833a-61c0e4f6dcd9","16238493-5047-44ca-833a-61c0e4f6dcd1"]'
            type: string
          type: array
        objectPath:
          description: Object Path
          example:
            - table
            - column
          items:
            description: Object Path
            example: '["table","column"]'
            type: string
          type: array
        objectType:
          description: Object Type
          enum:
            - TABLE
            - COLUMN
          example: COLUMN
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataAccessResponse:
      properties:
        accessRule:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.data.access.AccessRule'
        allowedUserUuids:
          description: White List User UUID List
          example:
            - 5063396b-5047-44ca-833a-61c0e4f6dcd9
            - 16238493-5047-44ca-833a-61c0e4f6dcd1
          items:
            description: White List User UUID List
            example: '["5063396b-5047-44ca-833a-61c0e4f6dcd9","16238493-5047-44ca-833a-61c0e4f6dcd1"]'
            type: string
          type: array
        createdAt:
          description: Updated At
          format: date-time
          type: string
        objectPath:
          description: Object Path
          example:
            - table
            - column
          items:
            description: Object Path
            example: '["table","column"]'
            type: string
          type: array
        objectPathElement:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPathElement'
        objectType:
          description: Object Type
          enum:
            - TABLE
            - COLUMN
          example: COLUMN
          type: string
        policyUuid:
          description: Policy UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
        ruleUsers:
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.rule.user.PolicyRuleUser'
          type: array
          writeOnly: true
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: Rule UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
      required:
        - allowedUserUuids
        - objectPath
        - policyUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataAccessUpdateRequest:
      properties:
        allowedUserUuids:
          description: White List User UUID List
          example:
            - 5063396b-5047-44ca-833a-61c0e4f6dcd9
            - 16238493-5047-44ca-833a-61c0e4f6dcd1
          items:
            description: White List User UUID List
            example: '["5063396b-5047-44ca-833a-61c0e4f6dcd9","16238493-5047-44ca-833a-61c0e4f6dcd1"]'
            type: string
          type: array
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataLevelCreateRequest:
      properties:
        level:
          description: Sensitive Level (1~3)
          example: 1
          format: int32
          maximum: 3
          minimum: 1
          type: integer
        objectPath:
          description: Object Path
          example:
            - table
            - column
          items:
            description: Object Path
            example: '["table","column"]'
            type: string
          type: array
        objectType:
          description: Object Type
          enum:
            - TABLE
            - COLUMN
          example: COLUMN
          type: string
      required:
        - level
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataLevelResponse:
      properties:
        createdAt:
          description: Updated At
          format: date-time
          type: string
        dataLevel:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.data.level.PolicyDataLevel'
        level:
          description: Sensitive Level (1~3)
          example: 1
          format: int32
          type: integer
        objectPath:
          description: Object Path
          example:
            - table
            - column
          items:
            description: Object Path
            example: '["table","column"]'
            type: string
          type: array
        objectPathElement:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPathElement'
        objectType:
          description: Object Type
          enum:
            - TABLE
            - COLUMN
          example: COLUMN
          type: string
        policyUuid:
          description: Policy UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: Rule UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
      required:
        - level
        - objectPath
        - policyUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataLevelUpdateRequest:
      properties:
        level:
          description: Sensitive Level (1~3)
          example: 1
          format: int32
          maximum: 3
          minimum: 1
          type: integer
      required:
        - level
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataMaskingCreateRequest:
      properties:
        objectPath:
          description: Object Path
          example:
            - table
            - column
          items:
            description: Object Path
            example: '["table","column"]'
            type: string
          type: array
        objectType:
          description: Object Type
          enum:
            - TABLE
            - COLUMN
          example: COLUMN
          type: string
        patternUuid:
          description: Masking Pattern UUID
          example: 5063396b-5047-44ca-833a-61c0e4f6dcd9
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataMaskingResponse:
      properties:
        createdAt:
          description: Updated At
          format: date-time
          type: string
        maskingRule:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.data.masking.rules.MaskingRule'
        objectPath:
          description: Object Path
          example:
            - table
            - column
          items:
            description: Object Path
            example: '["table","column"]'
            type: string
          type: array
        objectPathElement:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPathElement'
        objectType:
          description: Object Type
          enum:
            - TABLE
            - COLUMN
          example: COLUMN
          type: string
        patternUuid:
          description: Masking Pattern UUID
          example: 5063396b-5047-44ca-833a-61c0e4f6dcd9
          type: string
        policyUuid:
          description: Policy UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: Rule UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
      required:
        - objectPath
        - patternUuid
        - policyUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataMaskingUpdateRequest:
      properties:
        patternUuid:
          description: Masking Pattern UUID
          example: 5063396b-5047-44ca-833a-61c0e4f6dcd9
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$Response:
      properties:
        clusterGroupUuid:
          description: Cluster Group UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
        createdAt:
          description: Created At
          format: date-time
          type: string
        createdUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        enabled:
          description: Enabled
          example: true
          type: boolean
        numberOfRules:
          description: Number of rules
          example: 10
          format: int64
          type: integer
        policyType:
          description: Policy Type
          enum:
            - DATA_LEVEL
            - DATA_ACCESS
            - DATA_MASKING
            - NOTIFICATION
            - LEDGER
          example: DATA_LEVEL, DATA_ACCESS, DATA_MASKING, NOTIFICATION, or LEDGER
          type: string
        title:
          description: Title
          example: Policy Title
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        updatedUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        uuid:
          description: Policy UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
      required:
        - enabled
        - numberOfRules
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$RuleResponse:
      properties:
        createdAt:
          description: Updated At
          format: date-time
          type: string
        objectPath:
          description: Object Path
          example:
            - table
            - column
          items:
            description: Object Path
            example: '["table","column"]'
            type: string
          type: array
        objectType:
          description: Object Type
          enum:
            - TABLE
            - COLUMN
          example: COLUMN
          type: string
        policyUuid:
          description: Policy UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: Rule UUID
          example: 35cfa847-165c-48b5-bb4e-af271e490f19
          type: string
      required:
        - objectPath
        - policyUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$UpdateRequest:
      properties:
        title:
          description: Title
          example: Policy Title
          type: string
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyNotificationDto$Response:
      description: Object list per entry
      properties:
        alertType:
          description: Alert Type
          example: SQL Execution
          type: string
        lastAt:
          description: Last Event Time
          format: date-time
          type: string
        lastStatus:
          description: Last Event Status
          enum:
            - UNDEFINED
            - SUCCESS
            - FAIL
          example: SUCCESS
          type: string
        name:
          description: Name
          example: SQL Execution Alert
          type: string
        template:
          description: Message Template
          example: '{{userName}} executed {{expRows}} rows.'
          type: string
        uuid:
          description: Alert UUID
          example: a5ac2279-b715-4819-a00d-daba81739057
          type: string
      required:
        - alertType
        - lastStatus
        - name
        - template
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalProxyDto$CreateRequest:
      properties:
        agentPort:
          description: Agent port
          example: 9000
          format: int32
          type: integer
        host:
          description: Proxy host name
          example: proxy.querypie.com
          type: string
        name:
          description: Name
          example: PROXY
          type: string
        networkId:
          description: Network ID
          example: 41abc
          nullable: true
          type: string
        portFrom:
          description: Port from
          example: 50000
          format: int32
          type: integer
        portTo:
          description: Port to
          example: 51000
          format: int32
          type: integer
      required:
        - host
        - name
        - portFrom
        - portTo
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalProxyDto$ProxyResponse:
      properties:
        agentPort:
          description: Agent port
          example: 9000
          format: int32
          type: integer
        enabled:
          description: Proxy enabled
          example: true
          type: boolean
        host:
          description: Proxy host name
          example: proxy.querypie.com
          type: string
        networkId:
          description: Network ID
          example: 41abc
          type: string
        portFrom:
          description: Port from
          example: 50000
          format: int32
          type: integer
        portTo:
          description: Port to
          example: 51000
          format: int32
          type: integer
        proxy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.proxy.Proxy'
        uuid:
          description: Proxy UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      required:
        - enabled
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalProxyDto$Response:
      properties:
        otlEnabled:
          description: OTL enabled
          example: true
          type: boolean
        proxies:
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalProxyDto$ProxyResponse'
          type: array
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$CreateRoleRequest:
      properties:
        canCopyClipboard:
          description: Can Copy Clipboard
          example: true
          type: boolean
        canExport:
          description: Can Export
          example: true
          type: boolean
        canImport:
          description: Can Import
          example: true
          type: boolean
        description:
          description: Description
          example: Default Role Description
          type: string
        name:
          description: Name
          example: Default Role
          type: string
        privilegeTypes:
          description: Privilege Type
          example: SELECT,INSERT
          items:
            description: Privilege Type
            example: SELECT,INSERT
            type: string
          type: array
          writeOnly: true
        privilegeVendor:
          description: Privilege vendor
          enum:
            - SQL
            - REDIS
          example: SQL
          type: string
          writeOnly: true
        used:
          description: Used or Not
          example: true
          type: boolean
      required:
        - canCopyClipboard
        - canExport
        - canImport
        - name
        - privilegeTypes
        - privilegeVendor
        - used
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$RoleResponse:
      properties:
        canCopyClipboard:
          description: Can Copy Clipboard
          example: true
          type: boolean
        canExport:
          description: Can Export
          example: true
          type: boolean
        canImport:
          description: Can Import
          example: true
          type: boolean
        createdAt:
          description: Created At
          format: date-time
          type: string
        description:
          description: Description
          example: Default Role Description
          type: string
        name:
          description: Name
          example: Default Role
          type: string
        privilegeTypes:
          description: Privilege Type
          example: SELECT,INSERT
          items:
            description: Privilege Type
            example: SELECT,INSERT
            type: string
          type: array
          writeOnly: true
        privilegeVendor:
          description: Privilege vendor
          enum:
            - SQL
            - REDIS
          example: SQL
          type: string
          writeOnly: true
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        used:
          description: Used or Not
          example: true
          type: boolean
        uuid:
          description: UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      required:
        - canCopyClipboard
        - canExport
        - canImport
        - name
        - privilegeTypes
        - privilegeVendor
        - used
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$UpdateRoleRequest:
      properties:
        canCopyClipboard:
          description: Can Copy Clipboard
          example: true
          type: boolean
        canExport:
          description: Can Export
          example: true
          type: boolean
        canImport:
          description: Can Import
          example: true
          type: boolean
        description:
          description: Description
          example: Default Role Description
          type: string
        name:
          description: Name
          example: Default Role
          type: string
        privilegeTypes:
          description: Privilege Type
          example: SELECT,INSERT
          items:
            description: Privilege Type
            example: SELECT,INSERT
            type: string
          type: array
          writeOnly: true
        privilegeVendor:
          description: Privilege vendor
          enum:
            - SQL
            - REDIS
          example: SQL
          type: string
          writeOnly: true
        used:
          description: Used or Not
          example: true
          type: boolean
      required:
        - canCopyClipboard
        - canExport
        - canImport
        - name
        - privilegeTypes
        - privilegeVendor
        - used
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalSqlAuditLogDto$AuditLogResponse:
      properties:
        actionType:
          description: ActionType
          example: CONNECTION
          type: string
        clusterGroupId:
          description: Cluster Group ID
          example: 1
          format: int64
          type: integer
        clusterGroupName:
          description: Cluster Group Name
          example: Test Cluster
          type: string
        clusterId:
          description: ClusterID
          example: 1
          format: int64
          type: integer
        createdAt:
          description: Created At
          format: date-time
          type: string
        databaseType:
          description: DatabaseType
          enum:
            - ALL
            - MySQL
            - MariaDB
            - PostgreSQL
            - Hana
            - Snowflake
            - Redshift
            - BigQuery
            - Presto
            - SQLServer
            - AzureSQL
            - Oracle
            - Tibero
            - Hive
            - MongoDB
            - HBase
            - Cassandra
            - DynamoDB
            - Trino
            - Impala
            - Greenplum
            - EnterpriseDB
            - DocumentDB
            - ScyllaDB
            - Athena
            - Redis
            - SingleStore
          example: MySQL
          type: string
        dbHost:
          description: DB Host
          example: db.host.com
          type: string
        dbName:
          description: Database Name
          example: information_schema
          type: string
        dbUser:
          description: Database User Name
          example: system
          type: string
        email:
          description: Email
          example: brant@querypie.com
          type: string
        execIp:
          description: Executed Machine IP
          example: 192.168.0.1
          type: string
        execMillis:
          description: Execution Time (Millis)
          example: 200
          format: int32
          type: integer
        execResult:
          deprecated: true
          type: boolean
          writeOnly: true
        executedAt:
          description: Executed At
          format: date-time
          type: string
        expRows:
          description: Executed Rows
          example: 200
          format: int64
          type: integer
        hostName:
          description: Executor's Host Name
          example: Desktop-PC-No-1
          type: string
        id:
          description: ID
          format: int64
          type: integer
        isExecResult:
          deprecated: true
          type: boolean
        isPrevented:
          type: boolean
        prevented:
          type: boolean
          writeOnly: true
        privilegeTypes:
          description: Privilege Types
          example: SELECT, DDL_ALTER
          type: string
        reasonComment:
          description: Reason Comment
          example: '...'
          type: string
        replicationType:
          description: Replication Type
          example: MASTER / SLAVE / SINGLE
          type: string
        sqlText:
          description: DML Text
          example: DML Statement
          type: string
        sqlType:
          description: DML Type
          example: select / update / delete ...
          type: string
        state:
          description: State
          enum:
            - SUCCESS
            - FAILURE
            - STOPPED
            - RUNNING
            - ABORTED
          example: SUCCESS, FAILURE, STOPPED, PREVENTED, RUNNING, ABORTED
          type: string
        userId:
          description: User ID
          example: 1
          format: int64
          type: integer
        userName:
          description: User Name
          example: Brant
          type: string
        uuid:
          description: UUID
          example: UUID
          type: string
      required:
        - isExecResult
        - isPrevented
      type: object
    0.9_com.chequer.querypie.dbam.controller.dto.ExternalUserAuthHistoryDto$Response:
      description: Object list per entry
      properties:
        actionAt:
          description: 액션 생성일자
          format: date-time
          type: string
        actionType:
          description: 액션 종류
          enum:
            - CONNECT
            - DISCONNECT
          example: CONNECT
          type: string
        authType:
          description: 인증 종류 (LDAP, DB, ETC)
          example: LDAP
          type: string
        clientIp:
          description: 클라이언트 IP
          example: 192.168.0.1
          type: string
        cloudProviderName:
          description: Cloud Provider Name
          example: Dev
          type: string
        cloudProviderType:
          description: Cloud Provider Type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          example: AWS | GCP | AZURE
          type: string
        cloudProviderUuid:
          description: Cloud Provider UUID
          example: UUID
          type: string
        clusterGroupName:
          description: 클러스터 그룹 이름
          example: QueryPie Cluster Group
          type: string
        dbHost:
          description: DB Host
          example: user01
          type: string
        dbUser:
          description: DB 사용자 ID
          example: user01
          type: string
        error:
          description: 에러 여부
          example: false
          type: boolean
        errorMessage:
          description: 에러 메시지
          example: SQLException
          type: string
        hostName:
          description: 인스턴스 호스트 이름
          example: cluster.chequer.com
          type: string
        id:
          description: 사용자 인증 히스토리 ID
          example: 1
          format: int64
          type: integer
        replicationType:
          description: Replication Type
          enum:
            - MASTER
            - SLAVE
            - SINGLE
          example: MASTER
          type: string
        userId:
          description: 사용자 ID
          example: 1
          format: int64
          type: integer
        userLoginId:
          description: 사용자 아이디
          example: brant
          type: string
        userName:
          description: 사용자 이름
          example: Brant Hwang
          type: string
      required:
        - error
        - id
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.Policy:
      properties:
        createdAt:
          format: date-time
          type: string
        createdBy:
          format: int64
          type: integer
        deleted:
          type: boolean
        enabled:
          type: boolean
        id:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        objectType:
          enum:
            - UNDEFINED
            - SYSTEM
            - CLUSTER_GROUP
            - CLUSTER
            - INSTANCE
            - CLOUD_PROVIDER
            - NETWORK_ZONE
            - SERVER
            - SERVER_GROUP
            - SERVER_PROVIDER
            - K8S_CLUSTER
            - KUBE_CLUSTER_PROVIDER
            - DISCOVERY_JOB
            - SERVER_PASSWORD_PROVISION_JOB
            - REPORT_FILE_DELETE_JOB
          type: string
        objectUuid:
          type: string
        policyUuid:
          type: string
        title:
          type: string
        type:
          enum:
            - DATA_LEVEL
            - DATA_ACCESS
            - DATA_MASKING
            - NOTIFICATION
            - LEDGER
          type: string
        updatedAt:
          format: date-time
          type: string
        updatedBy:
          format: int64
          type: integer
        uuid:
          type: string
        version:
          format: int64
          type: integer
      required:
        - deleted
        - enabled
        - isDeleted
        - objectType
        - objectUuid
        - policyUuid
        - title
        - type
        - uuid
        - version
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.data.access.AccessRule:
      properties:
        createdAt:
          format: date-time
          type: string
        createdBy:
          format: int64
          type: integer
        deleted:
          type: boolean
        id:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        objectPathUuid:
          type: string
        policy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.Policy'
        policyType:
          enum:
            - DATA_LEVEL
            - DATA_ACCESS
            - DATA_MASKING
            - NOTIFICATION
            - LEDGER
          type: string
        policyUuid:
          type: string
        updatedAt:
          format: date-time
          type: string
        updatedBy:
          format: int64
          type: integer
        uuid:
          type: string
      required:
        - deleted
        - isDeleted
        - objectPathUuid
        - policyType
        - policyUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.data.level.PolicyDataLevel:
      properties:
        createdAt:
          format: date-time
          type: string
        createdBy:
          format: int64
          type: integer
        deleted:
          type: boolean
        events:
          format: int32
          type: integer
        id:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        level:
          format: int32
          type: integer
        objectPathUuid:
          type: string
        policy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.Policy'
        policyType:
          enum:
            - DATA_LEVEL
            - DATA_ACCESS
            - DATA_MASKING
            - NOTIFICATION
            - LEDGER
          type: string
        policyUuid:
          type: string
        updatedAt:
          format: date-time
          type: string
        updatedBy:
          format: int64
          type: integer
        uuid:
          type: string
      required:
        - deleted
        - events
        - isDeleted
        - level
        - objectPathUuid
        - policyType
        - policyUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.data.masking.pattern.MaskingPattern:
      properties:
        createdAt:
          format: date-time
          type: string
        createdBy:
          format: int64
          type: integer
        deleted:
          type: boolean
        description:
          type: string
        detectingPattern:
          type: string
        id:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        maskingPattern:
          type: string
        rawData:
          type: string
        updatedAt:
          format: date-time
          type: string
        updatedBy:
          format: int64
          type: integer
        uuid:
          type: string
      required:
        - deleted
        - description
        - detectingPattern
        - isDeleted
        - maskingPattern
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.data.masking.rules.MaskingRule:
      properties:
        createdAt:
          format: date-time
          type: string
        createdBy:
          format: int64
          type: integer
        deleted:
          type: boolean
        id:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        objectPathUuid:
          type: string
        pattern:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.data.masking.pattern.MaskingPattern'
        patternId:
          format: int64
          type: integer
        policy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.Policy'
        policyType:
          enum:
            - DATA_LEVEL
            - DATA_ACCESS
            - DATA_MASKING
            - NOTIFICATION
            - LEDGER
          type: string
        policyUuid:
          type: string
        updatedAt:
          format: date-time
          type: string
        updatedBy:
          format: int64
          type: integer
        uuid:
          type: string
      required:
        - deleted
        - isDeleted
        - objectPathUuid
        - patternId
        - policyType
        - policyUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPath:
      properties:
        fullPathHash:
          type: string
        id:
          format: int64
          type: integer
        type:
          enum:
            - UNKNOWN
            - DATABASE
            - TABLE
            - COLUMN
          type: string
        uuid:
          type: string
      required:
        - fullPathHash
        - type
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPathElement:
      properties:
        objectPath:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPath'
        objectPathItems:
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPathItem'
          type: array
      required:
        - objectPath
        - objectPathItems
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.object.path.ObjectPathItem:
      properties:
        id:
          format: int64
          type: integer
        objectPathUuid:
          type: string
        value:
          type: string
      required:
        - objectPathUuid
        - value
      type: object
    0.9_com.chequer.querypie.dbam.domain.policy.rule.user.PolicyRuleUser:
      properties:
        createdAt:
          format: date-time
          type: string
        createdBy:
          format: int64
          type: integer
        deleted:
          type: boolean
          writeOnly: true
        id:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        policyType:
          enum:
            - DATA_LEVEL
            - DATA_ACCESS
            - DATA_MASKING
            - NOTIFICATION
            - LEDGER
          type: string
        ruleUuid:
          type: string
        updatedAt:
          format: date-time
          type: string
        updatedBy:
          format: int64
          type: integer
        userUuid:
          type: string
        uuid:
          type: string
      required:
        - isDeleted
        - policyType
        - ruleUuid
        - userUuid
        - uuid
      type: object
    0.9_com.chequer.querypie.dbam.domain.proxy.Proxy:
      properties:
        agentPort:
          format: int32
          type: integer
        createdAt:
          format: date-time
          type: string
        createdBy:
          format: int64
          type: integer
        deleted:
          type: boolean
        enabled:
          type: boolean
        host:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        networkId:
          type: string
        portFrom:
          format: int32
          type: integer
        portTo:
          format: int32
          type: integer
        updatedAt:
          format: date-time
          type: string
        updatedBy:
          format: int64
          type: integer
        uuid:
          type: string
      required:
        - deleted
        - enabled
        - host
        - portFrom
        - portTo
        - uuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.AdminUserDto$PartialResponse:
      description: User
      properties:
        active:
          type: boolean
        authProvider:
          enum:
            - swivelsecure
            - db
            - ldap
            - okta
            - onelogin
            - saml
            - custom
          type: string
        email:
          type: string
        id:
          format: int64
          type: integer
        loginId:
          type: string
        name:
          type: string
        type:
          enum:
            - USER
            - GROUP
            - API
          type: string
        uuid:
          type: string
      required:
        - active
        - authProvider
        - email
        - id
        - loginId
        - name
        - type
        - uuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$CreateRequest:
      properties:
        email:
          description: Email
          example: brant@querypie.com
          type: string
        loginId:
          description: Login ID
          example: brant
          type: string
        name:
          description: Name
          example: Brant
          type: string
        password:
          description: Password
          type: string
      required:
        - email
        - loginId
        - name
        - password
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$Response:
      properties:
        createdAt:
          description: Created At
          format: date-time
          type: string
        deleted:
          description: Deleted
          example: false
          type: boolean
        email:
          description: Email
          example: brant@querypie.com
          type: string
        expired:
          description: Expired
          example: false
          type: boolean
        lastLoginAt:
          description: Last Login At
          format: date-time
          type: string
        locked:
          description: Locked
          example: false
          type: boolean
        loginId:
          description: Login ID
          example: brant
          type: string
        name:
          description: Name
          example: Brant
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        userRoles:
          description: UserRoles
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$Response'
          type: array
        uuid:
          description: UUID
          example: UUID
          type: string
      required:
        - deleted
        - expired
        - locked
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$UpdateRequest:
      properties:
        email:
          description: Email
          example: brant@querypie.com
          type: string
        name:
          description: Name
          example: Brant
          type: string
        password:
          description: Password
          type: string
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$UserChangeStatusRequest:
      properties:
        reasonForChangeStatus:
          description: Reason for change
          type: string
        uuid:
          description: Target user uuid
          type: string
      required:
        - reasonForChangeStatus
        - uuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$CreateRequest:
      properties:
        name:
          description: Name
          example: Brant
          type: string
      required:
        - name
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$Response:
      properties:
        createdAt:
          description: Created At
          format: date-time
          type: string
        name:
          description: Name
          example: Brant
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: UUID
          example: UUID
          type: string
      required:
        - createdAt
        - name
        - updatedAt
        - uuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$UpdateRequest:
      properties:
        name:
          description: Name
          example: Brant
          type: string
      required:
        - name
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse:
      description: Updated User
      example: User Information
      properties:
        email:
          type: string
        loginId:
          type: string
        name:
          type: string
        uuid:
          type: string
      required:
        - loginId
        - name
        - uuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.RoleDto$Response:
      description: Role
      properties:
        name:
          description: Role Name
          type: string
        uuid:
          description: Role UUID
          type: string
      required:
        - name
        - uuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.SystemAuthHistoryDto$Response:
      description: Object list per entry
      properties:
        actionAt:
          description: Action At
          format: date-time
          type: string
        actionBy:
          description: Action By
          format: int64
          type: integer
        actionByUserName:
          description: User Name of Action By
          type: string
        actionType:
          description: Action Type
          enum:
            - LOGIN
            - LOGOUT
            - LOCKED
            - EXPIRED
            - LOCKED_MANUALLY
            - UNLOCK
            - PASSWORD_RESET_PUSH
          type: string
        clientIp:
          description: Client IP
          type: string
        createdAt:
          description: Created At
          format: date-time
          type: string
        createdBy:
          description: Updated By
          format: int64
          type: integer
        email:
          description: User Email
          type: string
        error:
          description: Error
          type: boolean
        hostName:
          description: Host
          type: string
        id:
          format: int64
          type: integer
        loginId:
          description: User Login ID
          type: string
        message:
          description: Message
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        updatedBy:
          description: Updated By
          format: int64
          type: integer
        userId:
          description: User ID
          format: int64
          type: integer
        userName:
          description: User Name
          type: string
      required:
        - actionAt
        - actionType
        - clientIp
        - createdAt
        - createdBy
        - error
        - id
        - loginId
        - updatedAt
        - updatedBy
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$CreateRequest:
      description: Connection Owner
      properties:
        roleUuid:
          description: Role UUID
          example: UUID
          type: string
        userUuid:
          description: User UUID
          example: UUID
          type: string
      required:
        - roleUuid
        - userUuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$Response:
      description: Object list per entry
      properties:
        objectType:
          description: Object Type
          enum:
            - UNDEFINED
            - SYSTEM
            - CLUSTER_GROUP
            - CLUSTER
            - INSTANCE
            - CLOUD_PROVIDER
            - NETWORK_ZONE
            - SERVER
            - SERVER_GROUP
            - SERVER_PROVIDER
            - K8S_CLUSTER
            - KUBE_CLUSTER_PROVIDER
            - DISCOVERY_JOB
            - SERVER_PASSWORD_PROVISION_JOB
            - REPORT_FILE_DELETE_JOB
          example: COMPANY
          type: string
        objectUuid:
          description: Object UUID
          type: string
        role:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.RoleDto$Response'
        user:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.AdminUserDto$PartialResponse'
        uuid:
          description: UserRole UUID
          type: string
      required:
        - objectType
        - objectUuid
        - role
        - uuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$UpdateRequest:
      description: Connection Owner
      properties:
        roleUuid:
          description: Role UUID
          example: UUID
          type: string
        userUuid:
          description: User UUID
          example: UUID
          type: string
      required:
        - roleUuid
        - userUuid
      type: object
    0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$UserAccessLevelUpdateRequest:
      properties:
        roleUuids:
          description: Role UUID
          example: UUID
          items:
            description: Role UUID
            example: UUID
            type: string
          type: array
      required:
        - roleUuids
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalAccessApprovalDto$Response:
      description: Object list per entry
      properties:
        approvalStatus:
          description: Approval Status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          example: PENDING
          type: string
        connections:
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalConnectionDto$Response'
          type: array
        createdAt:
          description: Approval Created At
          format: date-time
          type: string
        createdUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        description:
          description: Approval Description
          example: Approval Description
          type: string
        id:
          description: Approval ID
          format: int64
          type: integer
        lines:
          description: Assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalLineDto$Response'
          type: array
        title:
          description: Approval Title
          example: Approval Title
          type: string
        type:
          description: Approval Type
          enum:
            - SQL
            - ACCESS
            - EXPORT
          example: ACCESS
          type: string
        updatedAt:
          description: Approval Updated At
          format: date-time
          type: string
        uuid:
          description: Approval UUID
          example: UUID
          type: string
      required:
        - approvalStatus
        - createdAt
        - createdUser
        - id
        - type
        - updatedAt
        - uuid
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalConnectionDto$Response:
      properties:
        clusterGroupDescription:
          description: Cluster Group Description
          example: Cluster Group description
          type: string
        clusterGroupName:
          description: Cluster Group Name
          example: Cluster Group Name
          type: string
        clusterGroupUuid:
          description: Cluster Group UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
        clusterHost:
          description: Cluster Host
          example: Cluster Host
          type: string
        clusterReplicationType:
          description: Cluster Replication Type
          example: '`MASTER`, `SLAVE`, `SINGLE`'
          type: string
        clusterUuid:
          description: Cluster UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
        databaseName:
          description: Database Name
          example: Database Name
          type: string
        roleName:
          description: Role Name
          example: Role Name
          type: string
        roleUuid:
          description: Role UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
        schemaName:
          description: Schema Name
          example: Schema Name
          type: string
        uuid:
          description: UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      required:
        - clusterGroupUuid
        - clusterUuid
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalDto$Response:
      description: Object list per entry
      properties:
        approvalStatus:
          description: Approval Status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          example: PENDING
          type: string
        createdAt:
          description: Approval Created At
          format: date-time
          type: string
        createdUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        description:
          description: Approval Description
          example: Approval Description
          type: string
        id:
          description: Approval ID
          format: int64
          type: integer
        lines:
          description: Assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalLineDto$Response'
          type: array
        title:
          description: Approval Title
          example: Approval Title
          type: string
        type:
          description: Approval Type
          enum:
            - SQL
            - ACCESS
            - EXPORT
          example: ACCESS
          type: string
        updatedAt:
          description: Approval Updated At
          format: date-time
          type: string
        uuid:
          description: Approval UUID
          example: UUID
          type: string
      required:
        - approvalStatus
        - createdAt
        - createdUser
        - id
        - type
        - updatedAt
        - uuid
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalDto$ReviewRequest:
      properties:
        connectionUuids:
          description: Approval Connection UUID
          example:
            - 97b155ec-a280-11eb-beef-0ad7e958898e
            - b05e480e-b7bc-4f7e-82fe-d23d805c51bf
          items:
            description: Approval Connection UUID
            example: '["97b155ec-a280-11eb-beef-0ad7e958898e","b05e480e-b7bc-4f7e-82fe-d23d805c51bf"]'
            type: string
          type: array
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalLineDto$Response:
      description: Assignees
      properties:
        actionAt:
          description: Approval action At
          format: date-time
          type: string
        comment:
          description: Approval Line Comment
          example: comment
          type: string
        status:
          description: Approval Line Status
          enum:
            - NONE
            - PENDING
            - CANCELED
            - APPROVED
            - REJECTED
            - EXECUTED
            - UNREAD
            - CONFIRMED
          example: APPROVED
          type: string
        step:
          description: Approval Line Step
          example: 1
          format: int32
          type: integer
        type:
          description: Approval Line Type
          enum:
            - APPROVER
            - EXECUTOR
            - REVIEWER
          example: APPROVER
          type: string
        userDepartment:
          type: string
        userEmail:
          type: string
        userLoginId:
          type: string
        userName:
          type: string
        userType:
          enum:
            - USER
            - GROUP
            - API
          type: string
        userUuid:
          type: string
      required:
        - actionAt
        - status
        - step
        - type
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleDto$PartialResponse:
      description: Object list per entry
      properties:
        createdAt:
          description: Created At
          format: date-time
          type: string
        name:
          description: NAME
          example: Default Rule
          type: string
        requestType:
          description: Request Type
          enum:
            - SQL
            - ACCESS
            - EXPORT
          example: SQL
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleDto$Response:
      properties:
        createdAt:
          description: Created At
          format: date-time
          type: string
        executionCondition:
          description: Execution Condition
          enum:
            - ADMIN_ONLY
            - ALL_USERS
            - FIXED
            - CONNECTION_OWNER
            - SERVER_GROUP_OWNER
          example: ADMIN_ONLY
          type: string
        lines:
          description: Approval Lines
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleLineDto$Response'
          type: array
        name:
          description: NAME
          example: Default Rule
          type: string
        requestType:
          description: Request Type
          enum:
            - SQL
            - ACCESS
            - EXPORT
          example: SQL
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        urgentMode:
          description: Urgent Mode
          type: boolean
        uuid:
          description: UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      required:
        - urgentMode
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleLineDto$Response:
      description: Approval Lines
      properties:
        resourceType:
          description: Resource Type
          enum:
            - USER
            - GROUP
          example: USER
          type: string
        resourceUuid:
          description: UUID of Resource Type
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
        step:
          default: 0
          description: Step
          example: 1
          format: int32
          type: integer
        type:
          description: Approval Line Type
          enum:
            - APPROVER
            - EXECUTOR
            - REVIEWER
          example: APPROVER
          type: string
      required:
        - step
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$AccessRequestResponse:
      properties:
        accessControls:
          description: Approval accesses
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$AccessRequestResponse$AccessControl'
          type: array
        approvalStatus:
          description: Approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Steps
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$StepResponse'
          type: array
        canceledAt:
          description: Canceled at
          format: date-time
          type: string
        comments:
          description: Comments
          type: string
        executionStatus:
          description: Execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expiryAt:
          description: Expiry at(Due Date)
          format: date-time
          type: string
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          type: string
        requestedAt:
          description: Requested at
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        reviewAssignees:
          description: Reviewers
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ReviewAssigneeResponse'
          type: array
        rule:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$WorkflowRequestResponse$Rule'
        title:
          description: Title
          type: string
        urgent:
          description: Urgent mode
          type: boolean
        uuid:
          description: UUID
          format: uuid
          type: string
      required:
        - accessControls
        - urgent
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$AccessRequestResponse$AccessControl:
      description: Approval accesses
      properties:
        clusterRoleDeleted:
          description: Cluster role deleted flag
          type: boolean
        clusterRoleName:
          description: Cluster role name
          type: string
        clusterRoleUuid:
          description: Cluster role UUID
          format: uuid
          type: string
        connectionResponse:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse'
        granted:
          description: Granted
          type: boolean
      required:
        - clusterRoleDeleted
        - clusterRoleName
        - clusterRoleUuid
        - connectionResponse
        - granted
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse:
      description: Connection
      properties:
        cluster:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse$Cluster'
        clusterGroup:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse$ClusterGroup'
        deleted:
          description: Deleted
          type: boolean
        objectType:
          description: Object type
          enum:
            - UNDEFINED
            - SYSTEM
            - CLUSTER_GROUP
            - CLUSTER
            - INSTANCE
            - CLOUD_PROVIDER
            - NETWORK_ZONE
            - SERVER
            - SERVER_GROUP
            - SERVER_PROVIDER
            - K8S_CLUSTER
            - KUBE_CLUSTER_PROVIDER
            - DISCOVERY_JOB
            - SERVER_PASSWORD_PROVISION_JOB
            - REPORT_FILE_DELETE_JOB
          type: string
      required:
        - cluster
        - clusterGroup
        - deleted
        - objectType
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse$Cluster:
      description: Cluster
      properties:
        name:
          description: Name
          type: string
        replicationType:
          description: Replication type
          enum:
            - MASTER
            - SLAVE
            - SINGLE
          type: string
        uuid:
          description: UUID
          format: uuid
          type: string
      required:
        - name
        - replicationType
        - uuid
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse$ClusterGroup:
      description: Cluster group
      properties:
        databaseType:
          description: Database type
          enum:
            - ALL
            - MySQL
            - MariaDB
            - PostgreSQL
            - Hana
            - Snowflake
            - Redshift
            - BigQuery
            - Presto
            - SQLServer
            - AzureSQL
            - Oracle
            - Tibero
            - Hive
            - MongoDB
            - HBase
            - Cassandra
            - DynamoDB
            - Trino
            - Impala
            - Greenplum
            - EnterpriseDB
            - DocumentDB
            - ScyllaDB
            - Athena
            - Redis
            - SingleStore
          type: string
        name:
          description: Name
          type: string
        uuid:
          description: UUID
          format: uuid
          type: string
      required:
        - databaseType
        - name
        - uuid
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ExecutionAssigneeResponse:
      description: Execution assignees
      properties:
        actionAt:
          description: Action at
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        assignedUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        comments:
          description: Comments
          type: string
        status:
          description: Status
          enum:
            - NONE
            - PENDING
            - EXECUTED
            - CANCELED
          type: string
        user:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
      required:
        - assignedUser
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ExportRequestResponse:
      properties:
        approvalStatus:
          description: Approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Steps
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$StepResponse'
          type: array
        canceledAt:
          description: Canceled at
          format: date-time
          type: string
        comments:
          description: Comments
          type: string
        connection:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse'
        contentType:
          description: Export type. Query Result or Table
          enum:
            - TABLE
            - QUERY
          type: string
        contentValue:
          description: Content value
          type: string
        database:
          description: Database
          type: string
        executionAssignees:
          description: Execution assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ExecutionAssigneeResponse'
          type: array
        executionStatus:
          description: Execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expiryAt:
          description: Expiry at(Due Date)
          format: date-time
          type: string
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          type: string
        requestedAt:
          description: Requested at
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        reviewAssignees:
          description: Reviewers
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ReviewAssigneeResponse'
          type: array
        rule:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$WorkflowRequestResponse$Rule'
        targetDate:
          description: Target date
          format: date-time
          type: string
        title:
          description: Title
          type: string
        urgent:
          description: Urgent mode
          type: boolean
        uuid:
          description: UUID
          format: uuid
          type: string
      required:
        - connection
        - contentType
        - contentValue
        - database
        - executionAssignees
        - targetDate
        - urgent
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$PageResponse:
      description: Object list per entry
      properties:
        approvalStatus:
          description: Approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        executionStatus:
          description: Execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          type: string
        requestedAt:
          description: Requested at
          format: date-time
          type: string
        requester:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        title:
          description: Title
          type: string
        updatedAt:
          description: Updated at
          format: date-time
          type: string
        uuid:
          description: UUID
          format: uuid
          type: string
      required:
        - approvalStatus
        - executionStatus
        - requestType
        - requestedAt
        - requester
        - title
        - updatedAt
        - uuid
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ReviewAssigneeResponse:
      description: Reviewers
      properties:
        actionAt:
          description: Action at
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        assignedUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        comments:
          description: Comments
          type: string
        status:
          description: Status
          enum:
            - NONE
            - UNREAD
            - CONFIRM
          type: string
        user:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
      required:
        - assignedUser
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$SqlRequestResponse:
      properties:
        approvalStatus:
          description: Approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Steps
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$StepResponse'
          type: array
        canceledAt:
          description: Canceled at
          format: date-time
          type: string
        comments:
          description: Comments
          type: string
        connection:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ConnectionResponse'
        contentType:
          description: Content type
          enum:
            - TEXT
            - FILE
          type: string
        contentValue:
          description: Content value. File path or Queries
          type: string
        database:
          description: Database
          type: string
        executionAssignees:
          description: Execution assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ExecutionAssigneeResponse'
          type: array
        executionStatus:
          description: Execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expiryAt:
          description: Expiry at(Due Date)
          format: date-time
          type: string
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          type: string
        requestedAt:
          description: Requested at
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        reviewAssignees:
          description: Reviewers
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ReviewAssigneeResponse'
          type: array
        rule:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$WorkflowRequestResponse$Rule'
        targetDate:
          description: Target data
          format: date-time
          type: string
        title:
          description: Title
          type: string
        urgent:
          description: Urgent mode
          type: boolean
        uuid:
          description: UUID
          format: uuid
          type: string
      required:
        - connection
        - contentType
        - contentValue
        - database
        - executionAssignees
        - targetDate
        - urgent
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$StepAssigneeResponse:
      description: Assignees
      properties:
        actionAt:
          description: Action at
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        assignedUser:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
        comments:
          description: Comments
          type: string
        status:
          description: Status
          enum:
            - NONE
            - PENDING
            - APPROVED
            - REJECTED
          type: string
        user:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserResponse'
      required:
        - assignedUser
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$StepResponse:
      description: Steps
      properties:
        approveCondition:
          description: Condition of Approval for step
          enum:
            - ALL
            - ANY
          type: string
        assignees:
          description: Assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$StepAssigneeResponse'
          type: array
        order:
          description: Order of steps
          format: int32
          type: integer
        status:
          description: Status
          enum:
            - NONE
            - IN_PROGRESS
            - APPROVED
            - REJECTED
          type: string
      required:
        - approveCondition
        - assignees
        - order
        - status
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$WorkflowRequestResponse$Rule:
      description: Rule
      properties:
        name:
          description: Name
          type: string
        uuid:
          description: UUID
          format: uuid
          type: string
      required:
        - uuid
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.access.ExternalAccessRequestDto$ApproveRequest:
      properties:
        clusterUuids:
          description: Cluster uuids to approve
          items:
            description: Cluster uuids to approve
            type: string
          type: array
        comments:
          description: Comments
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.access.ExternalAccessRequestDto$RejectRequest:
      properties:
        comments:
          description: Comments
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.export.ExternalExportRequestDto$ApproveRequest:
      properties:
        comments:
          description: Comments
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.export.ExternalExportRequestDto$RejectRequest:
      properties:
        comments:
          description: Comments
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$AddRequest:
      properties:
        approvalSteps:
          description: Approval Steps
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleStepAddRequest'
          type: array
        executionAssignees:
          description: Execution assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssigneeRequest'
          type: array
        name:
          description: Rule name
          example: Access control rule
          type: string
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          example: DB_ACCESS_CONTROL
          type: string
        selectExecutionAssigneeCondition:
          description: select execution assignee condition
          enum:
            - ADMIN_ONLY
            - ALL_USERS
            - FIXED
            - CONNECTION_OWNER
            - SERVER_GROUP_OWNER
          type: string
        urgent:
          description: urgent
          example: false
          type: boolean
      required:
        - approvalSteps
        - executionAssignees
        - name
        - requestType
        - selectExecutionAssigneeCondition
        - urgent
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$DetailResponse:
      properties:
        approvalSteps:
          description: Approval steps
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleStepResponse'
          type: array
        executionAssignees:
          description: Execution assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssignee'
          type: array
        name:
          description: Rule name
          example: Access control rule
          type: string
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          example: SQL_EXECUTION
          type: string
        selectExecutionAssigneeCondition:
          description: select execution assignee condition
          enum:
            - ADMIN_ONLY
            - ALL_USERS
            - FIXED
            - CONNECTION_OWNER
            - SERVER_GROUP_OWNER
          type: string
        urgent:
          description: urgent
          type: boolean
        uuid:
          description: UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      required:
        - urgent
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$EditRequest:
      properties:
        approvalSteps:
          description: Approval steps
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleStepEditRequest'
          type: array
        executionAssignees:
          description: Execution assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssigneeRequest'
          type: array
        name:
          description: name
          example: Data Export rule
          type: string
        selectExecutionAssigneeCondition:
          description: select execution assignee condition
          enum:
            - ADMIN_ONLY
            - ALL_USERS
            - FIXED
            - CONNECTION_OWNER
            - SERVER_GROUP_OWNER
          type: string
        urgent:
          description: urgent
          type: boolean
      required:
        - approvalSteps
        - executionAssignees
        - name
        - selectExecutionAssigneeCondition
        - urgent
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$PageResponse:
      description: Object list per entry
      properties:
        createdAt:
          description: Created At
          format: date-time
          type: string
        name:
          description: Rule name
          example: Access control rule
          type: string
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          example: SQL_EXECUTION
          type: string
        updatedAt:
          description: Updated At
          format: date-time
          type: string
        uuid:
          description: UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssignee:
      description: Execution assignees
      properties:
        email:
          description: Assignee user email
          type: string
        name:
          description: Assignee user name
          type: string
        uuid:
          description: User UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssigneeRequest:
      description: Execution assignees
      properties:
        uuid:
          description: User UUID
          example: 63d2cc6d-dd83-4a31-a817-fc13f1fc57a3
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleStepAddRequest:
      description: Approval Steps
      properties:
        ruleAssignees:
          description: Assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssigneeRequest'
          type: array
        selectAssigneeCondition:
          description: Assignee for Approval
          enum:
            - ADMIN_ONLY
            - ALL_USERS
            - FIXED
            - CONNECTION_OWNER
            - SERVER_GROUP_OWNER
          example: ADMIN_ONLY
          type: string
        stepApproveCondition:
          description: Condition of Approval
          enum:
            - ALL
            - ANY
          type: string
      required:
        - selectAssigneeCondition
        - stepApproveCondition
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleStepEditRequest:
      description: Approval steps
      properties:
        ruleAssignees:
          description: Assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssigneeRequest'
          type: array
        selectAssigneeCondition:
          description: Assignee for Approval
          enum:
            - ADMIN_ONLY
            - ALL_USERS
            - FIXED
            - CONNECTION_OWNER
            - SERVER_GROUP_OWNER
          example: ADMIN_ONLY
          type: string
        stepApproveCondition:
          description: Condition of Approval
          enum:
            - ALL
            - ANY
          type: string
      required:
        - selectAssigneeCondition
        - stepApproveCondition
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleStepResponse:
      description: Approval steps
      properties:
        ruleAssignees:
          description: Assignees
          items:
            $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$RuleAssignee'
          type: array
        selectAssigneeCondition:
          description: Assignee for Approval
          enum:
            - ADMIN_ONLY
            - ALL_USERS
            - FIXED
            - CONNECTION_OWNER
            - SERVER_GROUP_OWNER
          example: ADMIN_ONLY
          type: string
        stepApproveCondition:
          description: Condition of Approval
          enum:
            - ALL
            - ANY
          type: string
      required:
        - selectAssigneeCondition
        - stepApproveCondition
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.sql.ExternalSqlRequestDto$ApproveRequest:
      properties:
        comments:
          description: Comments
          type: string
      type: object
    0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.sql.ExternalSqlRequestDto$RejectRequest:
      properties:
        comments:
          description: Comments
          type: string
      type: object
    0.9_com.chequer.querypie.notification.controller.ExternalNotificationAgitDto:
      properties:
        url:
          description: Webhook URL
          type: string
      type: object
    0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$CreateRequest:
      properties:
        agit:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationAgitDto'
        http:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationHttpDto'
        slack:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationSlackDto'
        title:
          type: string
        type:
          enum:
            - HTTP
            - AGIT
            - SLACK
          type: string
      required:
        - title
        - type
      type: object
    0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$Response:
      properties:
        agit:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationAgitDto'
        enabled:
          type: boolean
        http:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationHttpDto'
        slack:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationSlackDto'
        title:
          type: string
        type:
          enum:
            - HTTP
            - AGIT
            - SLACK
          type: string
        uuid:
          type: string
      required:
        - enabled
      type: object
    0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$UpdateRequest:
      properties:
        agit:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationAgitDto'
        http:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationHttpDto'
        slack:
          $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationSlackDto'
        title:
          type: string
      required:
        - title
      type: object
    0.9_com.chequer.querypie.notification.controller.ExternalNotificationHttpDto:
      properties:
        bodyTemplate:
          description: BodyTemplate
          example: '{{ message }}'
          type: string
        headers:
          description: Headers
          example: '{"Authroization":"Bearer ABCDEF"}'
          type: string
        url:
          description: URL
          example: https://www.abc.com/
          type: string
      type: object
    0.9_com.chequer.querypie.notification.controller.ExternalNotificationSlackDto:
      properties:
        apiChannelId:
          description: Channel ID
          example: C027PJGS3A
          type: string
        apiOAuthToken:
          description: User / Bot OAuth Token
          example: xoxb-xxxxxxx
          type: string
        type:
          description: type
          enum:
            - WEBHOOK
            - API
          type: string
        webhookUrl:
          description: Webhook URL
          example: https://www.abc.com/
          type: string
      type: object
    V2_ServerAccessRequestDto$DetailResponse:
      properties:
        approvalRule:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ApprovalRule'
        approvalStatus:
          description: Workflow approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Workflow approval steps list
          items:
            $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ApprovalStep'
          type: array
        canceledAt:
          description: Date and time of cancellation (UTC)
          format: date-time
          type: string
        executionStatus:
          description: Workflow execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expireAt:
          description: Workflow Due Date (UTC)
          format: date-time
          type: string
        requestType:
          description: 'Request type: Server Access Request workflow'
          enum:
            - SERVER_ACCESS_CONTROL
          type: string
        requestedAt:
          description: Date and time of request (UTC)
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$RequestedBy'
        requesterComment:
          description: Workflow requester’s justification
          type: string
        resources:
          description: Requested server resources
          items:
            $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$Resource'
          type: array
        reviewAssignee:
          description: Workflow reviewers list
          items:
            $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ReviewAssignee'
          type: array
        urgent:
          description: Whether it was processed in urgent mode
          type: boolean
        workflowTitle:
          description: Workflow title
          type: string
        workflowUuid:
          description: Workflow UUID
          format: uuid
          type: string
      required:
        - approvalRule
        - approvalStatus
        - approvalSteps
        - executionStatus
        - expireAt
        - requestType
        - requestedAt
        - requestedBy
        - requesterComment
        - resources
        - reviewAssignee
        - urgent
        - workflowTitle
        - workflowUuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ApprovalRule:
      description: Approval Rule info
      properties:
        name:
          description: Approval Rule name
          type: string
        uuid:
          description: Approval Rule UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ApprovalStep:
      description: Workflow approval steps list
      properties:
        assignees:
          description: Workflow approvers list
          items:
            $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ApprovalStep$Assignee'
          type: array
        condition:
          description: Workflow approval step conditions
          enum:
            - ALL
            - ANY
          type: string
        order:
          description: order of steps (starting from 0 in priority)
          format: int32
          type: integer
        status:
          description: Overall status of each approval step
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
      required:
        - assignees
        - condition
        - order
        - status
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ApprovalStep$Assignee:
      description: Workflow approvers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ApprovalStep$Assignee$ActionBy'
        approverComments:
          description: Approver’s justification
          type: string
        assignedUser:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ApprovalStep$Assignee$AssignedUser'
        delegated:
          description: Whether it was delegated
          type: boolean
        status:
          description: Approver’s status
          enum:
            - NONE
            - PENDING
            - APPROVED
            - REJECTED
          type: string
      required:
        - assignedUser
        - delegated
        - status
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ApprovalStep$Assignee$ActionBy:
      description: Approval action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ApprovalStep$Assignee$AssignedUser:
      description: Users assigned as approvers
      properties:
        email:
          description: Approver email
          type: string
        loginId:
          description: Approver username
          type: string
        name:
          description: Approver name
          type: string
        uuid:
          description: Approver UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$RequestedBy:
      description: Workflow requester info
      properties:
        email:
          description: Requester email
          type: string
        loginId:
          description: Requester username
          type: string
        name:
          description: Requester name
          type: string
        uuid:
          description: Requester UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$Resource:
      description: Requested server resources
      properties:
        account:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$Resource$Account'
        server:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$Resource$Server'
        serverGroup:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$Resource$ServerGroup'
      required:
        - account
        - server
        - serverGroup
      type: object
    V2_ServerAccessRequestDto$DetailResponse$Resource$Account:
      description: Server OS account info
      properties:
        name:
          description: Server OS account name
          type: string
        uuid:
          description: Server OS account UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$Resource$Server:
      description: Server info
      properties:
        name:
          description: Server name
          type: string
        uuid:
          description: Server UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$Resource$ServerGroup:
      description: Server group info
      properties:
        name:
          description: Server group name
          type: string
        uuid:
          description: Server group UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ReviewAssignee:
      description: Workflow reviewers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ReviewAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse$ReviewAssignee$AssignedUser'
        reviewerComments:
          description: Reviewer’s justification
          type: string
        status:
          description: Review status
          enum:
            - NONE
            - UNREAD
            - CONFIRMED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ReviewAssignee$ActionBy:
      description: Review action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_ServerAccessRequestDto$DetailResponse$ReviewAssignee$AssignedUser:
      description: Users assigned as reviewers
      properties:
        email:
          description: Reviewer email
          type: string
        loginId:
          description: Reviewer username
          type: string
        name:
          description: Reviewer name
          type: string
        uuid:
          description: Reviewer UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.dto.PageableDto:
      description: Page info
      properties:
        currentPage:
          description: Current page number
          format: int32
          type: integer
        pageSize:
          description: Number of items included in the page
          format: int32
          type: integer
        totalElements:
          description: Total number of existing items
          format: int64
          type: integer
        totalPages:
          description: Total number of pages
          format: int32
          type: integer
      required:
        - currentPage
        - pageSize
        - totalElements
        - totalPages
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$ListResponseCom.chequer.querypie.sam.interfaces.http.external.GetServerGroupOwnerResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupOwnerResponse'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$ListResponseCom.chequer.querypie.sam.interfaces.http.external.ListServerAccountsResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.ListServerAccountsResponse'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SearchResponseItem
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SearchResponseItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$SearchResponseItem
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$SearchResponseItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$ListItem
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$ListItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ListResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ListResponse'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ListResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ListResponse'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$ListResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$ListResponse'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.workflow.dto.WorkflowRequestDto$SearchResponse
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.WorkflowRequestDto$SearchResponse'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.CommandTemplateItem:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CommandTemplateItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.PermissionItem:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.PermissionItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.SearchResponseItem:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    ? V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.SearchServerGroupResponseItem
    : properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchServerGroupResponseItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem:
      properties:
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.AccountLockHistoryDto$AccountLockHistoryResponseModel:
      description: Object list per entry
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        attemptCount:
          description: DB connection attempt count
          format: int32
          type: integer
        client:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ClientExternalModel'
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ConnectionExternalModel'
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        lockStatus:
          description: Lock status
          enum:
            - LOCKED
            - UNLOCKED
          type: string
        lockedAt:
          description: Date and time of lockout (UTC)
          format: date-time
          type: string
        target:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Target'
        unlockedAt:
          description: Date and time of unlock (UTC)
          format: date-time
          type: string
        unlockedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
      required:
        - actionAt
        - attemptCount
        - client
        - connection
        - eventId
        - lockStatus
        - lockedAt
        - target
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.AccountLockHistoryDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.AccountLockHistoryDto$AccountLockHistoryResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ActivityLogDetailResponseModel:
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        affectedData:
          description: Affected data info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$DeltaResponseModel'
          type: array
        clientIp:
          description: Client IP
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        eventType:
          description: Event type
          type: string
        eventUuid:
          description: Activity Log Event UUID
          type: string
        relatedLogUuids:
          items:
            type: string
          type: array
        target:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ActivityLogTargetResponseModel'
      required:
        - actionAt
        - actionBy
        - eventId
        - eventType
        - eventUuid
        - relatedLogUuids
        - target
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ActivityLogResponseModel:
      description: Object list per entry
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        clientIp:
          description: Client IP
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        eventType:
          description: Event type
          type: string
        eventUuid:
          description: Activity Log Event UUID
          type: string
        target:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ActivityLogTargetResponseModel'
      required:
        - actionAt
        - actionBy
        - eventId
        - eventType
        - eventUuid
        - target
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ActivityLogTargetResponseModel:
      description: Event target info
      properties:
        name:
          description: Target name
          type: string
        type:
          description: Target type
          type: string
        uuid:
          description: Target UUID
          type: string
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$DeltaResponseModel:
      description: Affected data info
      properties:
        after:
          description: Affected data after value
          type: string
        before:
          description: Affected data before value
          type: string
        key:
          description: Affected data key (it has been newly added from ver 9.16.1, logs before upgrading to 9.16.1 will  return null)
          type: string
        label:
          description: Affected data label
          type: string
      required:
        - label
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ActivityLogResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.AdminRoleHistoryDto$AdminRoleLogResponseModel:
      description: Object list per entry
      properties:
        actionAt:
          description: Date and time of the event (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        adminRole:
          description: QueryPie Admin Role
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        eventType:
          description: Event Type
          enum:
            - ADMIN_ROLE_GRANTED
            - ADMIN_ROLE_REVOKED
          type: string
        target:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Target'
      required:
        - actionAt
        - actionBy
        - adminRole
        - eventId
        - eventType
        - target
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.AdminRoleHistoryDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.AdminRoleHistoryDto$AdminRoleLogResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ClientExternalModel:
      description: Client info
      properties:
        clientIp:
          description: Client IP
          type: string
        hostName:
          description: Hostname
          type: string
      required:
        - clientIp
        - hostName
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ClientWithNameExternalModel:
      description: Client info
      properties:
        clientIp:
          description: Client IP
          type: string
        hostName:
          description: Hostname
          type: string
        name:
          description: Client’s name (e.g. DataGrip)
          type: string
      required:
        - clientIp
        - hostName
        - name
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.CloudProviderExternalModel:
      description: Cloud provider info
      properties:
        name:
          description: Cloud provider name
          type: string
        type:
          description: Cloud provider type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        uuid:
          description: Cloud provider UUID
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ClusterRolePrivilegeExternalModel:
      description: Privilege info
      properties:
        name:
          description: Privilege name
          type: string
        types:
          description: DB Access Control privilege type(s)
          items:
            description: DB Access Control privilege type(s)
            type: string
          type: array
        uuid:
          description: Privilege UUID
          type: string
      required:
        - name
        - types
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ConnectionExternalModel:
      description: Connection info
      properties:
        databaseType:
          description: Database type
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - TIBERO
            - HIVE
            - MONGODB
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
          type: string
        db:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbExternalModel'
        name:
          description: DB cluster group name
          type: string
        uuid:
          description: DB cluster group UUID
          type: string
      required:
        - databaseType
        - db
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DatabaseAccessControlLogResponseModel:
      description: Object list per entry
      properties:
        actionAt:
          description: Date and time of the event action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlActionByExternalModel'
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlConnectionExternalModel'
        description:
          description: Description on DB access control
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        eventType:
          description: Event type
          enum:
            - ACCESS_CONTROL_GRANTED
            - ACCESS_CONTROL_REVOKED
            - ACCESS_CONTROL_UPDATED
            - CONNECTION_OWNER_GRANTED
            - CONNECTION_OWNER_REVOKED
          type: string
        privilege:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlPrivilegeExternalModel'
        target:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlUserExternalModel'
      required:
        - actionAt
        - actionBy
        - connection
        - eventId
        - eventType
        - privilege
        - target
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlActionByExternalModel:
      description: Event actor info
      properties:
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlConnectionExternalModel:
      description: DB connection info
      properties:
        databaseType:
          description: Database type
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - TIBERO
            - HIVE
            - MONGODB
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
          type: string
        db:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlDbExternalModel'
        name:
          description: DB cluster group name
          type: string
        uuid:
          description: DB cluster group UUID
          type: string
      required:
        - databaseType
        - db
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlDbExternalModel:
      description: DB cluster info
      properties:
        clusterUuid:
          description: DB cluster UUID
          type: string
        host:
          description: DB host
          type: string
        name:
          description: Database(Schema) name
          type: string
        replicationType:
          description: Replication type
          enum:
            - PRIMARY
            - SECONDARY
            - SINGLE
          type: string
      required:
        - clusterUuid
        - host
        - name
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlPrivilegeExternalModel:
      description: Privilege info
      properties:
        name:
          description: Privilege name
          type: string
        uuid:
          description: Privilege UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DbAccessControlUserExternalModel:
      description: Target info
      properties:
        email:
          description: Target email
          type: string
        loginId:
          description: Target login ID
          type: string
        name:
          description: Target name
          type: string
        userType:
          description: User type
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: Target UUID
          type: string
      required:
        - email
        - loginId
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$DatabaseAccessControlLogResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessHistoryDto$DbAccessHistoryResponseModel:
      description: List of DB access logs
      properties:
        actionAt:
          description: Date and time of the action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        actionType:
          description: Type of action
          enum:
            - CONNECT
            - DISCONNECT
          type: string
        client:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ClientWithNameExternalModel'
        cloudProvider:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.CloudProviderExternalModel'
        connectedFrom:
          description: Source Connected from
          enum:
            - WEB_EDITOR
            - PROXY
            - SQL_REQUEST
            - SQL_JOB
            - EXPORT_REQUEST
          type: string
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ConnectionExternalModel'
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        errorMessage:
          description: Error message
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        ledger:
          description: Whether the DB cluster is ledger
          type: boolean
        result:
          description: Result of the action
          enum:
            - SUCCESS
            - FAILURE
          type: string
      required:
        - actionAt
        - actionBy
        - actionType
        - client
        - cloudProvider
        - connectedFrom
        - connection
        - createdAt
        - errorMessage
        - eventId
        - ledger
        - result
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbAccessHistoryDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: List of DB access logs
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessHistoryDto$DbAccessHistoryResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DbExternalModel:
      description: DB cluster info
      properties:
        clusterUuid:
          description: DB cluster UUID
          type: string
        dbUser:
          description: DB user account ID
          type: string
        host:
          description: DB host
          type: string
        name:
          description: Database(Schema) name
          type: string
        replicationType:
          description: Replication type
          enum:
            - PRIMARY
            - SECONDARY
            - SINGLE
          type: string
      required:
        - clusterUuid
        - dbUser
        - host
        - name
        - replicationType
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$DataChangeResponseModel:
      description: Data changes info
      properties:
        newDataSnapshotUuid:
          description: New data snapshot UUID (CREATE/UPDATE)
          type: string
        oldDataSnapshotUuid:
          description: Old data snapshot UUID (UPDATE/DELETE)
          type: string
        targetObject:
          description: Target table column object
          type: string
        type:
          description: Data change type (this describes about the type of data changes not the DML type)
          enum:
            - CREATE
            - UPDATE
            - DELETE
          type: string
      required:
        - newDataSnapshotUuid
        - oldDataSnapshotUuid
        - targetObject
        - type
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$DmlSnapshotResponseModel:
      description: Object list per entry
      properties:
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ConnectionExternalModel'
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        executedAt:
          description: Date and time of snapshot execution (UTC)
          format: date-time
          type: string
        ledger:
          description: Whether the DB cluster is ledger
          type: boolean
        queryAuditUuid:
          description: Related Query Audit event UUID
          type: string
        sqlResult:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$SqlResultResponseModel'
      required:
        - actionBy
        - connection
        - createdAt
        - eventId
        - executedAt
        - ledger
        - queryAuditUuid
        - sqlResult
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$DmlSnapshotResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$SqlResultResponseModel:
      description: SQL query result info
      properties:
        dataChanges:
          description: Data changes info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$DataChangeResponseModel'
          type: array
        elapsedTime:
          description: Elapsed time (Millis)
          format: int32
          type: integer
        executedFrom:
          description: Execution source
          enum:
            - WEB_EDITOR
            - PROXY
            - SQL_REQUEST
            - SQL_JOB
            - EXPORT_REQUEST
          type: string
        query:
          description: DML query text (max 1000 characters)
          type: string
        rows:
          description: Requested rows
          format: int64
          type: integer
        sqlType:
          description: DML type (Statement)
          enum:
            - UNKNOWN
            - WITH
            - SELECT
            - INSERT
            - UPSERT
            - REPLACE
            - UPDATE
            - DELETE
            - MERGE_INTO
            - CREATE
            - ALTER
            - DROP
            - RENAME
            - TRUNCATE
            - GRANT
            - REVOKE
            - COMMIT
            - ROLLBACK
            - SAVE_POINT
            - PREPARE
            - DROP_PREPARE
            - EXECUTE
            - DELIMITER
            - CALL
            - EXPLAIN
            - USE
            - SHOW
            - DESCRIBE
            - SET
            - BEGIN
            - COMMENT
            - TRIVIA
          type: string
        tables:
          description: DB tables queried
          items:
            description: DB tables queried
            type: string
          type: array
      required:
        - dataChanges
        - elapsedTime
        - sqlType
        - tables
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$ActionBy:
      description: Event actor info
      properties:
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$AddRequest:
      properties:
        filter:
          description: Filter expression
          type: string
        formatType:
          description: "\nExport file format type\n\n[CSV-supported Logs]  \nDAC_QUERY_AUDIT  \nWORKFLOW_SQL_EXECUTION_REQUEST  \nWORKFLOW_SQL_EXPORT_REQUEST  \nWORKFLOW_DB_ACCESS_REQUEST  \nUSER_ACCESS_HISTORY  \nADMIN_ROLE_HISTORY  \nDATABASE_ACCESS_HISTORY  \nDATABASE_ACCOUNT_LOCK_HISTORY  \nDATABASE_ACCESS_CONTROL_LOG\n\n[JSON-supported Logs]  \nSERVER_ACCESS_HISTORY  \nSERVER_COMMAND_AUDIT  \nSERVER_SESSION_LOG  \nSERVER_ACCESS_CONTROL_LOG  \nWORKFLOW_SERVER_ACCESS_REQUEST  \nACTIVITY_LOG  \nDML_SNAPSHOT\n"
          enum:
            - CSV
            - JSON
          type: string
        from:
          default: to - 1 month
          description: Export from time in “yyyy-MM-dd” format in configured timezone
          type: string
        logType:
          description: Target log type
          enum:
            - DAC_QUERY_AUDIT
            - WORKFLOW_SQL_EXECUTION_REQUEST
            - WORKFLOW_SQL_EXPORT_REQUEST
            - WORKFLOW_DB_ACCESS_REQUEST
            - WORKFLOW_SERVER_ACCESS_REQUEST
            - USER_ACCESS_HISTORY
            - ADMIN_ROLE_HISTORY
            - DATABASE_ACCESS_HISTORY
            - DATABASE_ACCOUNT_LOCK_HISTORY
            - DATABASE_ACCESS_CONTROL_LOG
            - SERVER_ACCESS_HISTORY
            - SERVER_COMMAND_AUDIT
            - SERVER_SESSION_LOG
            - SERVER_ACCESS_CONTROL_LOG
            - ACTIVITY_LOG
            - DML_SNAPSHOT
          type: string
        name:
          description: Audit Log Export task name
          type: string
        to:
          default: now() - 1 day
          description: Export until time in “yyyy-MM-dd” format in configured timezone
          type: string
      required:
        - formatType
        - logType
        - name
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$AddResponse:
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        filter:
          description: Filter expression
          type: string
        formatType:
          description: Export file format type
          enum:
            - CSV
            - JSON
          type: string
        from:
          description: Export from time in configured timezone
          type: string
        logType:
          description: Target log type
          enum:
            - DAC_QUERY_AUDIT
            - WORKFLOW_SQL_EXECUTION_REQUEST
            - WORKFLOW_SQL_EXPORT_REQUEST
            - WORKFLOW_DB_ACCESS_REQUEST
            - WORKFLOW_SERVER_ACCESS_REQUEST
            - USER_ACCESS_HISTORY
            - ADMIN_ROLE_HISTORY
            - DATABASE_ACCESS_HISTORY
            - DATABASE_ACCOUNT_LOCK_HISTORY
            - DATABASE_ACCESS_CONTROL_LOG
            - SERVER_ACCESS_HISTORY
            - SERVER_COMMAND_AUDIT
            - SERVER_SESSION_LOG
            - SERVER_ACCESS_CONTROL_LOG
            - ACTIVITY_LOG
            - DML_SNAPSHOT
          type: string
        name:
          description: Audit Log Export task name
          type: string
        to:
          description: Export until time in configured timezone
          type: string
        uuid:
          description: Audit Log Export task UUID
          type: string
      required:
        - createdAt
        - filter
        - formatType
        - from
        - logType
        - name
        - to
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$CancelResponse:
      properties:
        logType:
          description: Target log type
          enum:
            - DAC_QUERY_AUDIT
            - WORKFLOW_SQL_EXECUTION_REQUEST
            - WORKFLOW_SQL_EXPORT_REQUEST
            - WORKFLOW_DB_ACCESS_REQUEST
            - WORKFLOW_SERVER_ACCESS_REQUEST
            - USER_ACCESS_HISTORY
            - ADMIN_ROLE_HISTORY
            - DATABASE_ACCESS_HISTORY
            - DATABASE_ACCOUNT_LOCK_HISTORY
            - DATABASE_ACCESS_CONTROL_LOG
            - SERVER_ACCESS_HISTORY
            - SERVER_COMMAND_AUDIT
            - SERVER_SESSION_LOG
            - SERVER_ACCESS_CONTROL_LOG
            - ACTIVITY_LOG
            - DML_SNAPSHOT
          type: string
        name:
          description: Audit Log Export task name
          type: string
        status:
          description: Status of Audit Log Export task
          enum:
            - READY
            - PROCESSING
            - COMPLETED
            - CANCELED
          type: string
        uuid:
          description: Audit Log Export task UUID
          type: string
      required:
        - logType
        - name
        - status
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$GetDetailResponse:
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        filter:
          description: Filter expression
          type: string
        formatType:
          description: Export file format type
          enum:
            - CSV
            - JSON
          type: string
        from:
          description: Export from time in configured timezone
          type: string
        logType:
          description: Target log type
          enum:
            - DAC_QUERY_AUDIT
            - WORKFLOW_SQL_EXECUTION_REQUEST
            - WORKFLOW_SQL_EXPORT_REQUEST
            - WORKFLOW_DB_ACCESS_REQUEST
            - WORKFLOW_SERVER_ACCESS_REQUEST
            - USER_ACCESS_HISTORY
            - ADMIN_ROLE_HISTORY
            - DATABASE_ACCESS_HISTORY
            - DATABASE_ACCOUNT_LOCK_HISTORY
            - DATABASE_ACCESS_CONTROL_LOG
            - SERVER_ACCESS_HISTORY
            - SERVER_COMMAND_AUDIT
            - SERVER_SESSION_LOG
            - SERVER_ACCESS_CONTROL_LOG
            - ACTIVITY_LOG
            - DML_SNAPSHOT
          type: string
        name:
          description: Audit Log Export task name
          type: string
        status:
          description: Status of Audit Log Export task
          enum:
            - READY
            - PROCESSING
            - COMPLETED
            - CANCELED
          type: string
        taskHistory:
          description: List of task history
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$TaskHistory'
          type: array
        to:
          description: Export until time in configured timezone
          type: string
        uuid:
          description: Audit Log Export task UUID
          type: string
      required:
        - createdAt
        - filter
        - formatType
        - from
        - logType
        - name
        - status
        - taskHistory
        - to
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$GetListResponse:
      properties:
        list:
          description: List of Audit Log Export tasks
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$GetListResponseItem'
          type: array
        page:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.PageableDto'
      required:
        - list
        - page
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$GetListResponseItem:
      description: List of Audit Log Export tasks
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        logType:
          description: Target log type
          enum:
            - DAC_QUERY_AUDIT
            - WORKFLOW_SQL_EXECUTION_REQUEST
            - WORKFLOW_SQL_EXPORT_REQUEST
            - WORKFLOW_DB_ACCESS_REQUEST
            - WORKFLOW_SERVER_ACCESS_REQUEST
            - USER_ACCESS_HISTORY
            - ADMIN_ROLE_HISTORY
            - DATABASE_ACCESS_HISTORY
            - DATABASE_ACCOUNT_LOCK_HISTORY
            - DATABASE_ACCESS_CONTROL_LOG
            - SERVER_ACCESS_HISTORY
            - SERVER_COMMAND_AUDIT
            - SERVER_SESSION_LOG
            - SERVER_ACCESS_CONTROL_LOG
            - ACTIVITY_LOG
            - DML_SNAPSHOT
          type: string
        name:
          description: Audit Log Export task name
          type: string
        status:
          description: Status of Audit Log Export task
          enum:
            - READY
            - PROCESSING
            - COMPLETED
            - CANCELED
          type: string
        uuid:
          description: Audit Log Export task UUID
          type: string
      required:
        - createdAt
        - createdBy
        - logType
        - name
        - status
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$TaskHistory:
      description: List of task history
      properties:
        actionAt:
          description: Date and time of event action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$ActionBy'
        event:
          description: Event detail
          type: string
      required:
        - actionAt
        - actionBy
        - event
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse:
      properties:
        nextCursor:
          type: string
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.QueryAuditDto$GetDetailResponse:
      properties:
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        actionType:
          description: Type of action
          enum:
            - CONNECTION
            - SQL_EXECUTION
            - EXPORT_DATA
            - EXPORT_SCHEMA
            - IMPORT_DATA
            - IMPORT_SCHEMA
            - COPY_CLIPBOARD
          type: string
        client:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ClientWithNameExternalModel'
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ConnectionExternalModel'
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        errorMessage:
          description: Error message
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        eventUuid:
          description: Query Audit event UUID
          type: string
        ledger:
          description: Whether the DB is ledger
          type: boolean
        privileges:
          description: Privilege info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ClusterRolePrivilegeExternalModel'
          type: array
        result:
          description: Result of the action
          enum:
            - SUCCESS
            - FAILURE
            - STOPPED
            - ABORTED
          type: string
        sqlResult:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.SqlResultDetailExternalModel'
      required:
        - actionBy
        - actionType
        - client
        - connection
        - createdAt
        - errorMessage
        - eventId
        - eventUuid
        - ledger
        - privileges
        - result
        - sqlResult
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.QueryAuditDto$QueryAuditResponseModel:
      description: Object list per entry
      properties:
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        actionType:
          description: Type of action
          enum:
            - CONNECTION
            - SQL_EXECUTION
            - EXPORT_DATA
            - EXPORT_SCHEMA
            - IMPORT_DATA
            - IMPORT_SCHEMA
            - COPY_CLIPBOARD
          type: string
        client:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ClientWithNameExternalModel'
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ConnectionExternalModel'
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        errorMessage:
          description: Error message
          type: string
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        eventUuid:
          description: Query Audit event UUID
          type: string
        ledger:
          description: Whether the DB is ledger
          type: boolean
        result:
          description: Result of the action
          enum:
            - SUCCESS
            - FAILURE
            - STOPPED
            - ABORTED
          type: string
        sqlResult:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.SqlResultExternalModel'
      required:
        - actionBy
        - actionType
        - client
        - connection
        - createdAt
        - errorMessage
        - eventId
        - eventUuid
        - ledger
        - result
        - sqlResult
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.QueryAuditDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.QueryAuditDto$QueryAuditResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.SelectResultSampleExternalModel:
      description: SQL rows
      properties:
        columnNames:
          description: First 10 Rows columns
          items:
            description: First 10 Rows columns
            type: string
          type: array
        rows:
          format: byte
          type: string
      required:
        - columnNames
        - rows
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.SqlResultDetailExternalModel:
      description: SQL event details
      properties:
        dataSize:
          description: Data size (in bytes)
          format: int64
          type: integer
        elapsedTime:
          description: Elapsed time (in Millis)
          format: int32
          type: integer
        executedAt:
          description: Date and time of query execution (UTC)
          format: date-time
          type: string
        executedFrom:
          description: Source Executed from
          enum:
            - WEB_EDITOR
            - PROXY
            - SQL_REQUEST
            - SQL_JOB
            - EXPORT_REQUEST
          type: string
        executionReason:
          description: Justification for execution
          type: string
        finishedAt:
          description: Date and time of query finished (UTC)
          format: date-time
          type: string
        prevented:
          description: Whether the query was prevented due to policies
          type: boolean
        query:
          description: DML query text (max 1000 characters)
          type: string
        rows:
          description: Requested rows
          format: int64
          type: integer
        sqlRows:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.SelectResultSampleExternalModel'
        sqlType:
          description: DML type
          enum:
            - UNKNOWN
            - WITH
            - SELECT
            - INSERT
            - UPSERT
            - REPLACE
            - UPDATE
            - DELETE
            - MERGE_INTO
            - CREATE
            - ALTER
            - DROP
            - RENAME
            - TRUNCATE
            - GRANT
            - REVOKE
            - COMMIT
            - ROLLBACK
            - SAVE_POINT
            - PREPARE
            - DROP_PREPARE
            - EXECUTE
            - DELIMITER
            - CALL
            - EXPLAIN
            - USE
            - SHOW
            - DESCRIBE
            - SET
            - BEGIN
            - COMMENT
            - TRIVIA
          type: string
        tables:
          description: DB tables queried
          items:
            description: DB tables queried
            type: string
          type: array
      required:
        - dataSize
        - elapsedTime
        - executedAt
        - executedFrom
        - executionReason
        - finishedAt
        - prevented
        - query
        - rows
        - sqlRows
        - sqlType
        - tables
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.SqlResultExternalModel:
      description: SQL result info
      properties:
        dataSize:
          description: Data size (in bytes)
          format: int64
          type: integer
        elapsedTime:
          description: Elapsed time (in Millis)
          format: int32
          type: integer
        executedAt:
          description: Date and time of query execution (UTC)
          format: date-time
          type: string
        executedFrom:
          description: Source Executed from
          enum:
            - WEB_EDITOR
            - PROXY
            - SQL_REQUEST
            - SQL_JOB
            - EXPORT_REQUEST
          type: string
        executionReason:
          description: Justification for execution
          type: string
        finishedAt:
          description: Date and time of query finished (UTC)
          format: date-time
          type: string
        prevented:
          description: Whether the query was prevented due to policies
          type: boolean
        query:
          description: DML query text (max 1000 characters)
          type: string
        rows:
          description: Requested rows
          format: int64
          type: integer
        sqlType:
          description: DML type
          enum:
            - UNKNOWN
            - WITH
            - SELECT
            - INSERT
            - UPSERT
            - REPLACE
            - UPDATE
            - DELETE
            - MERGE_INTO
            - CREATE
            - ALTER
            - DROP
            - RENAME
            - TRUNCATE
            - GRANT
            - REVOKE
            - COMMIT
            - ROLLBACK
            - SAVE_POINT
            - PREPARE
            - DROP_PREPARE
            - EXECUTE
            - DELIMITER
            - CALL
            - EXPLAIN
            - USE
            - SHOW
            - DESCRIBE
            - SET
            - BEGIN
            - COMMENT
            - TRIVIA
          type: string
        tables:
          description: DB tables queried
          items:
            description: DB tables queried
            type: string
          type: array
      required:
        - dataSize
        - elapsedTime
        - executedAt
        - executedFrom
        - executionReason
        - finishedAt
        - prevented
        - query
        - rows
        - sqlType
        - tables
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.UserAccessHistoryDto$ScanResponse:
      properties:
        hasNext:
          description: If there are still logs available for retrieval within the specified timestamp range, the API call returns true.
          type: boolean
        list:
          description: Object list per entry
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserAccessHistoryDto$UserAccessHistoryResponseModel'
          type: array
        nextCursor:
          description: When making an API call, by providing the cursor value as the 'cursor' parameter, it allows the collection of logs not yet retrieved.
          type: string
      required:
        - hasNext
        - list
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.UserAccessHistoryDto$UserAccessHistoryResponseModel:
      description: Object list per entry
      properties:
        actionAt:
          description: Date and time of event action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor'
        actionType:
          description: Type of event action
          enum:
            - LOGIN
            - LOGOUT
            - LOCKED
            - EXPIRED
            - LOCKED_MANUALLY
            - UNLOCK
            - PASSWORD_RESET_PUSH
          type: string
        client:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ClientExternalModel'
        eventId:
          description: Identifiable event ID
          format: int64
          type: integer
        message:
          description: Message details for actions (Failure details, justifications, etc.)
          type: string
        result:
          description: Result of the action
          enum:
            - SUCCESS
            - FAILURE
          type: string
        target:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Target'
      required:
        - actionAt
        - actionBy
        - actionType
        - client
        - eventId
        - message
        - result
        - target
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel:
      description: Workflow requester info
      properties:
        email:
          description: User email
          type: string
        loginId:
          description: User login ID
          type: string
        name:
          description: User name
          type: string
        uuid:
          description: User UUID
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Actor:
      description: Event actor info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel$Target:
      description: Target info
      properties:
        email:
          description: Target email
          type: string
        loginId:
          description: Target username
          type: string
        name:
          description: Target name
          type: string
        uuid:
          description: Target UUID
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.dbam.database.dto.ExternalV2DbAccountUnlockDto$Connection:
      description: Connection info
      properties:
        name:
          description: Connection name
          type: string
        uuid:
          description: Connection UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.dbam.database.dto.ExternalV2DbAccountUnlockDto$UnlockRequest:
      properties:
        connectionUuid:
          description: Target locked connection UUID
          type: string
        userUuid:
          description: Target user UUID
          type: string
      required:
        - userUuid
      type: object
    V2_com.chequer.querypie.api.external.dbam.database.dto.ExternalV2DbAccountUnlockDto$UnlockResponse:
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.dbam.database.dto.ExternalV2DbAccountUnlockDto$Connection'
        eventId:
          description: Account Lock History event ID
          format: int64
          type: integer
        lockStatus:
          description: DB account lock status
          enum:
            - LOCKED
            - UNLOCKED
          type: string
        target:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        unlockedAt:
          description: Date and time of unlock (UTC)
          format: date-time
          type: string
      required:
        - actionAt
        - connection
        - eventId
        - lockStatus
        - target
        - unlockedAt
      type: object
    V2_com.chequer.querypie.api.external.dbam.database.zone.dto.UserAllowedZoneDto$AttachRequest:
      properties:
        allowedZoneUuid:
          description: Allowed Zone UUID
          type: string
      required:
        - allowedZoneUuid
      type: object
    V2_com.chequer.querypie.api.external.dbam.database.zone.dto.UserAllowedZoneDto$DetachRequest:
      properties:
        allowedZoneUuid:
          description: Allowed Zone UUID
          type: string
      required:
        - allowedZoneUuid
      type: object
    V2_com.chequer.querypie.api.external.dbam.database.zone.dto.UserAllowedZoneDto$ListResponse:
      properties:
        allowedZoneUuidList:
          description: List of Allowed Zone UUIDs
          items:
            description: List of Allowed Zone UUIDs
            type: string
          type: array
      required:
        - allowedZoneUuidList
      type: object
    V2_com.chequer.querypie.api.external.dbam.ledger.dto.GetLedgerPolicyTableResponse:
      properties:
        approvalRuleName:
          description: Ledger Approval Rule Name
          example: Ledger Approval Rule
          type: string
        approvalRuleUuid:
          description: Ledger Approval Rule UUID
          example: uuid
          type: string
        connectionName:
          description: Connection Name
          example: MySQL 8.0
          type: string
        connectionUuid:
          description: Connection UUID
          example: uuid
          type: string
        databaseName:
          description: Database Name
          example: sakila
          type: string
        schemaName:
          description: Schema Name
          type: string
        selectPurpose:
          description: Select Purpose
          enum:
            - REQUIRED
            - NOT_REQUIRED
          type: string
        tableName:
          description: Table Name
          example: actor
          type: string
        uuid:
          description: Ledger Policy Table UUID
          example: uuid
          type: string
      required:
        - approvalRuleName
        - approvalRuleUuid
        - connectionName
        - connectionUuid
        - databaseName
        - selectPurpose
        - tableName
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$AdminRole:
      description: List of assigned admin roles
      properties:
        roleName:
          description: Role UUID
          type: string
        roleUuid:
          description: Role name
          type: string
      required:
        - roleName
        - roleUuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$CreateRequest:
      properties:
        email:
          description: Email
          example: brant@querypie.com
          type: string
        loginId:
          description: Login ID
          example: brant
          type: string
        name:
          description: User’s display name
          example: Brant Hwang
          maxLength: 500
          minLength: 1
          type: string
        password:
          description: Password
          type: string
      required:
        - email
        - loginId
        - name
        - password
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$CreateResponse:
      properties:
        email:
          description: User's email
          type: string
        loginId:
          description: User's username
          type: string
        name:
          description: User’s display name
          example: Brant Hwang
          maxLength: 500
          minLength: 1
          type: string
        uuid:
          description: User's UUID
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$Factor:
      description: User authenticator info
      properties:
        enabled:
          description: Whether 2FA being enabled
          type: boolean
        type:
          description: 2FA type
          enum:
            - NONE
            - GOOGLE
            - EMAIL
          type: string
      required:
        - enabled
        - type
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$GetUserResponse:
      properties:
        adminRoles:
          description: List of assigned admin roles
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$AdminRole'
          type: array
        authProvider:
          description: Source of truth for the user
          enum:
            - swivelsecure
            - db
            - ldap
            - okta
            - onelogin
            - saml
            - custom
          type: string
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        email:
          description: User's email
          type: string
        expired:
          description: Whether the user account is expired
          type: boolean
        lastAccessAt:
          description: Last access time for QueryPie resources (UTC)
          format: date-time
          type: string
        lastLoginAt:
          description: Last login time for QueryPie (UTC)
          format: date-time
          type: string
        locked:
          description: Whether the user account is locked
          type: boolean
        loginId:
          description: User's username
          type: string
        name:
          description: User's name
          type: string
        passwordExpired:
          description: Whether the current password is expired and the user must change its password on next login
          type: boolean
        status:
          description: User's status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        uuid:
          description: User's UUID
          type: string
      required:
        - adminRoles
        - authProvider
        - createdAt
        - email
        - expired
        - locked
        - loginId
        - name
        - passwordExpired
        - status
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$Password:
      description: User's password info
      properties:
        expired:
          description: Whether the current password is expired and the user must change its password on next login
          type: boolean
        string:
          description: User password (One-time password will appear only)
          type: string
      required:
        - expired
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$ResetOtpResponse:
      properties:
        email:
          description: User's email
          type: string
        factor:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$Factor'
        loginId:
          description: User's username
          type: string
        name:
          description: User's name
          type: string
        status:
          description: User status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        updatedAt:
          description: Date and time of user status update (UTC)
          format: date-time
          type: string
        uuid:
          description: User's UUID
          type: string
      required:
        - email
        - factor
        - loginId
        - name
        - status
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$ResetPasswordRequest:
      properties:
        password:
          description: Admin-defined password string (Random string to be generated if not provided)
          type: string
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$ResetPasswordResponse:
      properties:
        email:
          description: User's email
          type: string
        loginId:
          description: User's username
          type: string
        name:
          description: User's name
          type: string
        password:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$Password'
        status:
          description: User status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        updatedAt:
          description: Date and time of user status update (UTC)
          format: date-time
          type: string
        uuid:
          description: User's UUID
          type: string
      required:
        - email
        - loginId
        - name
        - password
        - status
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SearchResponseItem:
      description: Object list per entry
      properties:
        adminRoles:
          description: List of assigned admin roles
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$AdminRole'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        deleted:
          description: Whether the user account is deleted
          type: boolean
        email:
          description: User's email
          type: string
        expired:
          description: Whether the user account is expired
          type: boolean
        factor:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$Factor'
        locked:
          description: Whether the user account is locked
          type: boolean
        loginId:
          description: User's username
          type: string
        name:
          description: User's name
          type: string
        passwordExpired:
          description: Whether the current password is expired and the user must change its password on next login
          type: boolean
        status:
          description: User's status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        uuid:
          description: User's UUID
          type: string
      required:
        - adminRoles
        - createdAt
        - deleted
        - email
        - expired
        - factor
        - locked
        - loginId
        - name
        - passwordExpired
        - status
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse:
      description: Target info
      properties:
        email:
          description: User's email
          type: string
        loginId:
          description: User's username
          type: string
        name:
          description: User name
          type: string
        uuid:
          description: User's UUID
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$UpdateStatusRequest:
      properties:
        justification:
          default: Triggered by External API
          description: justification for performing the action
          type: string
      required:
        - justification
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$UpdateStatusResponse:
      properties:
        email:
          description: User's email
          type: string
        loginId:
          description: User's username
          type: string
        name:
          description: User's name
          type: string
        status:
          description: User status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        updatedAt:
          description: Date and time of user status update (UTC)
          format: date-time
          type: string
        uuid:
          description: User's UUID
          type: string
      required:
        - email
        - loginId
        - name
        - status
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$CreateRequest:
      properties:
        name:
          description: User group name
          type: string
      required:
        - name
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$CreateResponse:
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        name:
          description: User Group's name
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        uuid:
          description: User Group's UUID
          type: string
      required:
        - createdAt
        - name
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$GetUserGroupResponse:
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        members:
          description: User group’s members
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$GetUserGroupResponse$Member'
          type: array
        name:
          description: User group’s name
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        uuid:
          description: User group’s UUID
          type: string
      required:
        - createdAt
        - members
        - name
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$GetUserGroupResponse$Member:
      description: User group’s members
      properties:
        uuid:
          description: Member user’s UUID
          type: string
      required:
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$SearchResponseItem:
      description: Object list per entry
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        deleted:
          description: Whether the user group is deleted
          type: boolean
        name:
          description: User Group's name
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        uuid:
          description: User Group's UUID
          type: string
      required:
        - createdAt
        - deleted
        - name
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$CreateRequest:
      properties:
        userUuids:
          description: List of user UUIDs
          items:
            description: List of user UUIDs
            type: string
          type: array
      required:
        - userUuids
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$CreateResponse:
      properties:
        userGroupUuid:
          description: User group’s UUID
          type: string
        userUuid:
          description: User’s UUID
          type: string
      required:
        - userGroupUuid
        - userUuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$ListItem:
      description: Object list per entry
      properties:
        active:
          description: Whether the user account is active
          type: boolean
        authProvider:
          description: Source of truth for the user
          enum:
            - swivelsecure
            - db
            - ldap
            - okta
            - onelogin
            - saml
            - custom
          type: string
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        deleted:
          description: Whether the user account is deleted
          type: boolean
        email:
          description: User's email
          type: string
        expired:
          description: Whether the user account is expired
          type: boolean
        lastAccessAt:
          description: Last access time for QueryPie resources (UTC)
          format: date-time
          type: string
        lastLoginAt:
          description: Last login time for QueryPie (UTC)
          format: date-time
          type: string
        locked:
          description: Whether the user account is locked
          type: boolean
        loginId:
          description: User's username
          type: string
        name:
          description: User's name
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        userRoles:
          description: List of assigned admin roles
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$ListItem$AdminRole'
          type: array
        uuid:
          description: User's UUID
          type: string
      required:
        - active
        - authProvider
        - createdAt
        - deleted
        - email
        - expired
        - locked
        - loginId
        - name
        - updatedAt
        - userRoles
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$ListItem$AdminRole:
      description: List of assigned admin roles
      properties:
        roleName:
          description: Role UUID
          type: string
        roleUuid:
          description: Role name
          type: string
      required:
        - roleName
        - roleUuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$CloudProvider:
      description: Privilege-assigned DB cluster’s cloud provider info
      properties:
        name:
          description: Privilege-assigned DB cluster’s cloud provider name
          type: string
        uuid:
          description: Privilege-assigned DB cluster’s cloud provider UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$GetDbAccessControlResponse:
      properties:
        adminRole:
          description: "Target’s admin role  \n\n*In case of a group, the role may be marked as “None” if not all of the members are owners."
          enum:
            - NONE
            - OWNER
          type: string
        authType:
          description: Target’s authentication type
          enum:
            - QueryPie
            - LDAP
            - Okta
            - SwivelSecure
            - OneLogin
            - SAML
            - Custom
          type: string
        linked:
          description: Whether there are any DB clusters with privileges being assigned
          type: boolean
        linkedCount:
          description: Number of DB clusters with privileges being assigned
          format: int32
          type: integer
        mappedConnections:
          description: List of privilege-assigned DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$MappedConnection'
          type: array
        members:
          description: Target group’s list of membership
          items:
            description: Target group’s list of membership
            type: string
          type: array
        name:
          description: Target’s name
          type: string
        userType:
          description: Target type
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: UUID of target user or group
          type: string
      required:
        - adminRole
        - authType
        - linked
        - linkedCount
        - mappedConnections
        - members
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$GrantRequest:
      properties:
        clusterUuid:
          description: DB cluster UUID
          type: string
        force:
          description: 'Whether to overwrite existing permissions (Default: false)'
          type: boolean
        privilegeUuid:
          description: Privilege UUID
          type: string
      required:
        - clusterUuid
        - privilegeUuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$GrantResponse:
      properties:
        mappedConnection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$MappedConnection'
        name:
          description: Target’s name
          type: string
        userType:
          description: Target type
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: UUID of target user or group
          type: string
      required:
        - mappedConnection
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ListResponse:
      description: Object list per entry
      properties:
        adminRole:
          description: "Target’s admin role  \n\n*In case of a group, the role may be marked as “None” if not all of the members are owners."
          enum:
            - NONE
            - OWNER
          type: string
        authType:
          description: Target’s authentication type
          enum:
            - QueryPie
            - LDAP
            - Okta
            - SwivelSecure
            - OneLogin
            - SAML
            - Custom
          type: string
        linked:
          description: Whether there are any DB clusters with privileges being assigned
          type: boolean
        linkedCount:
          description: Number of DB clusters with privileges being assigned
          format: int32
          type: integer
        members:
          description: Target group’s list of membership
          items:
            description: Target group’s list of membership
            type: string
          type: array
        name:
          description: Target’s name
          type: string
        userType:
          description: 'Target type '
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: UUID of target user or group
          type: string
      required:
        - adminRole
        - authType
        - linked
        - linkedCount
        - members
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$MappedConnection:
      description: Privilege-assigned DB cluster info
      properties:
        cloudProvider:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$CloudProvider'
        clusterUuid:
          description: DB cluster UUID
          type: string
        databaseType:
          description: DB cluster Replication type
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB cluster name
          type: string
        privilege:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$Privilege'
        status:
          description: Privilege status of the DB cluster
          enum:
            - ACTIVE
            - DEACTIVATED
            - EXPIRED
            - LOCKED
          type: string
      required:
        - clusterUuid
        - databaseType
        - ledger
        - name
        - privilege
        - status
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$Privilege:
      description: Privilege info
      properties:
        name:
          description: Privilege name
          type: string
        uuid:
          description: Privilege UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ReactivateRequest:
      properties:
        clusterUuids:
          description: list of DB cluster UUIDs
          items:
            description: list of DB cluster UUIDs
            type: string
          type: array
      required:
        - clusterUuids
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ReactivateResponse:
      properties:
        notApplicableClusterUuids:
          description: List of cluster UUIDs which were not applicable to perform this action
          items:
            description: List of cluster UUIDs which were not applicable to perform this action
            type: string
          type: array
        totalReactivatedRoles:
          description: Total number of reactivated roles
          format: int32
          type: integer
      required:
        - notApplicableClusterUuids
        - totalReactivatedRoles
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$RevokeRequest:
      properties:
        clusterUuids:
          description: list of DB cluster UUIDs
          items:
            description: list of DB cluster UUIDs
            type: string
          type: array
      required:
        - clusterUuids
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$RevokeResponse:
      properties:
        name:
          description: Target’s name
          type: string
        revokedConnectionUuids:
          description: List of role-revoked db clusters
          items:
            description: List of role-revoked db clusters
            type: string
          type: array
        userType:
          description: 'Target type '
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: UUID of target user or group
          type: string
      required:
        - name
        - revokedConnectionUuids
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo:
      description: DB connection additional info
      properties:
        accessEndTime:
          description: Allowed end time for DB connection access
          type: string
        accessStartTime:
          description: Allowed start time for DB connection access
          type: string
        auditEnabled:
          description: Admin-defined database version
          type: boolean
        databaseVersion:
          description: Admin-defined database version
          type: string
        description:
          description: DB connection’s description which admin has written
          type: string
        dmlSnapshotEnabled:
          description: Whether DML Snapshot is enabled for the DB connection
          type: boolean
        loginRules:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$LoginRule'
        maxDisplayRows:
          description: Max rows allowed to display (-1=unlimited)
          enum:
            - -1
            - 1000
            - 2000
            - 3000
            - 5000
            - 10000
          format: int32
          type: integer
        maxExportRows:
          description: Max rows allowed to export (-1=unlimited)
          enum:
            - -1
            - 1000
            - 2000
            - 3000
            - 5000
            - 10000
            - 50000
            - 100000
          format: int32
          type: integer
        networkId:
          description: Proxy network ID
          type: string
        proxyAuthType:
          description: DB authentication type with proxy
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        proxyEnabled:
          description: Whether proxy connection is enabled
          type: boolean
        weekdayAccessDenied:
          description: Days which access is not permitted
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          items:
            description: Days which access is not permitted
            enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            type: string
          type: array
      required:
        - accessEndTime
        - auditEnabled
        - dmlSnapshotEnabled
        - loginRules
        - maxDisplayRows
        - maxExportRows
        - proxyEnabled
        - weekdayAccessDenied
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalListInfo:
      description: DB connection additional info
      properties:
        auditEnabled:
          description: Whether Query Audit is enabled for the DB connection
          type: boolean
        dmlSnapshotEnabled:
          description: Whether DML Snapshot is enabled for the DB connection
          type: boolean
        proxyAuthType:
          description: DB authentication type with proxy
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        proxyEnabled:
          description: Whether proxy connection is enabled
          type: boolean
      required:
        - auditEnabled
        - dmlSnapshotEnabled
        - proxyEnabled
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AthenaConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AthenaDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AthenaDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        cloudRegion:
          description: AWS cloud region (For DynamoDB, Athena)
          type: string
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
        workGroupName:
          description: Work group name (For Athena)
          type: string
      required:
        - cloudRegion
        - databaseName
        - workGroupName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AzureSQLConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AzureSQLDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AzureSQLDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$BigqueryConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$BigqueryDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$BigqueryDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        gcpRegion:
          description: GCP cloud region (For BigQuery)
          type: string
        projectId:
          description: GCP project ID (For BigQuery)
          type: string
        serviceAccountJson:
          description: GCP service account JSON (For BigQuery)
          type: string
      required:
        - gcpRegion
        - serviceAccountJson
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$CassandraConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$CassandraDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$CassandraDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        keyspaceName:
          description: Keyspace name (For Cassandra, Scylla)
          type: string
      required:
        - keyspaceName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster:
      description: List of DB clusters
      properties:
        cloudIdentifier:
          description: Cloud resource identifier name
          type: string
        deleted:
          description: Whether this DB cluster was deleted
          type: boolean
        host:
          description: DB cluster’s host
          type: string
        port:
          description: DB cluster’s port
          type: string
        replicationType:
          description: Replication type of the DB cluster
          type: string
        uuid:
          description: DB cluster’s UUID
          type: string
      required:
        - deleted
        - host
        - replicationType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount:
      description: DB connection account info
      properties:
        dbAccountName:
          description: DB account username info (when connectionAccount.type is equal to UIDPWD)
          type: string
        kerberosProtocol:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$KerberosProtocol'
        secretStore:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SecretStore'
        secretStoreEnabled:
          description: Whether 3rd-party secret store is enabled for the connection
          type: boolean
        type:
          description: 'DB connection account type (Default: UIDPWD)'
          enum:
            - UIDPWD
            - SASL_KERBEROS
          type: string
      required:
        - secretStoreEnabled
        - type
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner:
      description: list of DB connection owners
      properties:
        objectUuid:
          description: Object UUID (equivalent to DB connection UUID)
          type: string
        ownedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$OwnedBy'
        role:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Role'
        uuid:
          description: list of DB connection owners
          type: string
      required:
        - objectUuid
        - role
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone:
      description: Allowed zone info
      properties:
        createdAt:
          description: Zone creation date and time (UTC)
          format: date-time
          type: string
        ipBands:
          description: Zone IP bands
          items:
            description: Zone IP bands
            type: string
          type: array
        name:
          description: Allowed zone’s name
          type: string
        updatedAt:
          description: Zone update date and time (UTC)
          format: date-time
          type: string
        uuid:
          description: Allowed zone’s UUID
          type: string
      required:
        - createdAt
        - ipBands
        - name
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DocumentDBConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DocumentDbDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DocumentDbDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        authenticationDb:
          description: Authentication DB (For DocumentDB, MongoDB)
          type: string
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DynamoDBConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DynamoDBDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DynamoDBDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        cloudRegion:
          description: AWS cloud region (For DynamoDB, Athena)
          type: string
        dynamoType:
          description: DynamoDB type (For DynamoDB)
          enum:
            - AWS
            - STANDALONE
          type: string
        endpoint:
          description: Endpoint (For DynamoDB - Standalone)
          type: string
      required:
        - dynamoType
        - endpoint
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$GetDbConnectionResponse:
      discriminator:
        mapping:
          ATHENA: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AthenaConnectionResponse'
          AZURESQL: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AzureSQLConnectionResponse'
          BIGQUERY: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$BigqueryConnectionResponse'
          CASSANDRA: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$CassandraConnectionResponse'
          DOCUMENTDB: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DocumentDBConnectionResponse'
          DYNAMODB: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DynamoDBConnectionResponse'
          HANA: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HanaConnectionResponse'
          HIVE: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HiveConnectionResponse'
          IMPALA: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ImpalaConnectionResponse'
          MARIADB: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MariaDBConnectionResponse'
          MONGODB: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MongoDBConnectionResponse'
          MYSQL: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MysqlConnectionResponse'
          ORACLE: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$OracleConnectionResponse'
          POSTGRESQL: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PostgresqlConnectionResponse'
          PRESTO: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrestoConnectionResponse'
          REDIS: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedisConnectionResponse'
          REDSHIFT: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedshiftConnectionResponse'
          SCYLLADB: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ScyllaDBConnectionResponse'
          SINGLESTORE: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SingleStoreConnectionResponse'
          SNOWFLAKE: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SnowflakeConnectionResponse'
          SQLSERVER: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SQLServerConnectionResponse'
          TIBERO: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TiberoConnectionResponse'
          TRINO: '#/components/schemas/com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TrinoConnectionResponse'
        propertyName: databaseType
      oneOf:
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MysqlConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MariaDBConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PostgresqlConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SnowflakeConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedshiftConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$BigqueryConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrestoConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SQLServerConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AzureSQLConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$OracleConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TiberoConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HiveConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MongoDBConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$CassandraConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DynamoDBConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TrinoConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ImpalaConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DocumentDBConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ScyllaDBConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AthenaConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedisConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SingleStoreConnectionResponse'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HanaConnectionResponse'
      properties:
        common:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$GetDbConnectionResponseCommon'
      required:
        - common
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$GetDbConnectionResponseCommon:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HanaConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HanaDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HanaDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For HANA)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HiveConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HiveDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$HiveDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ImpalaConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ImpalaDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ImpalaDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
        otherOptions:
          description: Substring to attach after hostname for additional options (For Impala)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting:
      description: Justification settings info
      properties:
        requireExecuteReason:
          description: justification required for SQL execution
          type: boolean
        requireExportDataReason:
          description: justification required for exporting data
          type: boolean
        requireExportSchemaReason:
          description: justification required for exporting schema
          type: boolean
        requireImportDataReason:
          description: justification required for data import
          type: boolean
        requireImportSchemaReason:
          description: justification required for schema import
          type: boolean
      required:
        - requireExecuteReason
        - requireExportDataReason
        - requireExportSchemaReason
        - requireImportDataReason
        - requireImportSchemaReason
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$KerberosProtocol:
      description: DB connection kerberos protocols info (when connectionAccount.type is equal to SASL_KERBEROS)
      properties:
        principal:
          description: Kerberos principal
          type: string
        realm:
          description: Kerberos realm
          type: string
        serviceName:
          description: Kerberos service name
          type: string
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ListResponse:
      description: Object list per entry
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalListInfo'
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        deleted:
          description: Whether this DB connection item was deleted
          type: boolean
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection UUID
          type: string
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ListZone'
          type: array
      required:
        - additionalInfo
        - createdAt
        - createdBy
        - databaseType
        - deleted
        - ledger
        - name
        - updatedAt
        - updatedBy
        - uuid
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ListZone:
      description: Allowed zone info
      properties:
        name:
          description: Allowed zone’s name
          type: string
        uuid:
          description: Allowed zone’s UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$LoginRule:
      description: DB connection login rules info
      properties:
        interval:
          description: 'Specified time interval value before lockout (Default: DISABLED)'
          enum:
            - DISABLED
            - 10MIN
            - 30MIN
            - 1HR
            - 2HR
            - 3HR
            - 4HR
            - 8HR
            - 1DAY
            - 2DAY
            - 5DAY
            - 7DAY
            - 20DAY
            - 30DAY
          type: string
        maxLoginFailures:
          description: Max login failures allowed (-1=disabled)
          enum:
            - -1
            - 1
            - 2
            - 3
            - 5
            - 10
            - 20
          format: int32
          type: integer
      required:
        - interval
        - maxLoginFailures
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MariaDBConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MariaDbDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MariaDbDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        charset:
          description: DB connection’s character set configured (For MySQL, MariaDB
          type: string
        collation:
          description: DB connection’s character set’s collation configured (For MySQL, MariaDB)
          type: string
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MongoDBConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MongoDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MongoDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        authenticationDb:
          description: Authentication DB (For DocumentDB, MongoDB)
          type: string
        hostnameForLookup:
          description: Hostname for lookup (For MongoDB)
          type: string
        otherOptions:
          description: Substring to attach after hostname for additional options (For MongoDB)
          type: string
        schemaType:
          description: Scheme type (For MongoDB)
          enum:
            - mongodb://
            - mongodb+srv://
          type: string
      required:
        - schemaType
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MysqlConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MysqlDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$MysqlDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        charset:
          description: DB connection’s character set configured (For MySQL, MariaDB
          type: string
        collation:
          description: DB connection’s character set’s collation configured (For MySQL, MariaDB)
          type: string
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$OracleConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$OracleDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$OracleDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        listenerName:
          description: SID or service name (For Oracle)
          type: string
        listenerType:
          description: Listener type (For Oracle)
          enum:
            - SID
            - SERVICE_NAME
          type: string
      required:
        - listenerName
        - listenerType
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$OwnedBy:
      description: DB connection owner info
      properties:
        active:
          description: Whether the DB connection owner is active
          type: boolean
        authType:
          description: DB connection owner’s authentication type
          enum:
            - QueryPie
            - LDAP
            - Okta
            - SwivelSecure
            - OneLogin
            - SAML
            - Custom
          type: string
        email:
          description: DB connection owner’s email
          type: string
        loginId:
          description: DB connection owner’s username
          type: string
        name:
          description: DB connection owner’s name
          type: string
        userType:
          description: DB connection owner’s type
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: DB connection owner’s UUID
          type: string
      required:
        - active
        - authType
        - email
        - loginId
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PostgresqlConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PostgresqlDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PostgresqlDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrestoConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrestoDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrestoDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting:
      description: Advanced privilege setting info
      properties:
        dbAccountName:
          description: DB account username bound to this privilege
          type: string
        privilegeName:
          description: Privilege name
          type: string
        privilegeUuid:
          description: Privilege UUID
          type: string
      required:
        - dbAccountName
        - privilegeName
        - privilegeUuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedisConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedshiftConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedshiftDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$RedshiftDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Role:
      description: DB connection owner’s role info
      properties:
        name:
          description: DB connection owner’s role name
          type: string
        uuid:
          description: DB connection owner’s role UUID
          type: string
      required:
        - name
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SQLServerConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SQLServerDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SQLServerDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ScyllaDBConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ScyllaDBDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ScyllaDBDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        keyspaceName:
          description: Keyspace name (For Cassandra, Scylla)
          type: string
      required:
        - keyspaceName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SecretStore:
      description: DB connection secret store info (when connectionAccount.secretStoreEnabled is true)
      properties:
        account:
          description: Secret store account path
          type: string
        name:
          description: Secret store name
          type: string
        uuid:
          description: Secret store UUID
          type: string
      required:
        - account
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SingleStoreConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SingleStoreDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SingleStoreDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        charset:
          description: DB connection’s character set configured (For MySQL, MariaDB
          type: string
        collation:
          description: DB connection’s character set’s collation configured (For MySQL, MariaDB)
          type: string
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SnowflakeConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SnowflakeDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SnowflakeDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
        roleName:
          description: Role name (For Snowflake)
          type: string
        warehouseName:
          description: Warehouse name (For Snowflake)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting:
      description: DB connection SSH setting info
      properties:
        sshConfigName:
          description: SSH configuration name
          type: string
        sshConfigUuid:
          description: SSH configuration UUID
          type: string
        useSsh:
          description: Whether using SSH
          type: boolean
      required:
        - useSsh
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting:
      description: DB connection SSL setting info
      properties:
        sslConfigName:
          description: SSL configuration name
          type: string
        sslConfigUuid:
          description: SSL configuration UUID
          type: string
        useSsl:
          description: Whether using SSL
          type: boolean
      required:
        - useSsl
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TiberoConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TiberoDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TiberoDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TrinoConnectionResponse:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$AdditionalDetailInfo'
        advancedPrivilegeSetting:
          description: Advanced privilege setting info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$PrivilegeSetting'
          type: array
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudProviderUuid:
          description: DB cloud provider’s UUID
          type: string
        clusters:
          description: List of DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$Cluster'
          type: array
        connectionAccount:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionAccount'
        connectionOwners:
          description: list of DB connection owners
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ConnectionOwner'
          type: array
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        databaseType:
          description: Type of database
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - TIBERO
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
            - SINGLESTORE
            - HANA
          type: string
        hideCredential:
          description: Whether to hide credentials from users' connection list page
          type: boolean
        justificationSettings:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$JustificationSetting'
        ledger:
          description: Whether the DB includes ledger table(s)
          type: boolean
        name:
          description: DB connection name
          type: string
        sshSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SshSetting'
        sslSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$SslSetting'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: DB connection’s UUID
          type: string
        vendorDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TrinoDetail'
        zones:
          description: Allowed zone info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$DetailZone'
          type: array
      required:
        - additionalInfo
        - advancedPrivilegeSetting
        - clusters
        - connectionAccount
        - connectionOwners
        - createdAt
        - createdBy
        - databaseType
        - hideCredential
        - justificationSettings
        - ledger
        - name
        - sshSetting
        - sslSetting
        - updatedAt
        - updatedBy
        - uuid
        - vendorDetail
        - zones
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$TrinoDetail:
      description: Contents may vary based on data source type of the DB connection
      properties:
        databaseName:
          description: Database name (For MySQL, PostgreSQL, SQL Server, MariaDB, AzureSQL, Redshift, Snowflake, Presto, Trino, Athena, Hive, Impala, Tibero, SingleStore)
          type: string
      required:
        - databaseName
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse:
      description: Object list per entry
      properties:
        cloudProviderType:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        cloudRegion:
          description: Cloud region
          type: string
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse$Creator'
        credentialOption:
          description: Credential option configured
          enum:
            - INSTANCE_PROFILE
            - CROSS_ACCOUNT_ROLE
            - PROFILE_CREDENTIAL
            - ACCESS_KEY
            - SERVICE_ACCOUNT
            - CLIENT_SECRET
          type: string
        deleted:
          description: Whether the item was deleted
          type: boolean
        name:
          description: DB cloud provider’s name
          type: string
        proxyAuthType:
          description: Proxy DB Authentication Type
          enum:
            - QUERYPIE
            - MANUAL
          type: string
        proxyEnabled:
          description: Whether proxy for connections was enabled
          type: boolean
        replicationMode:
          description: Scheduling mode
          enum:
            - MANUAL
            - SCHEDULE
          type: string
        synchronizableDatabaseTypes:
          description: Types of databases in sync
          items:
            description: Types of databases in sync
            type: string
          type: array
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse$Updater'
        uuid:
          description: DB cloud provider’s UUID
          format: uuid
          type: string
      required:
        - cloudProviderType
        - createdAt
        - createdBy
        - credentialOption
        - deleted
        - name
        - proxyEnabled
        - replicationMode
        - synchronizableDatabaseTypes
        - updatedAt
        - updatedBy
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse$Creator:
      description: Creator Info
      properties:
        name:
          description: Creator's name
          type: string
        uuid:
          description: Creator's UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse$Updater:
      description: Updater Info
      properties:
        name:
          description: Updater's name
          type: string
        uuid:
          description: Updater's UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncRequest:
      properties:
        awsAccessKey:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncRequest$AwsAccessKeyCredential'
        azureClientSecret:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncRequest$AzureClientSecretCredential'
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncRequest$AwsAccessKeyCredential:
      description: AWS access key info
      properties:
        key:
          description: Cloud access key
          type: string
        secret:
          description: Cloud secret key
          type: string
      required:
        - key
        - secret
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncRequest$AzureClientSecretCredential:
      description: Azure client secret info
      properties:
        id:
          description: Client secret ID(type = Azure)
          type: string
        value:
          description: Client secret value(type = Azure)
          type: string
      required:
        - id
        - value
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncResponse:
      properties:
        cloudProvider:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncResponse$CloudProvider'
        historyDetailUuid:
          description: Synchronization log UUID
          format: uuid
          type: string
      required:
        - cloudProvider
        - historyDetailUuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncResponse$CloudProvider:
      description: DB cloud provider info
      properties:
        name:
          description: DB cloud provider’s name
          type: string
        type:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        uuid:
          description: DB cloud provider’s UUID
          format: uuid
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataAccessRequest:
      properties:
        allowedUserUuids:
          description: List of allowed users' UUIDs
          items:
            description: List of allowed users' UUIDs
            type: string
          type: array
        force:
          description: 'Whether to overwrite existing permissions (Default: false)'
          type: boolean
        objectPath:
          description: |-
            Target object path

            (e.g. dbName.tableName.columnName, or dbName.schemaName.tableName.columnName, or dbName.keyName)
          type: string
        objectType:
          description: Target object type
          enum:
            - TABLE
            - COLUMN
          type: string
      required:
        - objectPath
        - objectType
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataAccessResponse:
      properties:
        policy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataAccessPolicy'
      required:
        - policy
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataMaskingRequest:
      properties:
        allowedUserUuids:
          description: List of allowed users' UUIDs
          items:
            description: List of allowed users' UUIDs
            type: string
          type: array
        force:
          description: 'Whether to overwrite existing permissions (Default: false)'
          type: boolean
        objectPath:
          description: |-
            Target object path

            (e.g. dbName.tableName.columnName, or dbName.schemaName.tableName.columnName, or dbName.keyName)
          type: string
        objectType:
          description: Target object type
          enum:
            - TABLE
            - COLUMN
          type: string
        patternUuids:
          description: Masking pattern UUIDs[]
          items:
            description: Masking pattern UUIDs[]
            type: string
          type: array
      required:
        - objectPath
        - objectType
        - patternUuids
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataMaskingResponse:
      properties:
        policy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataMaskingPolicy'
      required:
        - policy
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateSensitiveDataRequest:
      properties:
        allowedUserUuids:
          description: List of allowed users' UUIDs
          items:
            description: List of allowed users' UUIDs
            type: string
          type: array
        force:
          description: 'Whether to overwrite existing permissions (Default: false)'
          type: boolean
        objectPath:
          description: |-
            Target object path

            (e.g. dbName.tableName.columnName, or dbName.schemaName.tableName.columnName, or dbName.keyName)
          type: string
        objectType:
          description: Target object type
          enum:
            - TABLE
            - COLUMN
          type: string
        sensitivityLevel:
          description: Level of sensitivity (1[Low]-3[High])
          enum:
            - 1
            - 2
            - 3
          format: int32
          type: integer
      required:
        - objectPath
        - objectType
        - sensitivityLevel
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateSensitiveDataResponse:
      properties:
        policy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$SensitiveDataPolicy'
      required:
        - policy
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataAccessPolicy:
      properties:
        name:
          description: Policy name
          type: string
        rule:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataAccessRule'
        type:
          description: Policy type
          enum:
            - DATA_ACCESS
            - DATA_MASKING
            - SENSITIVE_DATA
          type: string
        uuid:
          description: Policy UUID
          type: string
      required:
        - name
        - rule
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataAccessRule:
      description: Policy rule info
      properties:
        allowedUserUuids:
          description: List of allowed users' UUIDs
          items:
            description: List of allowed users' UUIDs
            type: string
          type: array
        objectPath:
          description: |-
            Policy rule target object path

            (e.g. dbName.tableName.columnName)
          type: string
        objectType:
          description: Policy rule target type
          enum:
            - TABLE
            - COLUMN
          type: string
        uuid:
          description: Policy rule UUID
          type: string
      required:
        - allowedUserUuids
        - objectPath
        - objectType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataMaskingPattern:
      description: Masking pattern info
      properties:
        name:
          description: Masking pattern name
          type: string
        uuid:
          description: Masking pattern UUID
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataMaskingPolicy:
      properties:
        name:
          description: Policy name
          type: string
        rules:
          description: Policy rule info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataMaskingRule'
          type: array
        type:
          description: Policy type
          enum:
            - DATA_ACCESS
            - DATA_MASKING
            - SENSITIVE_DATA
          type: string
        uuid:
          description: Policy UUID
          type: string
      required:
        - name
        - rules
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataMaskingRule:
      description: Policy rule info
      properties:
        allowedUserUuids:
          description: List of allowed users' UUIDs
          items:
            description: List of allowed users' UUIDs
            type: string
          type: array
        objectPath:
          description: |-
            Policy rule target object path

            (e.g. dbName.tableName.columnName)
          type: string
        objectType:
          description: Policy rule target type
          enum:
            - TABLE
            - COLUMN
          type: string
        pattern:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$DataMaskingPattern'
        uuid:
          description: Policy rule UUID
          type: string
      required:
        - allowedUserUuids
        - objectPath
        - objectType
        - pattern
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$SensitiveDataPolicy:
      properties:
        name:
          description: Policy name
          type: string
        rule:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$SensitiveDataRule'
        type:
          description: Policy type
          enum:
            - DATA_ACCESS
            - DATA_MASKING
            - SENSITIVE_DATA
          type: string
        uuid:
          description: Policy UUID
          type: string
      required:
        - name
        - rule
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$SensitiveDataRule:
      description: Policy rule info
      properties:
        allowedUserUuids:
          description: List of allowed users' UUIDs
          items:
            description: List of allowed users' UUIDs
            type: string
          type: array
        objectPath:
          description: |-
            Policy rule target object path

            (e.g. dbName.tableName.columnName)
          type: string
        objectType:
          description: Policy rule target type
          enum:
            - TABLE
            - COLUMN
          type: string
        sensitivityLevel:
          description: Level of sensitivity (1[Low]-3[High])
          enum:
            - 1
            - 2
            - 3
          format: int32
          type: integer
        uuid:
          description: Policy rule UUID
          type: string
      required:
        - allowedUserUuids
        - objectPath
        - objectType
        - sensitivityLevel
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$GetPrivilegeResponse:
      properties:
        canCopyClipboard:
          description: Whether clipboard copy is permitted
          type: boolean
        canExport:
          description: Whether export is permitted
          type: boolean
        canImport:
          description: Whether import is permitted
          type: boolean
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        description:
          description: Privilege description which admin has written
          type: string
        mappedConnections:
          description: List of privilege-assigned DB clusters
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$GetPrivilegeResponse$MappedConnection'
          type: array
        name:
          description: Privilege name
          type: string
        privilegeTypes:
          description: List of allowed privilege types. Refer to Privilege Type Info.
          items:
            description: List of allowed privilege types. Refer to Privilege Type Info.
            type: string
          type: array
        privilegeVendor:
          description: Applicable vendor
          enum:
            - SQL
            - REDIS
          type: string
        status:
          description: Status of the privilege
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: Privilege UUID
          type: string
      required:
        - canCopyClipboard
        - canExport
        - canImport
        - createdAt
        - createdBy
        - description
        - mappedConnections
        - name
        - privilegeTypes
        - privilegeVendor
        - status
        - updatedAt
        - updatedBy
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$GetPrivilegeResponse$AssignedTo:
      description: Privilege-assigned DB cluster’s target info
      properties:
        name:
          description: Privilege-assigned DB cluster’s target name
          type: string
        userType:
          description: Privilege-assigned DB cluster’s target type
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: Privilege-assigned DB cluster’s target UUID
          type: string
      required:
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$GetPrivilegeResponse$MappedConnection:
      description: List of privilege-assigned DB clusters
      properties:
        assignedTo:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$GetPrivilegeResponse$AssignedTo'
        clusterUuid:
          description: Privilege-assigned DB cluster’s UUID
          type: string
        dbHost:
          description: Privilege-assigned DB cluster’s DB host
          type: string
        name:
          description: Name of the privilege-assigned DB cluster
          type: string
        replicationType:
          description: Privilege-assigned DB cluster’s replication type
          enum:
            - PRIMARY
            - SECONDARY
            - SINGLE
          type: string
      required:
        - assignedTo
        - clusterUuid
        - dbHost
        - name
        - replicationType
      type: object
    V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$ListResponse:
      description: Object list per entry
      properties:
        canCopyClipboard:
          description: Whether clipboard copy is permitted
          type: boolean
        canExport:
          description: Whether export is permitted
          type: boolean
        canImport:
          description: Whether import is permitted
          type: boolean
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        description:
          description: Privilege description which admin has written
          type: string
        name:
          description: Privilege name
          type: string
        privilegeTypes:
          description: List of allowed privilege types. Refer to Privilege Type Info.
          items:
            description: List of allowed privilege types. Refer to Privilege Type Info.
            type: string
          type: array
        privilegeVendor:
          description: Applicable vendor
          enum:
            - SQL
            - REDIS
          type: string
        status:
          description: Status of the privilege
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SimpleUserResponse'
        uuid:
          description: Privilege UUID
          type: string
      required:
        - canCopyClipboard
        - canExport
        - canImport
        - createdAt
        - createdBy
        - description
        - name
        - privilegeTypes
        - privilegeVendor
        - status
        - updatedAt
        - updatedBy
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$CloudProviderExecutionHistoryResponse:
      properties:
        cloudProvider:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$CloudProviderExecutionHistoryResponse$CloudProvider'
        historyDetail:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$HistoryDetail'
      required:
        - cloudProvider
        - historyDetail
      type: object
    V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$CloudProviderExecutionHistoryResponse$CloudProvider:
      description: Cloud provider info
      properties:
        name:
          description: DB cloud provider’s name
          type: string
        type:
          description: DB cloud provider’s type
          enum:
            - NONE
            - AWS
            - AZURE
            - GCP
          type: string
        uuid:
          description: DB cloud provider’s UUID
          format: uuid
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$HistoryDetail:
      description: History detail info
      properties:
        jobName:
          description: Job name
          type: string
        logs:
          description: List of detailed logs
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$HistoryDetail$JobExecutionLog'
          type: array
        result:
          description: Overall result
          enum:
            - RUNNING
            - PAUSED
            - SUCCESS
            - BLOCKED
            - FAILURE
          type: string
        runAt:
          description: Start date and time of the job (UTC)
          format: date-time
          type: string
        trigger:
          description: Trigger of the job execution
          enum:
            - MANUAL
            - SCHEDULE
          type: string
        uuid:
          description: History detail UUID
          format: uuid
          type: string
      required:
        - logs
        - result
        - runAt
        - trigger
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$HistoryDetail$JobExecutionLog:
      description: List of detailed logs
      properties:
        eventAt:
          description: Date and time of event occurrence (UTC)
          format: date-time
          type: string
        eventDetail:
          description: Event detail
          type: string
      required:
        - eventAt
        - eventDetail
      type: object
    V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$AddRequest:
      discriminator:
        mapping:
          HASHICORP_VAULT: '#/components/schemas/com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$AddRequest$Vault'
        propertyName: secretStoreType
      properties:
        name:
          description: Secret store name
          type: string
        secretStoreType:
          description: Secret store type
          enum:
            - HASHICORP_VAULT
          type: string
      required:
        - name
        - secretStoreType
      type: object
    V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$AddRequest$Vault:
      properties:
        authMethod:
          default: TOKEN
          description: Secret store authentication method
          enum:
            - TOKEN
          type: string
        name:
          description: Secret store name
          type: string
        namespace:
          default: ""
          description: Secret store namespace
          type: string
        secretEngine:
          description: Secret engine type
          enum:
            - KEY-VALUE
            - DATABASE
            - SSH-OTP
          type: string
        secretStoreType:
          description: Secret store type
          enum:
            - HASHICORP_VAULT
          type: string
        serverAddress:
          description: Secret store server address
          type: string
        serviceType:
          description: Secret store service type
          enum:
            - DATABASE
            - SERVER
          type: string
        token:
          description: Secret store authentication token
          type: string
      required:
        - authMethod
        - name
        - secretEngine
        - secretStoreType
        - serverAddress
        - serviceType
        - token
      type: object
    V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$DetailResponse:
      discriminator:
        mapping:
          HASHICORP_VAULT: '#/components/schemas/com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$DetailResponse$Vault'
        propertyName: secretStoreType
      properties:
        name:
          description: Secret store name
          type: string
        secretStoreType:
          description: Secret store type
          enum:
            - HASHICORP_VAULT
          type: string
        uuid:
          description: Secret store UUID
          format: uuid
          type: string
      required:
        - name
        - secretStoreType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$DetailResponse$Vault:
      properties:
        authMethod:
          description: Secret store authentication method
          enum:
            - TOKEN
          type: string
        name:
          type: string
        namespace:
          description: Secret store namespace
          type: string
        secretEngine:
          description: Secret engine type
          enum:
            - KEY-VALUE
            - DATABASE
            - SSH-OTP
          type: string
        secretStoreType:
          description: Secret store type
          enum:
            - HASHICORP_VAULT
          type: string
        serverAddress:
          description: Secret store server address
          type: string
        uuid:
          format: uuid
          type: string
      required:
        - authMethod
        - name
        - secretEngine
        - secretStoreType
        - serverAddress
        - uuid
      title: HASHICORP_VAULT
      type: object
    V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$EditRequest:
      oneOf:
        - $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$EditRequest$Vault'
      properties:
        name:
          description: Secret store name
          type: string
      type: object
    V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$EditRequest$Vault:
      properties:
        authMethod:
          description: Secret store authentication method
          enum:
            - TOKEN
          type: string
        serverAddress:
          description: Secret store server address
          type: string
        token:
          description: Secret store authentication token
          type: string
      title: HASHICORP_VAULT
      type: object
    V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$Response:
      properties:
        name:
          description: Secret store name
          type: string
        uuid:
          description: Secret store UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.security.AccountLockoutPolicy:
      description: Account lockout policy info
      properties:
        accountLockoutEnabled:
          default: false
          description: Whether QueryPie account lockout is enabled
          type: boolean
        accountLockoutSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.AccountLockoutPolicy$AccountLockoutSetting'
        expirationPeriod:
          default: 30
          description: Days of inactivity before account expiration
          format: int32
          type: integer
      type: object
    V2_com.chequer.querypie.api.external.v2.security.AccountLockoutPolicy$AccountLockoutSetting:
      default: null
      description: Account lockout setting info
      properties:
        interval:
          description: Time range for counting maxLoginFailure (minutes)
          format: int32
          maximum: 99999
          minimum: 1
          type: integer
        maxLoginFailure:
          description: Maximum login failure allowed *Will be disabled in case accountLockoutPolicy.interval == DISABLED
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
      required:
        - interval
        - maxLoginFailure
      type: object
    V2_com.chequer.querypie.api.external.v2.security.DbConnectionSecurity:
      description: DB connection security info
      properties:
        advancedPrivilegeSetting:
          description: Whether advanced setting for privileges is enabled
          type: boolean
        displayRows:
          description: Whether to display first 10 rows of SELECT query result in Query Audit Details
          type: boolean
        maxAccessDuration:
          default: 365
          description: Maximum allowed days set for access request/approval [days]
          format: int32
          type: integer
        privilegeDeactivationPeriod:
          default: 90
          description: Deactivation period set for assigned privileges with inactivity [days]
          format: int32
          type: integer
      type: object
    V2_com.chequer.querypie.api.external.v2.security.ExternalV2SecuritySettingDto$Request:
      properties:
        accountLockoutPolicy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.AccountLockoutPolicy'
        kubernetesConnectionSecurity:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.KubernetesConnectionSecurity'
        others:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.Others'
        passwordSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.PasswordSetting'
        timeout:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.Timeout'
        webIpAccessControl:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.WebIpAccessControl'
      type: object
    V2_com.chequer.querypie.api.external.v2.security.ExternalV2SecuritySettingDto$Response:
      properties:
        accountLockoutPolicy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.AccountLockoutPolicy'
        dbConnectionSecurity:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.DbConnectionSecurity'
        kubernetesConnectionSecurity:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.KubernetesConnectionSecurity'
        others:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.Others'
        passwordSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.PasswordSetting'
        secretStores:
          description: Secret stores info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.SecretStore'
          type: array
        serverConnectionSecurity:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.ServerConnectionSecurity'
        timeout:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.Timeout'
        vaultEnabled:
          description: 'Whether external secret store vault is enabled '
          type: boolean
        webIpAccessControl:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.WebIpAccessControl'
      required:
        - accountLockoutPolicy
        - kubernetesConnectionSecurity
        - others
        - passwordSetting
        - secretStores
        - timeout
        - vaultEnabled
        - webIpAccessControl
      type: object
    V2_com.chequer.querypie.api.external.v2.security.KubernetesConnectionSecurity:
      description: Kubernetes Access Control Settings
      properties:
        idleSessionTimeoutMinutes:
          description: Idle Session Timeout (Minutes)
          format: int32
          type: integer
      required:
        - idleSessionTimeoutMinutes
      type: object
    V2_com.chequer.querypie.api.external.v2.security.Others:
      description: Other security settings
      properties:
        fileExportEncryption:
          description: Whether encryption is required when performing file export
          enum:
            - REQUIRED
            - NOT_REQUIRED
          type: string
      required:
        - fileExportEncryption
      type: object
    V2_com.chequer.querypie.api.external.v2.security.PasswordSetting:
      description: Password setting info
      properties:
        maxPasswordAge:
          default: 90
          description: Maximum password age [days]
          format: int32
          type: integer
        passwordHistoryCount:
          default: 1
          description: Password History Count
          format: int32
          maximum: 10
          minimum: 1
          type: integer
      type: object
    V2_com.chequer.querypie.api.external.v2.security.SecretStore:
      description: Secret stores info
      properties:
        name:
          description: Secret store name
          type: string
        uuid:
          description: Secret store UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.v2.security.ServerConnectionSecurity:
      description: Server connection security info
      properties:
        osAccountLockoutEnabled:
          default: false
          description: Whether server OS account lockout is enabled
          type: boolean
        osAccountLockoutSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.ServerConnectionSecurity$OsAccountLockoutSetting'
        serverSessionTimeout:
          default: 10
          description: QueryPie server session timeout [min]
          format: int32
          type: integer
        sessionTerminationEnabled:
          default: false
          description: Whether server session termination is enabled
          type: boolean
        sessionTerminationSetting:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.ServerConnectionSecurity$SessionTerminationSetting'
      type: object
    V2_com.chequer.querypie.api.external.v2.security.ServerConnectionSecurity$OsAccountLockoutSetting:
      default: null
      description: Server OS account lockout setting info
      properties:
        interval:
          description: Time range for counting maxLoginFailure for server OS accounts (minutes)
          format: int32
          maximum: 99999
          minimum: 1
          type: integer
        maxLoginFailure:
          description: Maximum OS Account login failure allowed *Will be disabled in case osAccountLockoutInterval == DISABLED
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
      required:
        - interval
        - maxLoginFailure
      type: object
    V2_com.chequer.querypie.api.external.v2.security.ServerConnectionSecurity$SessionTerminationSetting:
      default: null
      description: Server session termination setting info
      properties:
        interval:
          description: Time range for counting maxCommandAttempts (minutes)
          format: int32
          maximum: 99999
          minimum: 1
          type: integer
        maxCommandAttempts:
          description: Maximum command attempts *Will be disabled in case sessionLockoutInterval == DISABLED
          format: int32
          maximum: 9999
          minimum: 1
          type: integer
      required:
        - interval
        - maxCommandAttempts
      type: object
    V2_com.chequer.querypie.api.external.v2.security.Timeout:
      description: Timeout setting info
      properties:
        agentSessionTimeout:
          default: 1440
          description: QueryPie agent session timeout [min]
          format: int32
          type: integer
        webInactivityTimeout:
          default: 60
          description: QueryPie web session timeout [min]
          format: int32
          type: integer
      required:
        - agentSessionTimeout
        - webInactivityTimeout
      type: object
    V2_com.chequer.querypie.api.external.v2.security.WebIpAccessControl:
      description: QueryPie IP ACL info
      properties:
        individualize:
          description: Whether IP ACL is individualized
          type: boolean
        ipBands:
          description: ACL IP bands for all users
          items:
            description: ACL IP bands for all users
            type: string
          type: array
      required:
        - individualize
        - ipBands
      type: object
    V2_com.chequer.querypie.api.external.workflow.ApproveRequest:
      properties:
        comments:
          description: Approver's justification
          type: string
        userUuid:
          description: user UUID
          format: uuid
          type: string
      required:
        - comments
        - userUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.ApproveResponse:
      properties:
        remainingSteps:
          description: The next step after processing this API request
          enum:
            - APPROVAL_1
            - APPROVAL_2
            - APPROVAL_3
            - EXECUTION
            - REVIEW
            - DONE
          type: string
      required:
        - remainingSteps
      type: object
    V2_com.chequer.querypie.api.external.workflow.ConfirmRequest:
      properties:
        comments:
          description: Reviewer's justification (Requires 3 characters at minimum)
          type: string
        userUuid:
          description: user UUID
          format: uuid
          type: string
      required:
        - comments
        - userUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.ConfirmResponse:
      properties:
        remainingSteps:
          description: The next step after processing this API request
          enum:
            - APPROVAL_1
            - APPROVAL_2
            - APPROVAL_3
            - EXECUTION
            - REVIEW
            - DONE
          type: string
      required:
        - remainingSteps
      type: object
    V2_com.chequer.querypie.api.external.workflow.RejectRequest:
      properties:
        comments:
          description: Approver's justification (Requires 3 characters at minimum)
          type: string
        userUuid:
          description: user UUID
          format: uuid
          type: string
      required:
        - comments
        - userUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.RejectResponse:
      properties:
        remainingSteps:
          description: The next step after processing this API request
          enum:
            - APPROVAL_1
            - APPROVAL_2
            - APPROVAL_3
            - EXECUTION
            - REVIEW
            - DONE
          type: string
      required:
        - remainingSteps
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse:
      properties:
        approvalRule:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalRule'
        approvalStatus:
          description: Workflow approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Workflow approval steps list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep'
          type: array
        canceledAt:
          description: Date and time of cancellation (UTC)
          format: date-time
          type: string
        executionStatus:
          description: Workflow execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expireAt:
          description: Workflow Due Date (UTC)
          format: date-time
          type: string
        requestType:
          description: 'Request type: Access Role Request workflow'
          enum:
            - ACCESS_ROLE
          type: string
        requestedAt:
          description: Date and time of request (UTC)
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$RequestedBy'
        requesterComment:
          description: Workflow requester’s justification
          type: string
        reviewAssignee:
          description: Workflow reviewers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ReviewAssignee'
          type: array
        roleUuid:
          description: Requested role UUID
          format: uuid
          type: string
        serviceType:
          description: Requested target service type
          enum:
            - SAC
            - KAC
          type: string
        urgent:
          description: Whether it was processed in urgent mode
          type: boolean
        workflowTitle:
          description: Workflow title
          type: string
        workflowUuid:
          description: Workflow UUID
          format: uuid
          type: string
      required:
        - approvalRule
        - approvalStatus
        - approvalSteps
        - executionStatus
        - expireAt
        - requestType
        - requestedAt
        - requestedBy
        - requesterComment
        - reviewAssignee
        - roleUuid
        - serviceType
        - urgent
        - workflowTitle
        - workflowUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalRule:
      description: Approval Rule info
      properties:
        name:
          description: Approval Rule name
          type: string
        uuid:
          description: Approval Rule UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep:
      description: Workflow approval steps list
      properties:
        assignees:
          description: Workflow approvers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep$Assignee'
          type: array
        condition:
          description: Workflow approval step conditions
          enum:
            - ALL
            - ANY
          type: string
        order:
          description: order of steps (starting from 0 in priority)
          format: int32
          type: integer
        status:
          description: Overall status of each approval step
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
      required:
        - assignees
        - condition
        - order
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep$Assignee:
      description: Workflow approvers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep$Assignee$ActionBy'
        approverComments:
          description: Approver’s justification
          type: string
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep$Assignee$AssignedUser'
        delegated:
          description: Whether it was delegated
          type: boolean
        status:
          description: Approver’s status
          enum:
            - NONE
            - PENDING
            - APPROVED
            - REJECTED
          type: string
      required:
        - assignedUser
        - delegated
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep$Assignee$ActionBy:
      description: Approval action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ApprovalStep$Assignee$AssignedUser:
      description: Users assigned as approvers
      properties:
        email:
          description: Approver email
          type: string
        loginId:
          description: Approver username
          type: string
        name:
          description: Approver name
          type: string
        uuid:
          description: Approver UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$RequestedBy:
      description: Workflow requester info
      properties:
        email:
          description: Requester email
          type: string
        loginId:
          description: Requester username
          type: string
        name:
          description: Requester name
          type: string
        uuid:
          description: Requester UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ReviewAssignee:
      description: Workflow reviewers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ReviewAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ReviewAssignee$AssignedUser'
        reviewerComments:
          description: Reviewer’s justification
          type: string
        status:
          description: Review status
          enum:
            - NONE
            - UNREAD
            - CONFIRMED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ReviewAssignee$ActionBy:
      description: Review action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse$ReviewAssignee$AssignedUser:
      description: Users assigned as reviewers
      properties:
        email:
          description: Reviewer email
          type: string
        loginId:
          description: Reviewer username
          type: string
        name:
          description: Reviewer name
          type: string
        uuid:
          description: Reviewer UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse:
      properties:
        accessControls:
          description: Access controls info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl'
          type: array
        approvalRule:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalRule'
        approvalStatus:
          description: Workflow approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Workflow approval steps list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep'
          type: array
        canceledAt:
          description: Date and time of cancellation (UTC)
          format: date-time
          type: string
        executionStatus:
          description: Workflow execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expireAt:
          description: Workflow Due Date (UTC)
          format: date-time
          type: string
        ledger:
          description: Whether the DB is ledger
          type: boolean
        requestType:
          description: 'Request type: DB Access Request workflow'
          enum:
            - DB_ACCESS_CONTROL
          type: string
        requestedAt:
          description: Date and time of request (UTC)
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$RequestedBy'
        requesterComment:
          description: Workflow requester’s justification
          type: string
        reviewAssignee:
          description: Workflow reviewers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ReviewAssignee'
          type: array
        urgent:
          description: Whether it was processed in urgent mode
          type: boolean
        workflowTitle:
          description: Workflow title
          type: string
        workflowUuid:
          description: Workflow UUID
          format: uuid
          type: string
      required:
        - accessControls
        - approvalRule
        - approvalStatus
        - approvalSteps
        - executionStatus
        - expireAt
        - requestType
        - requestedAt
        - requestedBy
        - requesterComment
        - reviewAssignee
        - urgent
        - workflowTitle
        - workflowUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl:
      description: Access controls info
      properties:
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl$Connection'
        granted:
          description: Whether the DB access was granted
          type: boolean
        privilege:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl$Privilege'
      required:
        - connection
        - granted
        - privilege
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl$Connection:
      description: DB connection Info
      properties:
        databaseType:
          description: DB cluster group type
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
          type: string
        db:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl$Connection$Db'
        deleted:
          description: Whether the DB cluster was deleted
          type: boolean
        name:
          description: DB cluster group name
          type: string
        objectType:
          description: Connection object type
          type: string
        uuid:
          description: DB cluster group UUID
          format: uuid
          type: string
      required:
        - databaseType
        - db
        - deleted
        - name
        - objectType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl$Connection$Db:
      description: DB cluster group type
      properties:
        clusterUuid:
          description: DB cluster UUID
          format: uuid
          type: string
        host:
          description: DB host
          type: string
        name:
          description: Database(Schema) name
          type: string
        replicationType:
          description: DB replication type
          enum:
            - PRIMARY
            - SECONDARY
            - SINGLE
          type: string
      required:
        - clusterUuid
        - host
        - name
        - replicationType
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$AccessControl$Privilege:
      description: Privilege info
      properties:
        deleted:
          description: Whether the privilege was deleted
          type: boolean
        name:
          description: Privilege name
          type: string
        uuid:
          description: Privilege UUID
          format: uuid
          type: string
      required:
        - deleted
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalRule:
      description: Approval Rule info
      properties:
        name:
          description: Approval Rule name
          type: string
        uuid:
          description: Approval Rule UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep:
      description: Workflow approval steps list
      properties:
        assignees:
          description: Workflow approvers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep$Assignee'
          type: array
        condition:
          description: Workflow approval step conditions
          enum:
            - ALL
            - ANY
          type: string
        order:
          description: order of steps (starting from 0 in priority)
          format: int32
          type: integer
        status:
          description: Overall status of each approval step
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
      required:
        - assignees
        - condition
        - order
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep$Assignee:
      description: Workflow approvers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep$Assignee$ActionBy'
        approverComments:
          description: Approver’s justification
          type: string
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep$Assignee$AssignedUser'
        delegated:
          description: Whether it was delegated
          type: boolean
        status:
          description: Approver’s status
          enum:
            - NONE
            - PENDING
            - APPROVED
            - REJECTED
          type: string
      required:
        - assignedUser
        - delegated
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep$Assignee$ActionBy:
      description: Approval action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ApprovalStep$Assignee$AssignedUser:
      description: Users assigned as approvers
      properties:
        email:
          description: Approver email
          type: string
        loginId:
          description: Approver username
          type: string
        name:
          description: Approver name
          type: string
        uuid:
          description: Approver UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$RequestedBy:
      description: Workflow requester info
      properties:
        email:
          description: Requester email
          type: string
        loginId:
          description: Requester username
          type: string
        name:
          description: Requester name
          type: string
        uuid:
          description: Requester UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ReviewAssignee:
      description: Workflow reviewers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ReviewAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ReviewAssignee$AssignedUser'
        reviewerComments:
          description: Reviewer’s justification
          type: string
        status:
          description: Review status
          enum:
            - NONE
            - UNREAD
            - CONFIRMED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ReviewAssignee$ActionBy:
      description: Review action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse$ReviewAssignee$AssignedUser:
      description: Users assigned as reviewers
      properties:
        email:
          description: Reviewer email
          type: string
        loginId:
          description: Reviewer username
          type: string
        name:
          description: Reviewer name
          type: string
        uuid:
          description: Reviewer UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse:
      properties:
        approvalRule:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalRule'
        approvalStatus:
          description: Workflow approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Workflow approval steps list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep'
          type: array
        canceledAt:
          description: Date and time of cancellation (UTC)
          format: date-time
          type: string
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$Connection'
        content:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$Content'
        executionAssignees:
          description: Workflow execution assignees
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ExecutionAssignee'
          type: array
        executionStatus:
          description: Workflow execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expireAt:
          description: Workflow Due Date (UTC)
          format: date-time
          type: string
        ledger:
          description: Whether the DB is ledger
          type: boolean
        queryAuditUuids:
          description: Related Query Audit UUID list
          items:
            description: Related Query Audit UUID list
            format: uuid
            type: string
          type: array
        requestType:
          description: 'Request type: SQL Export Workflow'
          enum:
            - DATA_EXPORT
          type: string
        requestedAt:
          description: Date and time of request (UTC)
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$RequestedBy'
        requesterComment:
          description: Workflow requester’s justification
          type: string
        reviewAssignee:
          description: Workflow reviewers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ReviewAssignee'
          type: array
        targetDate:
          description: SQL execution target date and time (UTC)
          format: date-time
          type: string
        urgent:
          description: Whether it was processed in urgent mode
          type: boolean
        workflowTitle:
          description: Workflow title
          type: string
        workflowUuid:
          description: Workflow UUID
          format: uuid
          type: string
      required:
        - approvalRule
        - approvalStatus
        - approvalSteps
        - connection
        - content
        - executionAssignees
        - executionStatus
        - expireAt
        - queryAuditUuids
        - requestType
        - requestedAt
        - requestedBy
        - requesterComment
        - reviewAssignee
        - targetDate
        - urgent
        - workflowTitle
        - workflowUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalRule:
      description: Approval Rule info
      properties:
        name:
          description: Approval Rule name
          type: string
        uuid:
          description: Approval Rule UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep:
      description: Workflow approval steps list
      properties:
        assignees:
          description: Workflow approvers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep$Assignee'
          type: array
        condition:
          description: Workflow approval step conditions
          enum:
            - ALL
            - ANY
          type: string
        order:
          description: order of steps (starting from 0 in priority)
          format: int32
          type: integer
        status:
          description: Overall status of each approval step
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
      required:
        - assignees
        - condition
        - order
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep$Assignee:
      description: Workflow approvers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep$Assignee$ActionBy'
        approverComments:
          description: Approver’s justification
          type: string
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep$Assignee$AssignedUser'
        delegated:
          description: Whether it was delegated
          type: boolean
        status:
          description: Approver’s status
          enum:
            - NONE
            - PENDING
            - APPROVED
            - REJECTED
          type: string
      required:
        - assignedUser
        - delegated
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep$Assignee$ActionBy:
      description: Approval action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    ? V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ApprovalStep$Assignee$AssignedUser
    : description: Users assigned as approvers
      properties:
        email:
          description: Approver email
          type: string
        loginId:
          description: Approver username
          type: string
        name:
          description: Approver name
          type: string
        uuid:
          description: Approver UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$Connection:
      description: DB connection Info
      properties:
        databaseType:
          description: DB cluster group type
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
          type: string
        db:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$Connection$Db'
        deleted:
          description: Whether the DB cluster was deleted
          type: boolean
        name:
          description: DB cluster group name
          type: string
        objectType:
          description: Connection object type
          type: string
        uuid:
          description: DB cluster group UUID
          format: uuid
          type: string
      required:
        - databaseType
        - db
        - deleted
        - name
        - objectType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$Connection$Db:
      description: DB cluster group type
      properties:
        clusterUuid:
          description: DB cluster UUID
          format: uuid
          type: string
        host:
          description: DB host
          type: string
        name:
          description: Database(Schema) name
          type: string
        replicationType:
          description: DB replication type
          enum:
            - PRIMARY
            - SECONDARY
            - SINGLE
          type: string
      required:
        - clusterUuid
        - host
        - name
        - replicationType
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$Content:
      description: Content info
      properties:
        type:
          description: SQL export content type
          enum:
            - QUERY
            - TABLE
          type: string
        value:
          description: Query text or table name (max 1000 characters)
          type: string
      required:
        - type
        - value
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ExecutionAssignee:
      description: Workflow execution assignees
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ExecutionAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ExecutionAssignee$AssignedUser'
        executorComments:
          description: Executor’s justification
          type: string
        status:
          description: Execution status
          enum:
            - NONE
            - PENDING
            - EXECUTED
            - CANCELED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ExecutionAssignee$ActionBy:
      description: Execution action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ExecutionAssignee$AssignedUser:
      description: User assigned as an executor
      properties:
        email:
          description: Executor email
          type: string
        loginId:
          description: Executor username
          type: string
        name:
          description: Executor name
          type: string
        uuid:
          description: Executor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$RequestedBy:
      description: Workflow requester info
      properties:
        email:
          description: Requester email
          type: string
        loginId:
          description: Requester username
          type: string
        name:
          description: Requester name
          type: string
        uuid:
          description: Requester UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ReviewAssignee:
      description: Workflow reviewers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ReviewAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ReviewAssignee$AssignedUser'
        reviewerComments:
          description: Reviewer’s justification
          type: string
        status:
          description: Review status
          enum:
            - NONE
            - UNREAD
            - CONFIRMED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ReviewAssignee$ActionBy:
      description: Review action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse$ReviewAssignee$AssignedUser:
      description: Users assigned as reviewers
      properties:
        email:
          description: Reviewer email
          type: string
        loginId:
          description: Reviewer username
          type: string
        name:
          description: Reviewer name
          type: string
        uuid:
          description: Reviewer UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse:
      properties:
        approvalRule:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalRule'
        approvalStatus:
          description: Workflow approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Workflow approval steps list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep'
          type: array
        canceledAt:
          description: Date and time of cancellation (UTC)
          format: date-time
          type: string
        connection:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$Connection'
        content:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$Content'
        executionAssignees:
          description: Workflow execution assignees
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ExecutionAssignee'
          type: array
        executionStatus:
          description: Workflow execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expireAt:
          description: Workflow Due Date (UTC)
          format: date-time
          type: string
        ledger:
          description: Whether the DB is ledger
          type: boolean
        queryAuditUuids:
          description: Related Query Audit UUID list
          items:
            description: Related Query Audit UUID list
            format: uuid
            type: string
          type: array
        requestType:
          description: 'Request type: SQL Request Workflow'
          enum:
            - SQL_EXECUTION
          type: string
        requestedAt:
          description: Date and time of request (UTC)
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$RequestedBy'
        requesterComment:
          description: Workflow requester’s justification
          type: string
        reviewAssignee:
          description: Workflow reviewers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ReviewAssignee'
          type: array
        targetDate:
          description: SQL execution target date and time (UTC)
          format: date-time
          type: string
        urgent:
          description: Whether it was processed in urgent mode
          type: boolean
        workflowTitle:
          description: Workflow title
          type: string
        workflowUuid:
          description: Workflow UUID
          format: uuid
          type: string
      required:
        - approvalRule
        - approvalStatus
        - approvalSteps
        - connection
        - content
        - executionAssignees
        - executionStatus
        - expireAt
        - queryAuditUuids
        - requestType
        - requestedAt
        - requestedBy
        - requesterComment
        - reviewAssignee
        - targetDate
        - urgent
        - workflowTitle
        - workflowUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalRule:
      description: Approval Rule info
      properties:
        name:
          description: Approval Rule name
          type: string
        uuid:
          description: Approval Rule UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep:
      description: Workflow approval steps list
      properties:
        assignees:
          description: Workflow approvers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep$Assignee'
          type: array
        condition:
          description: Workflow approval step conditions
          enum:
            - ALL
            - ANY
          type: string
        order:
          description: order of steps (starting from 0 in priority)
          format: int32
          type: integer
        status:
          description: Overall status of each approval step
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
      required:
        - assignees
        - condition
        - order
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep$Assignee:
      description: Workflow approvers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep$Assignee$ActionBy'
        approverComments:
          description: Approver’s justification
          type: string
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep$Assignee$AssignedUser'
        delegated:
          description: Whether it was delegated
          type: boolean
        status:
          description: Approver’s status
          enum:
            - NONE
            - PENDING
            - APPROVED
            - REJECTED
          type: string
      required:
        - assignedUser
        - delegated
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep$Assignee$ActionBy:
      description: Approval action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ApprovalStep$Assignee$AssignedUser:
      description: Users assigned as approvers
      properties:
        email:
          description: Approver email
          type: string
        loginId:
          description: Approver username
          type: string
        name:
          description: Approver name
          type: string
        uuid:
          description: Approver UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$Connection:
      description: DB connection Info
      properties:
        databaseType:
          description: DB cluster group type
          enum:
            - MYSQL
            - MARIADB
            - POSTGRESQL
            - REDSHIFT
            - BIGQUERY
            - PRESTO
            - SQLSERVER
            - AZURESQL
            - ORACLE
            - HIVE
            - MONGODB
            - CASSANDRA
            - DYNAMODB
            - TRINO
            - IMPALA
            - DOCUMENTDB
            - SCYLLADB
            - ATHENA
            - REDIS
            - SNOWFLAKE
          type: string
        db:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$Connection$Db'
        deleted:
          description: Whether the DB cluster was deleted
          type: boolean
        name:
          description: DB cluster group name
          type: string
        objectType:
          description: Connection object type
          type: string
        uuid:
          description: DB cluster group UUID
          format: uuid
          type: string
      required:
        - databaseType
        - db
        - deleted
        - name
        - objectType
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$Connection$Db:
      description: DB cluster group type
      properties:
        clusterUuid:
          description: DB cluster UUID
          format: uuid
          type: string
        host:
          description: DB host
          type: string
        name:
          description: Database(Schema) name
          type: string
        replicationType:
          description: DB replication type
          enum:
            - PRIMARY
            - SECONDARY
            - SINGLE
          type: string
      required:
        - clusterUuid
        - host
        - name
        - replicationType
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$Content:
      description: Content info
      properties:
        type:
          description: SQL execution content type
          enum:
            - TEXT
            - FILE
          type: string
        value:
          description: Query text or filename (max 1000 characters)
          type: string
        valuePreview:
          description: Query text preview in a file (max 1000 characters)
          type: string
      required:
        - type
        - value
        - valuePreview
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ExecutionAssignee:
      description: Workflow execution assignees
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ExecutionAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ExecutionAssignee$AssignedUser'
        executorComments:
          description: Executor’s justification
          type: string
        status:
          description: Execution status
          enum:
            - NONE
            - PENDING
            - EXECUTED
            - CANCELED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ExecutionAssignee$ActionBy:
      description: Execution action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ExecutionAssignee$AssignedUser:
      description: User assigned as an executor
      properties:
        email:
          description: Executor email
          type: string
        loginId:
          description: Executor username
          type: string
        name:
          description: Executor name
          type: string
        uuid:
          description: Executor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$RequestedBy:
      description: Workflow requester info
      properties:
        email:
          description: Requester email
          type: string
        loginId:
          description: Requester username
          type: string
        name:
          description: Requester name
          type: string
        uuid:
          description: Requester UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ReviewAssignee:
      description: Workflow reviewers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ReviewAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ReviewAssignee$AssignedUser'
        reviewerComments:
          description: Reviewer’s justification
          type: string
        status:
          description: Review status
          enum:
            - NONE
            - UNREAD
            - CONFIRMED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ReviewAssignee$ActionBy:
      description: Review action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse$ReviewAssignee$AssignedUser:
      description: Users assigned as reviewers
      properties:
        email:
          description: Reviewer email
          type: string
        loginId:
          description: Reviewer username
          type: string
        name:
          description: Reviewer name
          type: string
        uuid:
          description: Reviewer UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse:
      properties:
        approvalRule:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalRule'
        approvalStatus:
          description: Workflow approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        approvalSteps:
          description: Workflow approval steps list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep'
          type: array
        canceledAt:
          description: Date and time of cancellation (UTC)
          format: date-time
          type: string
        clusterGroupUuid:
          description: Requested Cluster Group UUID
          format: uuid
          type: string
        columns:
          description: Requested column name list
          items:
            description: Requested column name list
            type: string
          type: array
        database:
          description: Requested database name
          type: string
        endDate:
          description: Unmasking expiration end date (UTC)
          format: date-time
          type: string
        executionStatus:
          description: Workflow execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        expirationType:
          description: Unmasking expiration type
          enum:
            - END_DATE
            - TIME_DURATION
          type: string
        expireAt:
          description: Workflow Due Date (UTC)
          format: date-time
          type: string
        requestType:
          description: 'Request type: Unmasking Request workflow'
          enum:
            - UNMASKING
          type: string
        requestedAt:
          description: Date and time of request (UTC)
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$RequestedBy'
        requesterComment:
          description: Workflow requester’s justification
          type: string
        reviewAssignee:
          description: Workflow reviewers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ReviewAssignee'
          type: array
        schema:
          description: Requested schema name
          type: string
        table:
          description: Requested table name
          type: string
        timeDuration:
          description: Unmasking expiration time duration (in minutes)
          format: int32
          type: integer
        urgent:
          description: Whether it was processed in urgent mode
          type: boolean
        workflowTitle:
          description: Workflow title
          type: string
        workflowUuid:
          description: Workflow UUID
          format: uuid
          type: string
      required:
        - approvalRule
        - approvalStatus
        - approvalSteps
        - clusterGroupUuid
        - columns
        - database
        - executionStatus
        - expirationType
        - expireAt
        - requestType
        - requestedAt
        - requestedBy
        - requesterComment
        - reviewAssignee
        - table
        - urgent
        - workflowTitle
        - workflowUuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalRule:
      description: Approval Rule info
      properties:
        name:
          description: Approval Rule name
          type: string
        uuid:
          description: Approval Rule UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep:
      description: Workflow approval steps list
      properties:
        assignees:
          description: Workflow approvers list
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep$Assignee'
          type: array
        condition:
          description: Workflow approval step conditions
          enum:
            - ALL
            - ANY
          type: string
        order:
          description: order of steps (starting from 0 in priority)
          format: int32
          type: integer
        status:
          description: Overall status of each approval step
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
      required:
        - assignees
        - condition
        - order
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep$Assignee:
      description: Workflow approvers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep$Assignee$ActionBy'
        approverComments:
          description: Approver’s justification
          type: string
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep$Assignee$AssignedUser'
        delegated:
          description: Whether it was delegated
          type: boolean
        status:
          description: Approver’s status
          enum:
            - NONE
            - PENDING
            - APPROVED
            - REJECTED
          type: string
      required:
        - assignedUser
        - delegated
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep$Assignee$ActionBy:
      description: Approval action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ApprovalStep$Assignee$AssignedUser:
      description: Users assigned as approvers
      properties:
        email:
          description: Approver email
          type: string
        loginId:
          description: Approver username
          type: string
        name:
          description: Approver name
          type: string
        uuid:
          description: Approver UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$RequestedBy:
      description: Workflow requester info
      properties:
        email:
          description: Requester email
          type: string
        loginId:
          description: Requester username
          type: string
        name:
          description: Requester name
          type: string
        uuid:
          description: Requester UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ReviewAssignee:
      description: Workflow reviewers list
      properties:
        actionAt:
          description: Date and time of action (UTC)
          format: date-time
          type: string
        actionBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ReviewAssignee$ActionBy'
        assignedUser:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ReviewAssignee$AssignedUser'
        reviewerComments:
          description: Reviewer’s justification
          type: string
        status:
          description: Review status
          enum:
            - NONE
            - UNREAD
            - CONFIRMED
          type: string
      required:
        - assignedUser
        - status
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ReviewAssignee$ActionBy:
      description: Review action taker info
      properties:
        email:
          description: Actor email
          type: string
        loginId:
          description: Actor username
          type: string
        name:
          description: Actor name
          type: string
        uuid:
          description: Actor UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse$ReviewAssignee$AssignedUser:
      description: Users assigned as reviewers
      properties:
        email:
          description: Reviewer email
          type: string
        loginId:
          description: Reviewer username
          type: string
        name:
          description: Reviewer name
          type: string
        uuid:
          description: Reviewer UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.api.external.workflow.dto.WorkflowRequestDto$SearchResponse:
      description: Object list per entry
      properties:
        approvalStatus:
          description: Workflow approval status
          enum:
            - PENDING
            - IN_PROGRESS
            - APPROVED
            - REJECTED
            - CANCELED
            - EXPIRED
          type: string
        executionStatus:
          description: Workflow execution status
          enum:
            - NONE
            - PENDING
            - EXECUTING
            - SUCCESS
            - FAILURE
            - CANCELED
            - EXPIRED
          type: string
        ledger:
          description: Whether the DB is ledger
          type: boolean
        requestType:
          description: Request type
          enum:
            - DB_ACCESS_CONTROL
            - SQL_EXECUTION
            - DATA_EXPORT
            - SERVER_ACCESS_CONTROL
            - ACCESS_ROLE
            - UNMASKING
          type: string
        requestedAt:
          description: Date and time of request (UTC)
          format: date-time
          type: string
        requestedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserExternalModel'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        urgent:
          description: Whether it was processed in urgent mode
          type: boolean
        workflowTitle:
          description: Workflow title
          type: string
        workflowUuid:
          description: Workflow UUID
          type: string
      required:
        - approvalStatus
        - executionStatus
        - requestType
        - requestedAt
        - requestedBy
        - updatedAt
        - urgent
        - workflowTitle
        - workflowUuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.AddRequest:
      properties:
        customTags:
          description: Custom tag info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.AddRequest$CustomTag'
          type: array
        overwrite:
          description: Whether to overwrite existing key value
          type: boolean
      required:
        - customTags
        - overwrite
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.AddRequest$CustomTag:
      description: Custom tag info
      properties:
        key:
          description: Custom tag key
          type: string
        value:
          description: Custom tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.AddResponse:
      properties:
        name:
          description: Server name
          type: string
        tags:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.AddResponse$Tags'
        uuid:
          description: Server uuid
          format: uuid
          type: string
      required:
        - name
        - tags
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.AddResponse$Tags:
      description: Server tag list
      properties:
        customTags:
          description: Custom tags
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.AddResponse$Tags$CustomTag'
          type: array
      required:
        - customTags
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.AddResponse$Tags$CustomTag:
      description: Custom tags
      properties:
        key:
          description: Custom tag key
          type: string
        value:
          description: Custom tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CommandTemplateItem:
      description: Object list per entry
      properties:
        createdAt:
          description: Date and time of creation ( UTC )
          format: date-time
          type: string
        description:
          description: Command template description
          example: this is a command template for dev servers
          type: string
        name:
          description: Command template name
          example: dev-command-template
          type: string
        updatedAt:
          description: Date and time of update ( UTC )
          format: date-time
          type: string
        uuid:
          description: Commands ref uuid
          format: uuid
          type: string
      required:
        - createdAt
        - description
        - name
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateRequest:
      properties:
        ftpPort:
          default: 21
          description: FTP Port
          format: int32
          type: integer
        host:
          description: Server host
          type: string
        name:
          description: Server Name
          type: string
        osType:
          description: Server OS Type
          enum:
            - ETC
            - AWS_LINUX
            - UBUNTU
            - CENTOS
            - RHEL
          type: string
        sshPort:
          description: SSH Port
          format: int32
          type: integer
        telnetPort:
          default: 23
          description: Telnet Port
          format: int32
          type: integer
      required:
        - ftpPort
        - host
        - name
        - osType
        - sshPort
        - telnetPort
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateResponse:
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        ftpPort:
          description: FTP Port
          format: int32
          type: integer
        host:
          description: Server host
          type: string
        name:
          description: Server name
          type: string
        osType:
          description: Server OS Type
          enum:
            - ETC
            - AWS_LINUX
            - UBUNTU
            - CENTOS
            - RHEL
            - WINDOWS
          type: string
        rdpPort:
          description: RDP Port
          format: int32
          type: integer
        sshPort:
          description: Server SSH Port
          format: int32
          type: integer
        telnetPort:
          description: Telnet Port
          format: int32
          type: integer
        uuid:
          description: Server UUID
          format: uuid
          type: string
      required:
        - createdAt
        - ftpPort
        - host
        - name
        - osType
        - rdpPort
        - sshPort
        - telnetPort
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest:
      oneOf:
        - $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Querypie'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Vault'
      properties:
        accountType:
          description: Server account type
          enum:
            - QUERYPIE
            - VAULT
          type: string
      required:
        - accountType
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Querypie:
      properties:
        auth:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Querypie$Auth'
      required:
        - auth
      title: QUERYPIE
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Querypie$Auth:
      description: Server account auth info
      properties:
        accountId:
          description: Server account ID
          type: string
        authType:
          description: 'Server account authentication type (Default: PASSWORD)'
          enum:
            - PASSWORD
            - SSH_KEY
          type: string
        password:
          description: Server account password
          type: string
        sshKeyUuid:
          description: SSH key UUID
          format: uuid
          type: string
      required:
        - accountId
        - authType
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Vault:
      properties:
        auth:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Vault$Auth'
      required:
        - auth
      title: VAULT
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest$Vault$Auth:
      description: Server account auth info
      properties:
        accountPath:
          description: Server account path
          type: string
        alias:
          description: Server account display name
          type: string
        passwordPath:
          description: Server account password path
          type: string
        sshKeyPath:
          description: Server account ssh key path
          type: string
      required:
        - accountPath
        - alias
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountResponse:
      properties:
        accountId:
          description: Server account ID or path
          type: string
        accountType:
          description: Server account type
          enum:
            - QUERYPIE
            - VAULT
          type: string
        uuid:
          description: Server account UUID
          format: uuid
          type: string
      required:
        - accountId
        - accountType
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupOwnerRequest:
      properties:
        uuid:
          description: User UUID
          format: uuid
          type: string
      required:
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupOwnerResponse:
      properties:
        email:
          description: Server group owner email
          type: string
        loginId:
          description: Server group owner login ID
          type: string
        name:
          description: Server group owner name
          type: string
        userType:
          description: User type
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: Server group owner UUID
          format: uuid
          type: string
      required:
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupRequest:
      properties:
        description:
          description: Server group item description
          type: string
        filterTags:
          description: Server filtering tag conditions info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupRequest$FilterTag'
          type: array
        name:
          description: Server group name
          type: string
        secretStoreUuid:
          description: Secret store UUID (if not included, Secret Store is going to be shown as null)
          format: uuid
          type: string
      required:
        - name
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupRequest$FilterTag:
      description: Server filtering tag conditions info
      properties:
        key:
          description: Servers' tag key for filtering
          type: string
        operator:
          description: Servers' tag operator for filtering
          enum:
            - =
            - '!='
            - ':'
            - '!:'
          type: string
        value:
          description: Servers' tag value for filtering
          type: string
      required:
        - key
        - operator
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupResponse:
      properties:
        description:
          description: Server group's description
          type: string
        filterTags:
          description: Server filtering tag conditions info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupResponse$FilterTag'
          type: array
        name:
          description: Server group's name
          type: string
        secretStore:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupResponse$SecretStore'
        uuid:
          description: Server group's UUID
          format: uuid
          type: string
      required:
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupResponse$FilterTag:
      description: Server filtering tag conditions info
      properties:
        key:
          description: Servers' tag key for filtering
          type: string
        operator:
          description: Servers' tag operator for filtering
          enum:
            - =
            - '!='
            - ':'
            - '!:'
          type: string
        value:
          description: Servers' tag value for filtering
          type: string
      required:
        - key
        - operator
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupResponse$SecretStore:
      description: Secret store info (Null in case using Local QueryPie store)
      properties:
        name:
          description: Secret store name
          type: string
        type:
          description: Secret store type
          enum:
            - HASHICORP_VAULT
          type: string
        uuid:
          description: Secret store UUID
          format: uuid
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateSshKeyRequest:
      properties:
        description:
          description: SSH key description
          type: string
        name:
          description: SSH key name
          type: string
        passphrase:
          description: SSH key passphrase (if using passphrase)
          type: string
        sshPrivateKey:
          description: SSH private key
          type: string
      required:
        - name
        - sshPrivateKey
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.CreateSshKeyResponse:
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        description:
          description: SSH key description
          type: string
        name:
          description: SSH key name
          type: string
        uuid:
          description: SSH key UUID
          format: uuid
          type: string
      required:
        - createdAt
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse:
      properties:
        cloudProvider:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$CloudProvider'
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$CreatedBy'
        server:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$UpdatedBy'
      required:
        - createdAt
        - createdBy
        - server
        - updatedAt
        - updatedBy
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$CloudProvider:
      description: Cloud provider info
      properties:
        name:
          description: Server cloud provider’s name
          type: string
        type:
          description: Server cloud provider’s type
          enum:
            - AWS
            - AZURE
            - GCP
            - NONE
          type: string
        uuid:
          description: Server cloud provider’s UUID
          format: uuid
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$CreatedBy:
      description: Creator Info
      properties:
        email:
          description: Creator’s email
          type: string
        loginId:
          description: Creator’s username
          type: string
        name:
          description: Creator’s name
          type: string
        uuid:
          description: Creator’s UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server:
      description: Server info
      properties:
        host:
          description: Server host
          type: string
        name:
          description: Server name
          type: string
        osType:
          description: Server OS Type
          enum:
            - ETC
            - AWS_LINUX
            - UBUNTU
            - CENTOS
            - RHEL
            - WINDOWS
          type: string
        sshPort:
          description: Server SSH Port
          format: int32
          type: integer
        tags:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server$Tags'
        uuid:
          description: Server UUID
          format: uuid
          type: string
      required:
        - host
        - name
        - osType
        - sshPort
        - tags
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server$Tags:
      description: Server tag list
      properties:
        customTags:
          description: Custom tag info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server$Tags$CustomTag'
          type: array
        providerTags:
          description: Cloud provider tag info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server$Tags$ProviderTag'
          type: array
      required:
        - customTags
        - providerTags
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server$Tags$CustomTag:
      description: Custom tag info
      properties:
        key:
          description: Custom tag key
          type: string
        value:
          description: Custom tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$Server$Tags$ProviderTag:
      description: Cloud provider tag info
      properties:
        key:
          description: Cloud provider tag key
          type: string
        value:
          description: Cloud provider tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse$UpdatedBy:
      description: Updater Info
      properties:
        email:
          description: Updater’s email
          type: string
        loginId:
          description: Updater’s username
          type: string
        name:
          description: Updater’s name
          type: string
        uuid:
          description: Updater’s UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupOwnerResponse:
      description: Object list per entry
      properties:
        email:
          description: Server group owner email
          type: string
        loginId:
          description: Server group owner login ID
          type: string
        name:
          description: Server group owner name
          type: string
        userType:
          description: User type
          enum:
            - USER
            - GROUP
          type: string
        uuid:
          description: Server group owner UUID
          format: uuid
          type: string
      required:
        - name
        - userType
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse:
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$CreatedBy'
        description:
          description: Server group description
          type: string
        filterTags:
          description: Server filtering tag conditions info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$FilterTag'
          type: array
        name:
          description: Server group name
          type: string
        secretStore:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$SecretStore'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$UpdatedBy'
        uuid:
          description: Server group UUID
          format: uuid
          type: string
      required:
        - createdAt
        - createdBy
        - name
        - updatedAt
        - updatedBy
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$CreatedBy:
      description: Creator Info
      properties:
        email:
          description: Creator’s email
          type: string
        loginId:
          description: Creator’s username
          type: string
        name:
          description: Creator’s name
          type: string
        uuid:
          description: Creator’s UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$FilterTag:
      description: Server filtering tag conditions info
      properties:
        key:
          description: Servers' tag key for filtering
          type: string
        operator:
          description: Servers' tag operator for filtering
          enum:
            - =
            - '!='
            - ':'
            - '!:'
          type: string
        value:
          description: Servers' tag value for filtering
          type: string
      required:
        - key
        - operator
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$SecretStore:
      description: Secret store info (Null in case using Local QueryPie store)
      properties:
        name:
          description: Secret store name
          type: string
        type:
          description: Secret store type
          enum:
            - HASHICORP_VAULT
          type: string
        uuid:
          description: Secret store UUID
          format: uuid
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse$UpdatedBy:
      description: Updater Info
      properties:
        email:
          description: Updater’s email
          type: string
        loginId:
          description: Updater’s username
          type: string
        name:
          description: Updater’s name
          type: string
        uuid:
          description: Updater’s UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionByNameRequest:
      properties:
        accessTime:
          description: |-
            Access time ( e.g., HH:mm-HH:mm )<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          example: 00:00-23:59
          type: string
        accessWeekDays:
          description: |-
            Access week days<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: string
          items:
            description: |-
              Access week days<br>If not included in the API call,
                          it will follow the value defined in the Server Default Settings menu under Security.
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
            format: string
            type: string
          type: array
        account:
          description: The account field represents the account username if it is a QueryPie account or a Vault account using the SSH OTP secret engine. It represents the account alias if it is a Vault account using the K/V secret engine.
          type: string
        commandsRefUuid:
          description: |-
            Commands ref uuid<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: uuid
          type: string
        expirationDate:
          description: Expiration date ( e.g., yyyy-MM-dd )
          format: date
          type: string
        ipAddresses:
          description: |-
            IP address<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: ipv4
          items:
            description: |-
              IP address<br>If not included in the API call,
                          it will follow the value defined in the Server Default Settings menu under Security.
            format: ipv4
            type: string
          type: array
        protocols:
          description: |-
            Protocols<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: string
          items:
            description: |-
              Protocols<br>If not included in the API call,
                          it will follow the value defined in the Server Default Settings menu under Security.
            enum:
              - SSH
              - SFTP
              - RDP
              - TELNET
              - FTP
            format: string
            type: string
          type: array
        serverGroupName:
          description: Server group name
          type: string
        serverName:
          description: Server name
          type: string
        whitelist:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionByNameRequest$Whitelist'
      required:
        - account
        - expirationDate
        - serverGroupName
        - serverName
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionByNameRequest$Whitelist:
      description: Whitelist<br>If this object is not included in the API call, this Direct Permission will be granted without whitelists.
      properties:
        whitelistCommands:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionByNameRequest$Whitelist$WhitelistCommands'
        whitelistExpirationDate:
          description: |-
            Whitelist expiration date ( e.g., yyyy-MM-dd )<br>
                            If not mentioned, it will follow the value defined in expirationDate.
          format: date
          type: string
      required:
        - whitelistCommands
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionByNameRequest$Whitelist$WhitelistCommands:
      description: |-
        Whitelist commands<br>At least one element must be in one of the subitems (keyword/regex).
                        To ignore the other, specify its value as an empty list. (e.g., keyword: [])
      properties:
        keyword:
          description: Keyword
          format: string
          items:
            description: Keyword
            format: string
            type: string
          type: array
        regex:
          description: Regular expression
          format: string
          items:
            description: Regular expression
            format: string
            type: string
          type: array
      required:
        - keyword
        - regex
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionRequest:
      properties:
        accessTime:
          description: |-
            Access time ( e.g., HH:mm-HH:mm )<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          example: 00:00-23:59
          type: string
        accessWeekDays:
          description: |-
            Access week days<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: string
          items:
            description: |-
              Access week days<br>If not included in the API call,
                          it will follow the value defined in the Server Default Settings menu under Security.
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
            format: string
            type: string
          type: array
        accountUuid:
          description: Account uuid
          format: uuid
          type: string
        commandsRefUuid:
          description: |-
            Commands ref uuid<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: uuid
          type: string
        expirationDate:
          description: Expiration date ( e.g., yyyy-MM-dd )
          format: date
          type: string
        ipAddresses:
          description: |-
            IP address<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: ipv4
          items:
            description: |-
              IP address<br>If not included in the API call,
                          it will follow the value defined in the Server Default Settings menu under Security.
            format: ipv4
            type: string
          type: array
        protocols:
          description: |-
            Protocols<br>If not included in the API call,
                        it will follow the value defined in the Server Default Settings menu under Security.
          format: string
          items:
            description: |-
              Protocols<br>If not included in the API call,
                          it will follow the value defined in the Server Default Settings menu under Security.
            enum:
              - SSH
              - SFTP
              - RDP
              - TELNET
              - FTP
            format: string
            type: string
          type: array
        serverGroupUuid:
          description: Server group uuid
          format: uuid
          type: string
        serverUuid:
          description: Server uuid
          format: uuid
          type: string
        whitelist:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionRequest$Whitelist'
      required:
        - accountUuid
        - expirationDate
        - serverGroupUuid
        - serverUuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionRequest$Whitelist:
      description: Whitelist<br>If this object is not included in the API call, this Direct Permission will be granted without whitelists.
      properties:
        whitelistCommands:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionRequest$Whitelist$WhitelistCommands'
        whitelistExpirationDate:
          description: |-
            Whitelist expiration date ( e.g., yyyy-MM-dd )<br>
                            If not mentioned, it will follow the value defined in expirationDate.
          format: date
          type: string
      required:
        - whitelistCommands
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionRequest$Whitelist$WhitelistCommands:
      description: |-
        Whitelist commands<br>At least one element must be in one of the subitems (keyword/regex).
                        To ignore the other, specify its value as an empty list. (e.g., keyword: [])
      properties:
        keyword:
          description: Keyword
          format: string
          items:
            description: Keyword
            format: string
            type: string
          type: array
        regex:
          description: Regular expression
          format: string
          items:
            description: Regular expression
            format: string
            type: string
          type: array
      required:
        - keyword
        - regex
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse:
      properties:
        accessTime:
          description: Access time ( e.g., HH:mm-HH:mm )
          example: 00:00-23:59
          type: string
        accessWeekDays:
          description: Access week days
          format: string
          items:
            description: Access week days
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
            format: string
            type: string
          type: array
        accountUuid:
          description: Account uuid
          format: uuid
          type: string
        commandsRefUuid:
          description: Commands ref uuid
          format: uuid
          type: string
        expirationDate:
          description: Expiration date ( UTC )
          format: date-time
          type: string
        ipAddresses:
          description: IP address
          format: ipv4
          items:
            description: IP address
            format: ipv4
            type: string
          type: array
        permissionUuid:
          description: Permission uuid
          format: uuid
          type: string
        protocols:
          description: Protocols
          format: string
          items:
            description: Protocols
            enum:
              - SSH
              - SFTP
              - RDP
              - TELNET
              - FTP
            format: string
            type: string
          type: array
        serverGroupUuid:
          description: Server group uuid
          format: uuid
          type: string
        serverUuid:
          description: Server uuid
          format: uuid
          type: string
        whitelist:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse$Whitelist'
      required:
        - accessTime
        - accessWeekDays
        - accountUuid
        - commandsRefUuid
        - expirationDate
        - ipAddresses
        - permissionUuid
        - protocols
        - serverGroupUuid
        - serverUuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse$Whitelist:
      description: |-
        Whitelist<br>If this object is not included in the API call,
                        it is assumed that the Whitelist setting has not been configured for this Direct Permission.
      properties:
        whitelistCommands:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse$Whitelist$WhitelistCommands'
        whitelistExpirationDate:
          description: Whitelist expiration date ( UTC )
          format: date-time
          type: string
      required:
        - whitelistCommands
        - whitelistExpirationDate
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse$Whitelist$WhitelistCommands:
      description: Whitelist commands
      properties:
        keyword:
          description: Keyword
          format: string
          items:
            description: Keyword
            format: string
            type: string
          type: array
        regex:
          description: Regular expression
          format: string
          items:
            description: Regular expression
            format: string
            type: string
          type: array
      required:
        - keyword
        - regex
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistRequest:
      properties:
        whitelist:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistRequest$Whitelist'
      required:
        - whitelist
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistRequest$Whitelist:
      description: Whitelist
      properties:
        whitelistCommands:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistRequest$Whitelist$WhitelistCommands'
        whitelistExpirationDate:
          description: Whitelist expiration date ( e.g., yyyy-MM-dd )<br>If not mentioned, it will follow the value defined in expirationDate.
          format: date
          type: string
      required:
        - whitelistCommands
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistRequest$Whitelist$WhitelistCommands:
      description: |-
        Whitelist commands<br>
                        To ignore or remove existing values, specify the value of the target as an empty list. (e.g., keyword: [])
      properties:
        keyword:
          description: Keyword
          format: string
          items:
            description: Keyword
            format: string
            type: string
          type: array
        regex:
          description: Regular expression
          format: string
          items:
            description: Regular expression
            format: string
            type: string
          type: array
      required:
        - keyword
        - regex
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistResponse:
      properties:
        whitelist:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistResponse$Whitelist'
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistResponse$Whitelist:
      description: Whitelist
      properties:
        whitelistCommands:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistResponse$Whitelist$WhitelistCommands'
        whitelistExpirationDate:
          description: Whitelist expiration date ( UTC )
          format: date-time
          type: string
      required:
        - whitelistCommands
        - whitelistExpirationDate
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistResponse$Whitelist$WhitelistCommands:
      description: Whitelist commands
      properties:
        keyword:
          description: Keyword
          format: string
          items:
            description: Keyword
            format: string
            type: string
          type: array
        regex:
          description: Regular expression
          format: string
          items:
            description: Regular expression
            format: string
            type: string
          type: array
      required:
        - keyword
        - regex
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem:
      description: Object list per entry
      properties:
        cloudProvider:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$CloudProvider'
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        host:
          description: Server Host
          type: string
        managedBy:
          description: A field indicating how the server was added
          enum:
            - BY_SERVER_TAGS
            - MANUAL
          type: string
        name:
          description: Server Name
          type: string
        osType:
          description: Server OS Type
          type: string
        tags:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$Tags'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        uuid:
          description: Server UUID
          format: uuid
          type: string
      required:
        - createdAt
        - host
        - managedBy
        - name
        - osType
        - tags
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$CloudProvider:
      description: Server cloud provider info
      properties:
        name:
          description: Server cloud provider’s name
          type: string
        type:
          description: Server cloud provider’s type
          enum:
            - AWS
            - AZURE
            - GCP
            - NONE
          type: string
        uuid:
          description: Server cloud provider’s UUID
          format: uuid
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$Tags:
      description: Server tag list
      properties:
        customTags:
          description: Custom tag info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$Tags$CustomTag'
          type: array
        providerTags:
          description: Cloud provider tag info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$Tags$ProviderTag'
          type: array
      required:
        - customTags
        - providerTags
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$Tags$CustomTag:
      description: Custom tag info
      properties:
        key:
          description: Custom tag key
          type: string
        value:
          description: Custom tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem$Tags$ProviderTag:
      description: Cloud provider tag info
      properties:
        key:
          description: Cloud provider tag key
          type: string
        value:
          description: Cloud provider tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.ListServerAccountsResponse:
      description: Object list per entry
      discriminator:
        mapping:
          QUERYPIE: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.QuerypieAccount'
          VAULT: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.VaultAccount'
        propertyName: accountType
      oneOf:
        - $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.QuerypieAccount'
        - $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.VaultAccount'
      properties:
        common:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.ListServerAccountsResponseCommonItem'
      required:
        - common
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.ListServerAccountsResponseCommonItem:
      properties:
        uuid:
          description: Server account UUID
          format: uuid
          type: string
      required:
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.MemberServerAddResponse:
      properties:
        serverGroupUuid:
          description: Server group UUID
          format: uuid
          type: string
        serverUuids:
          description: Server UUID list
          items:
            description: Server UUID list
            format: uuid
            type: string
          type: array
      required:
        - serverGroupUuid
        - serverUuids
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.PermissionItem:
      description: Object list per entry
      properties:
        accountName:
          description: Account name
          example: dev-account
          type: string
        accountUuid:
          description: Account uuid
          format: uuid
          type: string
        expirationDate:
          description: Expiration date ( UTC )
          format: date-time
          type: string
        grantedAt:
          description: Granted at ( UTC )
          format: date-time
          type: string
        grantedBy:
          description: Granted by
          format: uuid
          type: string
        host:
          description: Server host
          example: dev.example.com
          type: string
        permissionUuid:
          description: Permission uuid
          format: uuid
          type: string
        serverGroupName:
          description: Server group name
          example: dev-server-group
          type: string
        serverGroupUuid:
          description: Server group uuid
          format: uuid
          type: string
        serverName:
          description: Server name
          example: dev-server
          type: string
        serverUuid:
          description: Server uuid
          format: uuid
          type: string
      required:
        - accountName
        - accountUuid
        - expirationDate
        - grantedAt
        - grantedBy
        - host
        - permissionUuid
        - serverGroupName
        - serverGroupUuid
        - serverName
        - serverUuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.QuerypieAccount:
      properties:
        accountType:
          description: Server account type
          enum:
            - QUERYPIE
            - VAULT
          type: string
        auth:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.QuerypieAccount$Auth'
        uuid:
          description: Server account UUID
          format: uuid
          type: string
      required:
        - accountType
        - auth
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.QuerypieAccount$Auth:
      description: Server account auth info
      properties:
        accountId:
          description: Server account ID
          type: string
        authType:
          description: 'Server account authentication type (Default: PASSWORD)'
          enum:
            - PASSWORD
            - SSH_KEY
            - PROVISIONING
            - SSH_OTP
          type: string
      required:
        - accountId
        - authType
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem:
      description: Object list per entry
      properties:
        cloudProvider:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$CloudProvider'
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        server:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server'
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
      required:
        - createdAt
        - server
        - updatedAt
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$CloudProvider:
      description: Cloud provider info
      properties:
        name:
          description: Server cloud provider’s name
          type: string
        type:
          description: Server cloud provider’s type
          enum:
            - AWS
            - AZURE
            - GCP
            - NONE
          type: string
        uuid:
          description: Server cloud provider’s UUID
          format: uuid
          type: string
      required:
        - name
        - type
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server:
      description: Server info
      properties:
        host:
          description: Server host
          type: string
        name:
          description: Server name
          type: string
        osType:
          description: Server OS Type
          enum:
            - ETC
            - AWS_LINUX
            - UBUNTU
            - CENTOS
            - RHEL
            - WINDOWS
          type: string
        sshPort:
          description: Server SSH Port
          format: int32
          type: integer
        tags:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server$Tags'
        uuid:
          description: Server UUID
          format: uuid
          type: string
      required:
        - host
        - name
        - osType
        - sshPort
        - tags
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server$Tags:
      description: Server tag list
      properties:
        customTags:
          description: Custom tag info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server$Tags$CustomTag'
          type: array
        providerTags:
          description: Cloud provider tag info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server$Tags$ProviderTag'
          type: array
      required:
        - customTags
        - providerTags
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server$Tags$CustomTag:
      description: Custom tag info
      properties:
        key:
          description: Custom tag key
          type: string
        value:
          description: Custom tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchResponseItem$Server$Tags$ProviderTag:
      description: Cloud provider tag info
      properties:
        key:
          description: Cloud provider tag key
          type: string
        value:
          description: Cloud provider tag value
          type: string
      required:
        - key
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchServerGroupResponseItem:
      description: Object list per entry
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        description:
          description: Server group description
          type: string
        filterTags:
          description: Server filtering tag conditions info
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchServerGroupResponseItem$FilterTag'
          type: array
        name:
          description: Server group name
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        uuid:
          description: Server group UUID
          format: uuid
          type: string
      required:
        - createdAt
        - filterTags
        - name
        - updatedAt
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchServerGroupResponseItem$FilterTag:
      description: Server filtering tag conditions info
      properties:
        key:
          description: Servers' tag key for filtering
          type: string
        operator:
          description: Servers' tag operator for filtering
          enum:
            - =
            - '!='
            - ':'
            - '!:'
          type: string
        value:
          description: Servers' tag value for filtering
          type: string
      required:
        - key
        - operator
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem:
      description: Object list per entry
      properties:
        createdAt:
          description: Date and time of creation (UTC)
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem$CreatedBy'
        description:
          description: SSH key description
          type: string
        name:
          description: SSH key name
          type: string
        updatedAt:
          description: Date and time of update (UTC)
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem$UpdatedBy'
        uuid:
          description: SSH key UUID
          format: uuid
          type: string
      required:
        - createdAt
        - createdBy
        - name
        - updatedAt
        - updatedBy
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem$CreatedBy:
      description: Creator Info
      properties:
        email:
          description: Creator’s email
          type: string
        loginId:
          description: Creator’s username
          type: string
        name:
          description: Creator’s name
          type: string
        uuid:
          description: Creator’s UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem$UpdatedBy:
      description: Updater Info
      properties:
        email:
          description: Updater’s email
          type: string
        loginId:
          description: Updater’s username
          type: string
        name:
          description: Updater’s name
          type: string
        uuid:
          description: Updater’s UUID
          format: uuid
          type: string
      required:
        - email
        - loginId
        - name
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.UpdateServerGroupFilterTagRequest:
      properties:
        filterTags:
          description: Server filtering tag conditions
          items:
            $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.UpdateServerGroupFilterTagRequest$FilterTag'
          type: array
      required:
        - filterTags
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.UpdateServerGroupFilterTagRequest$FilterTag:
      description: Server filtering tag conditions
      properties:
        key:
          description: Servers' tag key for filtering
          type: string
        operator:
          description: Servers' tag operator for filtering
          enum:
            - =
            - '!='
            - ':'
            - '!:'
          type: string
        value:
          description: Servers' tag value for filtering
          type: string
      required:
        - key
        - operator
        - value
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.UpdateServerGroupFilterTagResponse:
      properties:
        serverGroupUuid:
          description: Server group UUID
          format: uuid
          type: string
      required:
        - serverGroupUuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.VaultAccount:
      properties:
        accountType:
          description: Server account type
          enum:
            - QUERYPIE
            - VAULT
          type: string
        auth:
          $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.VaultAccount$Auth'
        uuid:
          description: Server account UUID
          format: uuid
          type: string
      required:
        - accountType
        - auth
        - uuid
      type: object
    V2_com.chequer.querypie.sam.interfaces.http.external.VaultAccount$Auth:
      description: Server account auth info
      properties:
        accountPath:
          description: Server account path
          type: string
        alias:
          description: Server account display name
          type: string
        passwordPath:
          description: Server account password path
          type: string
        sshKeyPath:
          description: Server account ssh key path
          type: string
      required:
        - accountPath
        - alias
      type: object
  securitySchemes:
    0.9_API Token:
      in: header
      name: Authorization
      type: apiKey
    V2_API Token:
      in: header
      name: Authorization
      type: apiKey
info:
  contact:
    name: CHEQUER
    url: https://chequer.atlassian.net/servicedesk/customer
  description: QueryPie API
  title: QueryPie API
  version: "0.9"
  x-logo:
    altText: QueryPie logo
    url: /api/docs/assets/querypie.svg
openapi: 3.0.1
paths:
  /api/external/access-approvals:
    get:
      deprecated: true
      description: |
        List of workflows for Database Access Control
      operationId: v1_list_database_accesscontrol_workflows
      parameters:
        - description: Approval Status
          in: query
          name: status
          required: false
          schema:
            description: Approval Status
            type: string
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: true
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: true
          schema:
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v1.ExternalAccessApprovalDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Access Approval
      tags:
        - external-v1_Access Approval API
  /api/external/access-controls/grant:
    post:
      description: |
        Grant Database Role(Access Control) (create database roleMap) by Clusters
        The RoleMap is a Triple of (Cluster, User, Privilege)
      operationId: v1_grant_database_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$GrantRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$GrantResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Grant Roles
      tags:
        - external-v1_Access Control API
  /api/external/access-controls/revoke:
    post:
      description: Revoke Database Role(Access Control) by Cluster
      operationId: v1_revoke_database_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$RevokeRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$RevokeResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Revoke Roles
      tags:
        - external-v1_Access Control API
  /api/external/alerts/data-export:
    post:
      description: |
        Create a new Data Export Alert Config
        When a data export is created, an alert will be sent to the channel specified in the alert config.

        You can filter if the alert is sent when the data export is in the urgent mode.

        You can define the message template of the alert. Template variables are as follows:
          - Request Title : {{requestTitle}}
          - Assignees : {{assignees}}
          - Comment : {{comment}}
          - User Name : {{userName}}
          - Email : {{email}}
          - Access Type : {{accessType}}
          - Link : {{link}}
          - Workflow UUID : {{workflowUuid}}
          - Urgent : {{urgent}}
          - ID : {{id}}

        Suggested default message template is as follows:
          ```
          {{userName}} has requested {{accessType}}.
          Title : {{requestTitle}}
          Assignees : {{assignees}}
          Comments : {{comment}}
          ```

        You need to specify the recipients of the alert, with specifying the target channel.
        If you don't know the channel, please see the channel APIs firstly.
      operationId: v1_create_data_export_alert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDataExportDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDataExportDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Data Export] Create'
      tags:
        - external-v1_Alert API
  /api/external/alerts/data-export/{uuid}:
    get:
      description: Get the detail of a Data Export Alert Config
      operationId: v1_get_data_export_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDataExportDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Data Export] Detail'
      tags:
        - external-v1_Alert API
    put:
      description: Update a Data Export Alert Config
      operationId: v1_update_data_export_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDataExportDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDataExportDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Data Export] Update'
      tags:
        - external-v1_Alert API
  /api/external/alerts/db-connection-attempt:
    post:
      description: Create a new DB Connection Attempt Alert Config When a DB Connection Attempt is occurred, an alert will be sent to the channel specified in the alert config.
      operationId: v1_create_db_connection_attempt_alert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDbConnectionAttemptDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDbConnectionAttemptDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[DB Connection Attempt] Create'
      tags:
        - external-v1_Alert API
  /api/external/alerts/db-connection-attempt/{uuid}:
    get:
      description: Get the detail of a DB Connection Attempt Alert Config
      operationId: v1_get_db_connection_attempt_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDbConnectionAttemptDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[DB Connection Attempt] Detail'
      tags:
        - external-v1_Alert API
    put:
      description: Update a DB Connection Attempt Alert Config
      operationId: v1_update_db_connection_attempt_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDbConnectionAttemptDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationDbConnectionAttemptDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[DB Connection Attempt] Update'
      tags:
        - external-v1_Alert API
  /api/external/alerts/prevented-sql-execution:
    post:
      description: |
        Create a new Prevented SQL Execution Alert Config
        When a prevented SQL is executed, an alert will be sent to the channel specified in the alert config.
      operationId: v1_create_prevented_sql_execution_alert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationPreventedSqlExecutionDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationPreventedSqlExecutionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Prevented SQL Execution] Create'
      tags:
        - external-v1_Alert API
  /api/external/alerts/prevented-sql-execution/{uuid}:
    get:
      description: Get the detail of a Prevented SQL Execution Alert Config
      operationId: v1_get_prevented_sql_execution_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationPreventedSqlExecutionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Prevented SQL Execution] Detail'
      tags:
        - external-v1_Alert API
    put:
      description: |
        Update a Prevented SQL Execution Alert Config
      operationId: v1_update_prevented_sql_execution_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationPreventedSqlExecutionDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationPreventedSqlExecutionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Prevented SQL Execution] Update'
      tags:
        - external-v1_Alert API
  /api/external/alerts/sensitive-data-access:
    post:
      description: |
        Create a new Sensitive Data Access Alert Config
        When a sensitive data is accessed, an alert will be sent to the channel specified in the alert config.
      operationId: v1_create_sensitive_data_access_alert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Sensitive Data Access] Create'
      tags:
        - external-v1_Alert API
  /api/external/alerts/sensitive-data-access/{uuid}:
    get:
      description: |
        Get the detail of a Sensitive Data Access Alert Config
      operationId: v1_get_sensitive_data_access_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Sensitive Data Access] Detail'
      tags:
        - external-v1_Alert API
    put:
      description: |
        Update a Sensitive Data Access Alert Config
      operationId: v1_update_sensitive_data_access_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSensitiveDataAccessDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Sensitive Data Access] Update'
      tags:
        - external-v1_Alert API
  /api/external/alerts/sql-execution:
    post:
      description: |
        Create a new SQL Execution Alert Config
        When a SQL is executed, an alert will be sent to the channel specified in the alert config.
      operationId: v1_create_sql_execution_alert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSqlExecutionDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSqlExecutionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[SQL Execution] Create'
      tags:
        - external-v1_Alert API
  /api/external/alerts/sql-execution/{uuid}:
    get:
      description: |
        Get the detail of a SQL Execution Alert Config
      operationId: v1_get_sql_execution_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSqlExecutionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[SQL Execution] Detail'
      tags:
        - external-v1_Alert API
    put:
      description: |
        Update a SQL Execution Alert Config
      operationId: v1_update_sql_execution_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSqlExecutionDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationSqlExecutionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[SQL Execution] Update'
      tags:
        - external-v1_Alert API
  /api/external/alerts/unusual-login-attempt:
    post:
      description: |
        Create a new Unusual Login Attempt Alert Config
        When a unusual login attempt is detected, an alert will be sent to the channel specified in the alert config.
      operationId: v1_create_unusual_login_attempt_alert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationUnusualLoginAttemptDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationUnusualLoginAttemptDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Unusual Login Attempt] Create'
      tags:
        - external-v1_Alert API
  /api/external/alerts/unusual-login-attempt/{uuid}:
    get:
      description: |
        Get the detail of a Unusual Login Attempt Alert Config
      operationId: v1_get_unusual_login_attempt_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationUnusualLoginAttemptDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Unusual Login Attempt] Detail'
      tags:
        - external-v1_Alert API
    put:
      description: |
        Update a Unusual Login Attempt Alert Config
      operationId: v1_update_unusual_login_attempt_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationUnusualLoginAttemptDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationUnusualLoginAttemptDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Unusual Login Attempt] Update'
      tags:
        - external-v1_Alert API
  /api/external/alerts/workflow-new-request:
    post:
      description: |
        Create a new Workflow New Request Alert Config
        When a new workflow request is created, an alert will be sent to the channel specified in the alert config.
      operationId: v1_create_workflow_new_request_alert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationWorkflowNewRequestDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationWorkflowNewRequestDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Workflow New Request] Create'
      tags:
        - external-v1_Alert API
  /api/external/alerts/workflow-new-request/{uuid}:
    get:
      description: |
        Get the detail of a Workflow New Request Alert Config
      operationId: v1_get_workflow_new_request_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationWorkflowNewRequestDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Workflow New Request] Detail'
      tags:
        - external-v1_Alert API
    put:
      description: |
        Update a Workflow New Request Alert Config
      operationId: v1_update_workflow_new_request_alert_config
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationWorkflowNewRequestDto$Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.notification.ExternalNotificationWorkflowNewRequestDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Workflow New Request] Update'
      tags:
        - external-v1_Alert API
  /api/external/approval-rules:
    get:
      deprecated: true
      description: |
        List Workflow Approval Rules

        If you want to create any workflow, you need to use a workflow approval rule.
        The workflow approval rule is a rule that defines the approval process for a workflow.
        There is a workflow step that is used to define the approval process.

        The workflow step can specify the approval assignee(s) (user, group)
        There is 3 types of workflow step:
          - Allow Assignee selection (Admin-Only)
             - Workflow requester can select the assignee(s) from the list of Admin users.
          - Allow Assignee selection (All Users)
             - Workflow requester can select the assignee(s) from the list of all users.
          - Selected Assignee(s) / Group(s)
             - Workflow requester is forced to request approval to the selected assignee(s) / group(s).
             - Approval rule creator can define the condition for the approval. For example:
               - All Assignees must approve.
               - A single Assignee can complete the approval.
      operationId: v1_list_workflow_approval_rules_deprecated
      parameters:
        - description: Request Type
          example: SQL
          in: query
          name: requestType
          required: false
          schema:
            description: Request Type
            example: SQL
            type: string
        - description: Page Number
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number
            example: 0
            minimum: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            default: "2147483647"
            description: Page Size
            example: 50
            maximum: 2147483647
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleDto$PartialResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List
      tags:
        - external-v1_Approval Rule API
  /api/external/approval-rules/{uuid}:
    delete:
      deprecated: true
      operationId: v1_delete_workflow_approval_rule_deprecated
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete
      tags:
        - external-v1_Approval Rule API
    get:
      deprecated: true
      operationId: v1_get_workflow_approval_rule_deprecated
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalRuleDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Detail
      tags:
        - external-v1_Approval Rule API
  /api/external/approvals:
    get:
      deprecated: true
      description: List of Workflows that you need to approve
      operationId: v1_list_workflows_deprecated
      parameters:
        - description: Approval Status
          in: query
          name: status
          required: false
          schema:
            description: Approval Status
            type: string
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: true
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: true
          schema:
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Approval
      tags:
        - external-v1_Approval API
  /api/external/approvals/{approvalUuid}/approve:
    post:
      deprecated: true
      description: Approve Workflow By UUID
      operationId: v1_approve_workflow_by_uuid
      parameters:
        - in: path
          name: approvalUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v1.ExternalApprovalDto$ReviewRequest'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Approve Approval By UUID
      tags:
        - external-v1_Approval API
  /api/external/approvals/{approvalUuid}/reject:
    post:
      deprecated: true
      description: Reject Workflow By UUID
      operationId: v1_reject_workflow_by_uuid
      parameters:
        - in: path
          name: approvalUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Reject Approval By UUID
      tags:
        - external-v1_Approval API
  /api/external/audit-logs:
    get:
      deprecated: true
      operationId: v1_list_sql_audit_logs
      parameters:
        - description: Cursor. Received from list reponse.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor. Received from list reponse.
            type: string
        - description: Count.(max=100)
          example: 50
          in: query
          name: count
          required: false
          schema:
            description: Count.(max=100)
            example: 50
            type: string
        - description: Action Type
          example: EXPORT_DATA
          in: query
          name: actionType
          required: false
          schema:
            description: Action Type
            example: EXPORT_DATA
            type: string
        - description: Cluster Group ID
          example: 1
          in: query
          name: clusterGroupId
          required: false
          schema:
            description: Cluster Group ID
            example: 1
            type: string
        - description: Cluster ID
          example: 1
          in: query
          name: clusterId
          required: false
          schema:
            description: Cluster ID
            example: 1
            type: string
        - description: Start Date
          example: UTC Date Time
          in: query
          name: startDate
          required: false
          schema:
            description: Start Date
            example: UTC Date Time
            type: string
        - description: End Date
          example: UTC Date Time
          in: query
          name: endDate
          required: false
          schema:
            description: End Date
            example: UTC Date Time
            type: string
        - description: Database Type
          example: MySQL
          in: query
          name: databaseType
          required: false
          schema:
            description: Database Type
            example: MySQL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$ScanResponseCom.chequer.querypie.dbam.controller.dto.ExternalSqlAuditLogDto$AuditLogResponseJava.lang.String'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of SQL Audit
      tags:
        - external-v1_Audit Log API
  /api/external/audit-logs/{id}:
    get:
      deprecated: true
      operationId: v1_get_database_sql_audit_log_by_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalSqlAuditLogDto$AuditLogResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Detail
      tags:
        - external-v1_Audit Log API
  /api/external/audit-logs/{uuid}:
    get:
      deprecated: true
      operationId: v1_get_database_sql_audit_log_by_uuid
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalSqlAuditLogDto$AuditLogResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Detail
      tags:
        - external-v1_Audit Log API
  /api/external/cloud-providers:
    get:
      description: |
        List of Cloud Providers

        Cloud Provider is used to integrate with the external system.
        For example:
          - AWS
          - Azure
          - GCP
          - etc.

        QueryPie uses Cloud Provider to fetch the list of AWS RDS, Azure SQL, etc.

        You can just click the "Synchronize" button to fetch the list of RDS, SQL Server, etc. from the Cloud Provider.
        And then, you can see the list of RDS, SQL Server, etc. in the QueryPie. They will be shown in the "Database Connections" section.

        You can also create your own on-premise database connections without using Cloud Provider.
      operationId: v1_list_database_cloud_providers
      parameters:
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            description: Page Size
            example: 50
            type: string
        - description: 'Deleted (if not presented, Default : false)'
          example: true
          in: query
          name: deleted
          required: false
          schema:
            description: 'Deleted (if not presented, Default : false)'
            example: true
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Cloud Providers
      tags:
        - external-v1_Cloud Provider API
    post:
      description: |
        Create Cloud Provider

        You can define the Cloud Provider to integrate with the external system.
        For example:
          - AWS
          - Azure
          - GCP
          - etc.

        There is a some options to authenticate with the external system.
        For example:
          - Access Key
          - Cross Account Role
          - Instance Profile
          - etc.
      operationId: v1_create_database_cloud_provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create Cloud Provider
      tags:
        - external-v1_Cloud Provider API
  /api/external/cloud-providers/{cloudProviderUuid}:
    delete:
      description: |
        Delete Cloud Provider

        You can delete the Cloud Provider that you created.
      operationId: v1_delete_database_cloud_provider
      parameters:
        - in: path
          name: cloudProviderUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete Cloud Provider
      tags:
        - external-v1_Cloud Provider API
    put:
      description: |
        Update Cloud Provider

        You can update the Cloud Provider that you created.
      operationId: v1_update_cloud_provider
      parameters:
        - in: path
          name: cloudProviderUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalCloudProviderDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update Cloud Provider
      tags:
        - external-v1_Cloud Provider API
  /api/external/connection-auth-logs:
    get:
      deprecated: true
      operationId: v1_list_database_connection_auth_logs
      parameters:
        - in: query
          name: pageNumber
          required: true
          schema:
            description: Page Number (Zero-based)
            example: 0
            format: int32
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            description: Page Size
            example: 50
            format: int32
            type: integer
        - in: query
          name: startDate
          required: true
          schema:
            description: Start Date
            example: UTC Date Time
            type: string
        - in: query
          name: endDate
          required: true
          schema:
            description: End Date
            example: UTC Date Time
            type: string
        - description: Action Type
          example: CONNECT | DISCONNECT
          in: query
          name: actionType
          required: false
          schema:
            description: Action Type
            example: CONNECT | DISCONNECT
            type: string
        - description: Cluster Group ID
          example: 1
          in: query
          name: clusterGroupId
          required: false
          schema:
            description: Cluster Group ID
            example: 1
            type: string
        - description: Cluster ID
          example: 1
          in: query
          name: clusterId
          required: false
          schema:
            description: Cluster ID
            example: 1
            type: string
        - description: Database Type
          example: MySQL
          in: query
          name: databaseType
          required: false
          schema:
            description: Database Type
            example: MySQL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalUserAuthHistoryDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Authentication
      tags:
        - external-v1_Authentication History
  /api/external/connections:
    get:
      description: |
        List of Database Connections (MySQL, PostgreSQL, etc.)

        You can see the list of database connections that you created (or synchronized from the Cloud Provider).

        The Database Connection is also called as "Cluster Group" in the QueryPie.
      operationId: v1_list_database_connections
      parameters:
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            description: Page Size
            example: 50
            type: string
        - description: Status
          example: Default is Active Only
          in: query
          name: connectionStatus
          required: false
          schema:
            description: Status
            example: Default is Active Only
            type: string
        - description: Cloud Provider UUID
          example: 1
          in: query
          name: cloudProviderUuid
          required: false
          schema:
            description: Cloud Provider UUID
            example: 1
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Database Connections
      tags:
        - external-v1_Connection API
    post:
      description: Create Database Connection
      operationId: v1_create_database_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create Database Connection
      tags:
        - external-v1_Connection API
  /api/external/connections/clusters/{clusterUuid}/instances:
    get:
      description: |
        List of Instances by Database Connection

        QueryPie's Connection hierarchy is as follows:
        - Database Connection (Cluster Group)
        - Cluster
        - Instance

        You can see the list of instances that are associated with the database connection.
      operationId: v1_list_database_connection_instances
      parameters:
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$InstanceResponse'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of instance
      tags:
        - external-v1_Connection API
    post:
      description: Create Instance
      operationId: v1_create_database_connection_instance
      parameters:
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$CreateInstanceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$InstanceResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create Instance
      tags:
        - external-v1_Connection API
  /api/external/connections/clusters/{clusterUuid}/instances/{instanceUuid}:
    delete:
      description: Delete Instance
      operationId: v1_delete_database_connection_instance
      parameters:
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
        - in: path
          name: instanceUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete Instance
      tags:
        - external-v1_Connection API
    patch:
      description: Update Instance
      operationId: v1_update_database_connection_instance
      parameters:
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
        - in: path
          name: instanceUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateInstanceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$InstanceResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update Instance
      tags:
        - external-v1_Connection API
  /api/external/connections/{clusterGroupId}:
    post:
      deprecated: true
      description: Create Cluster to Database Connection
      operationId: v1_add_database_connection_cluster_by_id
      parameters:
        - in: path
          name: clusterGroupId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$AddClusterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ClusterResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create Cluster
      tags:
        - external-v1_Connection API
  /api/external/connections/{clusterGroupId}/{clusterId}:
    delete:
      deprecated: true
      description: Delete Cluster from Database Connection
      operationId: v1_remove_database_connection_cluster_by_id
      parameters:
        - in: path
          name: clusterGroupId
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: clusterId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete Cluster
      tags:
        - external-v1_Connection API
    put:
      deprecated: true
      description: Update Cluster
      operationId: v1_update_database_connection_cluster_by_id
      parameters:
        - in: path
          name: clusterGroupId
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: clusterId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateClusterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ClusterResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update Cluster
      tags:
        - external-v1_Connection API
  /api/external/connections/{clusterGroupUuid}:
    delete:
      description: Delete Database Connection
      operationId: v1_delete_database_connection
      parameters:
        - in: path
          name: clusterGroupUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete Database Connection
      tags:
        - external-v1_Connection API
  /api/external/connections/{clusterGroupUuid}/clusters:
    post:
      description: Create Cluster to Database Connection
      operationId: v1_add_database_connection_cluster
      parameters:
        - in: path
          name: clusterGroupUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$AddClusterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ClusterResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create Cluster
      tags:
        - external-v1_Connection API
  /api/external/connections/{clusterGroupUuid}/clusters/{clusterUuid}:
    delete:
      description: Delete Cluster from Database Connection
      operationId: v1_remove_database_connection_cluster
      parameters:
        - in: path
          name: clusterGroupUuid
          required: true
          schema:
            type: string
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete Cluster
      tags:
        - external-v1_Connection API
    get:
      description: Find Cluster from Cluster Group
      operationId: v1_findCluster
      parameters:
        - in: path
          name: clusterGroupUuid
          required: true
          schema:
            type: string
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ClusterResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Find Cluster
      tags:
        - external-v1_Connection API
    put:
      description: Update Cluster
      operationId: v1_update_database_connection_cluster
      parameters:
        - in: path
          name: clusterGroupUuid
          required: true
          schema:
            type: string
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateClusterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ClusterResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update Cluster
      tags:
        - external-v1_Connection API
  /api/external/connections/{uuid}:
    patch:
      description: Update Database Connection
      operationId: v1_update_database_connection
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update Database Connection
      tags:
        - external-v1_Connection API
  /api/external/masking-patterns:
    get:
      description: |
        List of Masking Pattern

        The masking pattern is used to mask the sensitive data in the database.
        You can create, update, and delete the masking pattern.

        When you applied the masking pattern policy, your SELECT query's result will be masked.
        You can use the masking pattern in the masking policy.

        The masking pattern contains the following information:
          - detectingPattern: The pattern to detect the sensitive data. (Regular Expression)
          - maskingPattern: The pattern to mask the sensitive data. (Regular Expression)

        You need to detect the sensitive data first, then you can apply the masking pattern, with using Regular Expression's group.
        For example:
          - Korean Phone Number Masking Pattern
            - Detecting Pattern: \d{2,3}-\d{3,4}-\d{4}
            - Masking Pattern: \d{2,3}-(\d{3,4})-\d{4}
            - Result: 010-1234-5678 -> 010-****-5678
          - Email Masking Pattern
            - Detecting Pattern: \w+@\w+\.\w+
            - Masking Pattern: \w{2}(\w+)@\w{2}(\w+)\.\w+
            - Result: test@example.com -> te****@ex*****.com
      operationId: v1_list_masking_patterns
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalMaskingPatternDto$Response'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Masking Pattern
      tags:
        - external-v1_Masking Pattern API
  /api/external/network-zones:
    get:
      description: |
        List of Network Zones (also called as Allowed Zones)

        The network zone is used to manage the IP Addresses.

        You can defined the IP Addresses(IP Bands) with CIDR.
      operationId: v1_list_network_zones
      parameters:
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Network Zone
      tags:
        - external-v1_Network Zone API
    post:
      operationId: v1_create_network_zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create network zone
      tags:
        - external-v1_Network Zone API
  /api/external/network-zones/default:
    get:
      description: find default network zone
      operationId: v1_defaultZone
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: find default network zone
      tags:
        - external-v1_Network Zone API
  /api/external/network-zones/{zoneUuid}:
    delete:
      operationId: v1_delete_network_zone
      parameters:
        - in: path
          name: zoneUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete network zone
      tags:
        - external-v1_Network Zone API
    get:
      description: Detail
      operationId: v1_detail_network_zone
      parameters:
        - in: path
          name: zoneUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Detail
      tags:
        - external-v1_Network Zone API
    put:
      operationId: v1_update_network_zone
      parameters:
        - in: path
          name: zoneUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalNetworkZoneDto$ZoneInfoResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update network zone
      tags:
        - external-v1_Network Zone API
  /api/external/notification-channels:
    get:
      description: |
        List of Notification channel

        The Notification channel is a reusable component for sending notifications to users.

        You can make below channel types:
          - Slack
          - Agit (Kakao)
          - Email
          - HTTP (Webhook)
      operationId: v1_list_notification_channels
      parameters:
        - in: query
          name: filterKey
          required: false
          schema:
            type: string
        - in: query
          name: filterValue
          required: false
          schema:
            type: string
        - in: query
          name: sortKey
          required: false
          schema:
            type: string
        - in: query
          name: sortType
          required: false
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - in: query
          name: viewType
          required: false
          schema:
            enum:
              - ALL
              - ActiveOnly
              - InactiveOnly
              - DeletedOnly
            type: string
        - in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.notification.controller.ExternalNotificationChannelDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List
      tags:
        - external-v1_Notification Channels API
    post:
      description: Create Notification channel
      operationId: v1_create_notification_channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create
      tags:
        - external-v1_Notification Channels API
  /api/external/notification-channels/{uuid}:
    delete:
      description: Delete Notification channel
      operationId: v1_delete_notification_channel
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete
      tags:
        - external-v1_Notification Channels API
    get:
      description: Detail of Notification channel
      operationId: v1_get_notification_channel
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Detail
      tags:
        - external-v1_Notification Channels API
    put:
      description: Update Notification channel
      operationId: v1_update_notification_channel
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.notification.controller.ExternalNotificationChannelDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update
      tags:
        - external-v1_Notification Channels API
  /api/external/notifications:
    get:
      description: |
        List of Notifications(Alerts)

        You can use this API to get the list of alert configurations.

        Alert configuration is a configuration for sending alerts to users.

        You can make multiple alert configurations with same type.
        You need to set the trigger condition and the recipients(Notification channels) when you create the alert configuration.

        The alert condition(alert type) examples:
          - NEW_REQUEST
          - UNUSUAL_LOGIN_ATTEMPT
          - SQL_EXECUTION
          - PREVENTED_SQL_EXECUTION
          - DATABASE_CONNECTION_ATTEMPT
          - SENSITIVE_DATA_ACCESS
          - SQL_EXPORT
          - SERVER_CONNECTION_ATTEMPT
          - RESTRICT_COMMAND
          - SPECIFIC_COMMAND
          - FILE_TRANSFER
          - KUBE_REQUEST_AUDIT
      operationId: v1_list_alert_configs
      parameters:
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalPolicyNotificationDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List
      tags:
        - external-v1_Alert API
  /api/external/notifications/{notificationUuid}:
    delete:
      description: Delete Alert configuration
      operationId: v1_delete_alert_config
      parameters:
        - in: path
          name: notificationUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete
      tags:
        - external-v1_Alert API
  /api/external/policies:
    get:
      description: |
        List of Database Policies

        You can use this API to get the list of database policies.

        Database policy is a configuration for restricting database operations.

        There is 3 types of database policies:
          - DATA_ACCESS
            - You can mark the columns that cannot be accessed.
            - When the user tries to access the marked columns, user will get the '{REDACTED}' instead of the original data.
          - DATA_MASKING
            - You can mask the columns that needed to be masked.
            - When the user tries to access the marked columns, user will get the masked data.
            - The masking pattern is configurable.
          - SENSITIVE_DATA
            - You can mark the columns that are sensitive data.
            - Admin can define the sensitive level as 3 levels(LOW, MEDIUM, HIGH)
            - When the user tries to access the marked columns, the log will be recorded with the sensitive level.
            - Admin can also use the policy as a condition for alert configuration.

        The path that specifies the 'column' or 'table' is what we call the Object Path.

        Here is the example of the object paths:
          - Object Type: TABLE
            Object Path: ["sakila", "actor"]
          - Object Type: COLUMN
            Object Path: ["sakila", "actor", "last_name"]
          - Object Type: TABLE
            Object Path: ["dvdrental", "public", "film"]
          - Object Type: COLUMN
            Object Path: ["dvdrental", "public", "film", "title"]
      operationId: v1_find_database_policies
      parameters:
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            description: Page Size
            example: 50
            type: string
        - description: Policy Type
          example: DATA_ACCESS
          in: query
          name: policyType
          required: false
          schema:
            description: Policy Type
            example: DATA_ACCESS
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Policy
      tags:
        - external-v1_Policy API
    post:
      description: |
        Create Database Policy

        You can use this API to create a database policy.

        The policy type is required.
      operationId: v1_create_database_policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create Policy
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}:
    delete:
      description: Delete Database Policy
      operationId: v1_delete_database_policy
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete Policy
      tags:
        - external-v1_Policy API
    put:
      description: Update Database Policy
      operationId: v1_update_database_policy
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update Policy
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/data-accesses:
    post:
      description: Create Database DataAccess Rule
      operationId: v1_create_database_data_access_rule
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataAccessCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataAccessResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create DataAccess Rule
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/data-accesses/{ruleUuid}:
    put:
      description: Update Database DataAccess Rule
      operationId: v1_update_database_data_access_rule
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
        - in: path
          name: ruleUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataAccessUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataAccessResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update DataAccess Rule
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/data-levels:
    post:
      description: Create Database SensitiveData Rule
      operationId: v1_create_database_sensitive_data_rule
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataLevelCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataLevelResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create SensitiveData Rule
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/data-levels/{ruleUuid}:
    put:
      description: Update Database SensitiveData Rule
      operationId: v1_update_database_sensitive_data_rule
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
        - in: path
          name: ruleUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataLevelUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataLevelResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update SensitiveData Rule
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/data-masking:
    post:
      description: Create Database DataMasking Rule
      operationId: v1_create_database_data_masking_rule
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataMaskingCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataMaskingResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create DataMasking Rule
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/data-masking/{ruleUuid}:
    put:
      description: Update Database DataMasking Rule
      operationId: v1_update_database_data_masking_rule
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
        - in: path
          name: ruleUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataMaskingUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$DataMaskingResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update DataMasking Rule
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/rules:
    get:
      description: List of Database Rule
      operationId: v1_find_database_rules
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalPolicyDto$RuleResponse'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Rule
      tags:
        - external-v1_Policy API
  /api/external/policies/{policyUuid}/rules/{ruleUuid}:
    delete:
      description: Delete Database Rule
      operationId: v1_delete_database_rule
      parameters:
        - in: path
          name: policyUuid
          required: true
          schema:
            type: string
        - in: path
          name: ruleUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete Rule
      tags:
        - external-v1_Policy API
  /api/external/proxies:
    get:
      description: |
        List of Database Proxies

        You can connect to the database throught the proxy.

        You will no need to use this API, because the proxy is always single.
      operationId: v1_list_database_proxies
      parameters:
        - description: Proxy enabled
          example: true
          in: query
          name: enabled
          required: false
          schema:
            default: "true"
            description: Proxy enabled
            example: true
            type: string
        - description: Proxy host name
          example: proxy.querypie.com
          in: query
          name: host
          required: false
          schema:
            description: Proxy host name
            example: proxy.querypie.com
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalProxyDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Search proxies
      tags:
        - external-v1_Proxy API
    post:
      description: |
        Create Database Proxy

        You will no need to use this API, because the proxy is always single.
      operationId: v1_create_database_proxy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalProxyDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalProxyDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create proxy
      tags:
        - external-v1_Proxy API
  /api/external/proxies/ports:
    post:
      description: |
        Database Proxy Port Mapping Connections

        You will no need to use this API, because the port mapping is internal configuration.
      operationId: v1_database_proxy_port_mapping_connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalConnectionDto$ProxyPortMappingRequest'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: proxy port mapping
      tags:
        - external-v1_Proxy API
  /api/external/role-mappings:
    get:
      description: List of Database Mapped Roles(Access Controls)
      operationId: v1_list_database_role_mappings
      parameters:
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByCompanySearchResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Find Mapped Roles by Company
      tags:
        - external-v1_Role Mapping API
  /api/external/role-mappings/clusters/{clusterUuid}:
    get:
      description: List of Database Mapped Roles(Access Controls) by Cluster
      operationId: v1_list_database_role_mappings_by_cluster
      parameters:
        - in: path
          name: clusterUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByClusterSearchResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Find Mapped Roles by Cluster
      tags:
        - external-v1_Role Mapping API
  /api/external/role-mappings/users/{userUuid}:
    get:
      description: List of Database Mapped Roles(Access Controls) by User
      operationId: v1_list_database_role_mappings_by_user
      parameters:
        - in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalAccessControlDto$ByUserSearchResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Find Mapped Roles by User
      tags:
        - external-v1_Role Mapping API
  /api/external/role-mappings/{roleMapUuid}/renew:
    patch:
      description: |
        Renew Database Mapped Role(Access Control)

        The RoleMap (Access Control) contains expiration date.

        You can renew the RoleMap (Access Control) by this API.
      operationId: v1_renew_database_role_map
      parameters:
        - in: path
          name: roleMapUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update Mapped Roles by Active
      tags:
        - external-v1_Role Mapping API
  /api/external/roles:
    get:
      description: List of Database Role(Access Control)
      operationId: v1_list_database_roles
      parameters:
        - description: Role Name
          example: Default
          in: query
          name: roleName
          required: false
          schema:
            description: Role Name
            example: Default
            type: string
        - description: Privilege Type
          example: ALL
          in: query
          name: privilegeType
          required: false
          schema:
            description: Privilege Type
            example: ALL
            type: string
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.dbam.controller.dto.ExternalRoleDto$RoleResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of Role
      tags:
        - external-v1_Cluster Role API
    post:
      description: Create Database Role(Access Control)
      operationId: v1_create_database_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$CreateRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$RoleResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create Database Role(Access Control)
      tags:
        - external-v1_Cluster Role API
  /api/external/roles/access-levels:
    get:
      deprecated: true
      operationId: v1_findAccessLevels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.RoleDto$Response'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Access Level
      tags:
        - external-v1_Role API
  /api/external/roles/company:
    get:
      deprecated: true
      description: |
        This API is deprecated. Please use the v1_list_system_roles instead.
      operationId: v1_list_company_roles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.RoleDto$Response'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Access Level
      tags:
        - external-v1_Role API
  /api/external/roles/connection:
    get:
      description: |
        This API is for internal use. Please do not use it.
      operationId: v1_list_connection_roles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.RoleDto$Response'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Access Level
      tags:
        - external-v1_Role API
  /api/external/roles/system:
    get:
      description: |
        List of System Role

        QueryPie has the General Settings and IAM Settings itself.
        The System Role is QueryPie User's privilege.

        System Role is a set of the System Role Policies.

        System Role Policy is a set of permissions. and there is a built-in policy or custom policy.
      operationId: v1_list_system_roles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.RoleDto$Response'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Access Level
      tags:
        - external-v1_Role API
  /api/external/roles/{roleUuid}:
    delete:
      description: Remove System Role
      operationId: v1_remove_system_role
      parameters:
        - in: path
          name: roleUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Remove System Role
      tags:
        - external-v1_Cluster Role API
    put:
      description: Update System Role
      operationId: v1_update_system_role
      parameters:
        - in: path
          name: roleUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$UpdateRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.dbam.controller.dto.ExternalRoleDto$RoleResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update System Role
      tags:
        - external-v1_Cluster Role API
  /api/external/system-auth-logs:
    get:
      deprecated: true
      description: |
        List of System Auth Logs

        It is different from the Database Auth Logs.

        The API returns the logs of users' access(login) to the QueryPie.
      operationId: v1_list_system_auth_logs
      parameters:
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            default: "0"
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            default: "50"
            description: Page Size
            example: 50
            type: string
        - description: Start Date
          example: UTC Date Time
          in: query
          name: startDate
          required: false
          schema:
            description: Start Date
            example: UTC Date Time
            type: string
        - description: End Date
          example: UTC Date Time
          in: query
          name: endDate
          required: false
          schema:
            description: End Date
            example: UTC Date Time
            type: string
        - description: Action Type
          example: LOGIN | LOGOUT | LOCKED | LOCKED_MANUALLY | UNLOCK
          in: query
          name: actionType
          required: false
          schema:
            description: Action Type
            example: LOGIN | LOGOUT | LOCKED | LOCKED_MANUALLY | UNLOCK
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.iam.controller.dto.SystemAuthHistoryDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of User Access History
      tags:
        - external-v1_User Access History API
  /api/external/user-groups:
    get:
      description: UserGroup List API
      operationId: v1_list_user_groups
      parameters:
        - description: Name
          example: Brant
          in: query
          name: name
          required: false
          schema:
            description: Name
            example: Brant
            type: string
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            default: "0"
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            default: "50"
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of UserGroup
      tags:
        - external-v1_UserGroup API
    post:
      description: UserGroup Create API
      operationId: v1_create_user_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create UserGroup
      tags:
        - external-v1_UserGroup API
  /api/external/user-groups/{userGroupUuid}:
    delete:
      description: UserGroup Delete API
      operationId: v1_delete_user_group
      parameters:
        - in: path
          name: userGroupUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete UserGroup
      tags:
        - external-v1_UserGroup API
    put:
      description: UserGroup Update API
      operationId: v1_update_user_group
      parameters:
        - in: path
          name: userGroupUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserGroupDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update UserGroup
      tags:
        - external-v1_UserGroup API
  /api/external/user-groups/{userGroupUuid}/users:
    get:
      operationId: v1_list_users_in_group
      parameters:
        - in: path
          name: userGroupUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$Response'
                type: array
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List
      tags:
        - external-v1_UserGroup`s User API
  /api/external/user-groups/{userGroupUuid}/users/{userUuid}:
    delete:
      operationId: v1_remove_user_from_group
      parameters:
        - in: path
          name: userGroupUuid
          required: true
          schema:
            type: string
        - in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Remove
      tags:
        - external-v1_UserGroup`s User API
    post:
      operationId: v1_add_user_to_group
      parameters:
        - in: path
          name: userGroupUuid
          required: true
          schema:
            type: string
        - in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Add User to UserGroup
      tags:
        - external-v1_UserGroup`s User API
  /api/external/users:
    get:
      description: User List API
      operationId: v1_list_users
      parameters:
        - description: Login ID
          example: brant
          in: query
          name: loginId
          required: false
          schema:
            description: Login ID
            example: brant
            type: string
        - description: Email
          example: brant@querypie.com
          in: query
          name: email
          required: false
          schema:
            description: Email
            example: brant@querypie.com
            type: string
        - description: Name
          example: Brant
          in: query
          name: name
          required: false
          schema:
            description: Name
            example: Brant
            type: string
        - description: 'Locked (if not presented, Default : false)'
          example: false
          in: query
          name: locked
          required: false
          schema:
            description: 'Locked (if not presented, Default : false)'
            example: false
            type: string
        - description: 'Expired (if not presented, Default : false)'
          example: false
          in: query
          name: expired
          required: false
          schema:
            description: 'Expired (if not presented, Default : false)'
            example: false
            type: string
        - description: 'Deleted (if not presented, Default : false)'
          example: true
          in: query
          name: deleted
          required: false
          schema:
            description: 'Deleted (if not presented, Default : false)'
            example: true
            type: string
        - description: Page Number (Zero-based)
          example: 0
          in: query
          name: pageNumber
          required: false
          schema:
            default: "0"
            description: Page Number (Zero-based)
            example: 0
            type: string
        - description: Page Size
          example: 50
          in: query
          name: pageSize
          required: false
          schema:
            default: "50"
            description: Page Size
            example: 50
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.iam.controller.dto.ExternalUserDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List of User
      tags:
        - external-v1_User API
    post:
      description: User Create API
      operationId: v1_create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Create User
      tags:
        - external-v1_User API
  /api/external/users/activate:
    put:
      description: User activate API
      operationId: v1_activate_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$UserChangeStatusRequest'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Activate User
      tags:
        - external-v1_User API
  /api/external/users/deactivate:
    put:
      description: User deactivate API
      operationId: v1_deactivate_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$UserChangeStatusRequest'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Deactivate User
      tags:
        - external-v1_User API
  /api/external/users/{userUuid}:
    delete:
      description: User Delete API
      operationId: v1_delete_user
      parameters:
        - in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Delete User
      tags:
        - external-v1_User API
    put:
      description: User Update API
      operationId: v1_update_user
      parameters:
        - in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.ExternalUserDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update User
      tags:
        - external-v1_User API
  /api/external/users/{userUuid}/roles:
    put:
      operationId: v1_update_user_role
      parameters:
        - in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.iam.controller.dto.UserRoleDto$UserAccessLevelUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$ListResponseCom.chequer.querypie.iam.controller.dto.UserRoleDto$Response'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Update User Role
      tags:
        - external-v1_User Role API
  /api/external/v2/account-lock-history:
    get:
      description: |
        List QueryPie User's Account Lock History

        Account Lock History is the history of the user's account lock events.
      operationId: v2_list_account_lock_history
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Lock Status
          in: query
          name: lockStatus
          required: false
          schema:
            description: Lock Status
            enum:
              - LOCKED
              - UNLOCKED
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.AccountLockHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan Account Lock History
      tags:
        - external-v2_Account Lock History API
  /api/external/v2/account-lock-history/gather:
    get:
      description: List Account Lock History (sorted by the latest)
      operationId: v2_list_account_lock_history_reverse_by_cursor
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.AccountLockHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Account Lock History - For Event Gathering
      tags:
        - external-v2_Account Lock History API
  /api/external/v2/account-lock-history/gather/cursor:
    get:
      description: Account Lock History (sorted by the latest)
      operationId: v2_list-account-lock-history
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/account-lock-history/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Account Lock History - For Cursor
      tags:
        - external-v2_Account Lock History API
  /api/external/v2/activity-logs:
    get:
      description: |
        List Activity Logs

        Activity Log is the log of the user's activity.
        The Action Type is one of the following:
          - NETWORK_ZONE_CREATED
          - NETWORK_ZONE_UPDATED
          - NETWORK_ZONE_DELETED
          - NETWORK_ZONE_ATTACHED
          - NETWORK_ZONE_DETACHED
          - USER_CREATED
          - USER_UPDATED
          - USER_DELETED
          - USER_ALLOWED_ZONE_ATTACHED
          - USER_ALLOWED_ZONE_DETACHED
          - USER_REACTIVATED
          - USER_DEACTIVATED
          - USER_MULTIFACTOR_UPDATED
          - GROUP_CREATED
          - GROUP_UPDATED
          - GROUP_DELETED
          - GROUP_MEMBER_ADDED
          - GROUP_MEMBER_REMOVED
          - KERBEROS_UPDATED
          - KEYTAB_CREATED
          - KEYTAB_DELETED
          - MASKING_PATTERN_CREATED
          - MASKING_PATTERN_UPDATED
          - MASKING_PATTERN_DELETED
          - SSL_CREATED
          - SSL_UPDATED
          - SSL_DELETED
          - SSH_CREATED
          - SSH_UPDATED
          - SSH_DELETED
          - API_TOKEN_CREATED
          - API_TOKEN_UPDATED
          - API_TOKEN_DELETED
          - API_ALLOWED_ZONE_ATTACHED
          - API_ALLOWED_ZONE_DETACHED
          - CHANNEL_CREATED
          - CHANNEL_UPDATED
          - CHANNEL_DELETED
          - CLOUD_PROVIDER_CREATED
          - CLOUD_PROVIDER_UPDATED
          - CLOUD_PROVIDER_DELETED
          - ALERT_POLICY_CREATED
          - ALERT_POLICY_UPDATED
          - ALERT_POLICY_DELETED
          - DATA_ACCESS_POLICY_CREATED
          - DATA_ACCESS_POLICY_UPDATED
          - DATA_ACCESS_POLICY_DELETED
          - DATA_ACCESS_POLICY_RULE_CREATED
          - DATA_ACCESS_POLICY_RULE_UPDATED
          - DATA_ACCESS_POLICY_RULE_DELETED
          - DATA_MASKING_POLICY_CREATED
          - DATA_MASKING_POLICY_UPDATED
          - DATA_MASKING_POLICY_DELETED
          - DATA_MASKING_POLICY_RULE_CREATED
          - DATA_MASKING_POLICY_RULE_UPDATED
          - DATA_MASKING_POLICY_RULE_DELETED
          - SENSITIVE_DATA_POLICY_CREATED
          - SENSITIVE_DATA_POLICY_UPDATED
          - SENSITIVE_DATA_POLICY_DELETED
          - SENSITIVE_DATA_POLICY_RULE_CREATED
          - SENSITIVE_DATA_POLICY_RULE_UPDATED
          - SENSITIVE_DATA_POLICY_RULE_DELETED
          - CONNECTION_CREATED
          - CONNECTION_UPDATED
          - CONNECTION_DELETED
          - CONNECTION_TAG_CREATED
          - CONNECTION_TAG_UPDATED
          - CONNECTION_TAG_DELETED
          - CLUSTER_CREATED
          - CLUSTER_UPDATED
          - CLUSTER_DELETED
          - INSTANCE_CREATED
          - INSTANCE_UPDATED
          - INSTANCE_DELETED
          - GENERAL_SETTING_UPDATED
          - QUERY_SHARING_SETTING_UPDATED
          - WORKFLOW_SETTING_UPDATED
          - AUTHENTICATION_SETTING_UPDATED
          - QUERY_SHARING_UPDATED
          - ACCOUNT_LOCKOUT_POLICY_UPDATED
          - PASSWORD_SETTING_UPDATED
          - TIMEOUT_SETTING_UPDATED
          - WEB_IP_ACCESS_CONTROL_UPDATED
          - UNMASKING_ALLOWED_ZONE_ATTACHED
          - UNMASKING_ALLOWED_ZONE_DETACHED
          - CONNECTION_SECURITY_SETTING_UPDATED
          - DB_CONNECTION_SECURITY_SETTING_UPDATED
          - KUBERNETES_ACCESS_CONTROL_SETTING_UPDATED
          - SERVER_CONNECTION_SECURITY_SETTING_UPDATED
          - PRIVILEGE_CREATED
          - PRIVILEGE_UPDATED
          - PRIVILEGE_DELETED
          - APPROVAL_RULE_CREATED
          - APPROVAL_RULE_UPDATED
          - APPROVAL_RULE_DELETED
          - COMPANY_UPDATED
          - JOB_CREATED
          - JOB_UPDATED
          - JOB_REPLICATION_FREQUENCY_UPDATED
          - JOB_DESCRIPTION_UPDATED
          - JOB_DELETED
          - SECURITY_SETTING_UPDATED
          - LEDGER_TABLE_POLICY_CREATED
          - LEDGER_TABLE_POLICY_DELETED
          - LEDGER_TABLE_POLICY_RULE_CREATED
          - LEDGER_TABLE_POLICY_RULE_UPDATED
          - LEDGER_TABLE_POLICY_RULE_DELETED
          - LEDGER_APPROVAL_RULE_CREATED
          - LEDGER_APPROVAL_RULE_UPDATED
          - LEDGER_APPROVAL_RULE_DELETED
          - SERVER_SSH_KEY_CREATED
          - SERVER_SSH_KEY_UPDATED
          - SERVER_SSH_KEY_DELETED
          - SERVER_CREATED
          - SERVER_UPDATED
          - SERVER_DELETED
          - SERVER_SERVERGROUP_UPDATED
          - SERVER_TAG_CREATED
          - SERVER_TAG_UPDATED
          - SERVER_TAG_DELETED
          - SERVER_ACCOUNT_CREATED
          - SERVER_ACCOUNT_UPDATED
          - SERVER_ACCOUNT_DELETED
          - SERVER_ACCOUNT_TEMPLATE_CREATED
          - SERVER_ACCOUNT_TEMPLATE_UPDATED
          - SERVER_ACCOUNT_TEMPLATE_DELETED
          - SERVER_ACCOUNT_TEMPLATE_ACCOUNT_CREATED
          - SERVER_ACCOUNT_TEMPLATE_ACCOUNT_UPDATED
          - SERVER_ACCOUNT_TEMPLATE_ACCOUNT_DELETED
          - SERVER_ACCESS_CONTROL_IP_CONTROL_CREATED
          - SERVER_ACCESS_CONTROL_IP_CONTROL_DELETED
          - SERVER_CLOUD_PROVIDER_CREATED
          - SERVER_CLOUD_PROVIDER_UPDATED
          - SERVER_CLOUD_PROVIDER_DELETED
          - SERVER_GROUP_CREATED
          - SERVER_GROUP_UPDATED
          - SERVER_GROUP_DELETED
          - SERVER_GROUP_SERVER_ADDED
          - SERVER_GROUP_SERVER_REMOVED
          - SERVER_GROUP_ACCOUNT_CREATED
          - SERVER_GROUP_ACCOUNT_UPDATED
          - SERVER_GROUP_ACCOUNT_DELETED
          - SERVER_GROUP_OWNER_ASSIGNED
          - SERVER_GROUP_OWNER_UNASSIGNED
          - SECRET_STORE_CREATED
          - SECRET_STORE_UPDATED
          - SECRET_STORE_DELETED
          - CONNECTION_PRIVILEGE_SETTING_ADDED
          - CONNECTION_PRIVILEGE_SETTING_REMOVED
          - SERVER_COMMAND_POLICY_CREATED
          - SERVER_COMMAND_POLICY_UPDATED
          - SERVER_COMMAND_POLICY_DELETED
          - ADMIN_ROLE_CREATED
          - ADMIN_ROLE_UPDATED
          - ADMIN_ROLE_DELETED
          - ADMIN_POLICY_ASSIGNED
          - ADMIN_POLICY_UNASSIGNED
          - SERVER_ROLE_CREATED
          - SERVER_ROLE_UPDATED
          - SERVER_ROLE_DELETED
          - SERVER_ROLE_POLICY_ASSIGNED
          - SERVER_ROLE_POLICY_UNASSIGNED
          - SERVER_POLICY_CREATED
          - SERVER_POLICY_UPDATED
          - SERVER_POLICY_DELETED
          - SERVER_AGENT_CREATED
          - SERVER_AGENT_UPDATED
          - SERVER_AGENT_DELETED
          - SERVER_AGENT_LINKED
          - SERVER_AGENT_UNLINKED
          - SERVER_PASSWORD_PROVISIONING_JOB_CREATED
          - SERVER_PASSWORD_PROVISIONING_JOB_UPDATED
          - SERVER_PASSWORD_PROVISIONING_JOB_DELETED
          - SERVER_PASSWORD_PROVISIONING_TARGET_ADDED
          - SERVER_PASSWORD_PROVISIONING_TARGET_REMOVED
          - SERVER_PROXY_JUMP_CREATED
          - SERVER_PROXY_JUMP_UPDATED
          - SERVER_PROXY_JUMP_DELETED
          - SERVER_PROXY_JUMP_SERVER_GROUP_ADDED
          - SERVER_PROXY_JUMP_SERVER_GROUP_REMOVED
          - DATABASE_RESTRICTED_STATEMENT_ADDED
          - DATABASE_RESTRICTED_STATEMENT_MODIFIED
          - DATABASE_RESTRICTED_STATEMENT_REMOVED
          - USER_PROFILE_UPDATED
          - PROFILE_EDITOR_UPDATED
          - SIEM_CONFIGURATION_UPDATED
          - SIEM_CONFIGURATION_DELETED
          - EMAIL_CONFIGURATION_CREATED
          - EMAIL_CONFIGURATION_UPDATED
          - EMAIL_CONFIGURATION_DELETED
          - GOOGLE_OAUTH_SETTING_CREATED
          - GOOGLE_OAUTH_SETTING_UPDATED
          - GOOGLE_OAUTH_SETTING_DELETED
          - PROVISIONING_ENABLED
          - PROVISIONING_DISABLED
          - SCIM_ACCESS_TOKEN_GENERATED
          - SCIM_ACCESS_TOKEN_DELETED
          - KUBERNETES_CLUSTER_CREATED
          - KUBERNETES_CLUSTER_UPDATED
          - KUBERNETES_CLUSTER_DELETED
          - KUBERNETES_CLUSTER_TAG_CREATED
          - KUBERNETES_CLUSTER_TAG_UPDATED
          - KUBERNETES_CLUSTER_TAG_DELETED
          - KUBERNETES_POLICY_CREATED
          - KUBERNETES_POLICY_UPDATED
          - KUBERNETES_POLICY_DELETED
          - KUBERNETES_ROLE_CREATED
          - KUBERNETES_ROLE_UPDATED
          - KUBERNETES_ROLE_DELETED
          - KUBERNETES_ROLE_POLICY_ASSIGNED
          - KUBERNETES_ROLE_POLICY_UNASSIGNED
          - KUBERNETES_CLUSTER_PROVIDER_CREATED
          - KUBERNETES_CLUSTER_PROVIDER_UPDATED
          - KUBERNETES_CLUSTER_PROVIDER_DELETED
          - KUBE_PROXY_SETTING_CA_CREDENTIALS_UPDATED
          - DATA_PATTERN_CREATED
          - DATA_PATTERN_UPDATED
          - DATA_PATTERN_DELETED
          - DISCOVERY_JOB_CREATED
          - DISCOVERY_JOB_UPDATED
          - DISCOVERY_JOB_DELETED
          - DETECTION_PROFILE_CREATED
          - DETECTION_PROFILE_UPDATED
          - DETECTION_PROFILE_DELETED
          - INVENTORY_DATA_PATH_CREATED
          - INVENTORY_DATA_PATH_DELETED
          - INVENTORY_DATA_PATH_CUSTOM_TAG_CREATED
          - INVENTORY_DATA_PATH_CUSTOM_TAG_DELETED
          - WEB_APP_CREATED
          - WEB_APP_UPDATED
          - WEB_APP_DELETED
          - WEB_APP_TAG_CREATED
          - WEB_APP_TAG_UPDATED
          - WEB_APP_TAG_DELETED
          - WEB_APP_PATH_CREATED
          - WEB_APP_PATH_UPDATED
          - WEB_APP_PATH_DELETED
          - WEB_APP_POLICY_CREATED
          - WEB_APP_POLICY_UPDATED
          - WEB_APP_POLICY_DELETED
          - WEB_APP_ROLE_CREATED
          - WEB_APP_ROLE_UPDATED
          - WEB_APP_ROLE_DELETED
          - WEB_APP_ROLE_POLICY_ASSIGNED
          - WEB_APP_ROLE_POLICY_UNASSIGNED
          - WAC_PROXY_CONFIGURATIONS_UPDATED
          - WAC_EXTENSION_CONFIGURATIONS_UPDATED
          - WAC_WATERMARK_CONFIGURATIONS_UPDATED
          - WAC_ROOT_CA_CERTIFICATE_FILE_DOWNLOADED
          - WAC_ROOT_CA_CERTIFICATE_FILE_UPLOADED
          - WAC_ROOT_CA_CERTIFICATE_KEY_FILE_DOWNLOADED
          - WAC_ROOT_CA_CERTIFICATE_KEY_FILE_UPLOADED
          - DD_PATTERN_CATEGORY_CREATED
          - INVENTORY_CONNECTION_CREATED
          - INVENTORY_CONNECTION_DELETED
          - SLACK_CONFIGURATION_CREATED
          - SLACK_CONFIGURATION_UPDATED
          - SLACK_CONFIGURATION_DELETED
      operationId: v2_list_activity_logs
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Event Type
          in: query
          name: eventType
          required: false
          schema:
            description: Event Type
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan Activity Logs
      tags:
        - external-v2_Activity Logs API
  /api/external/v2/activity-logs/gather:
    get:
      description: List Activity Logs (sorted by the latest)
      operationId: v2_list_activity_logs_reverse_by_cursor
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Activity Logs (sorted by the latest)
      tags:
        - external-v2_Activity Logs API
  /api/external/v2/activity-logs/gather/cursor:
    get:
      description: List Activity Logs (sorted by the latest)
      operationId: v2_list_activity_logs_reverse_by_datetime
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Activity Logs (sorted by the latest)
      tags:
        - external-v2_Activity Logs API
  /api/external/v2/activity-logs/{activityLogUuid}:
    get:
      description: Get Activity Log Details
      operationId: v2_get_activity_log_details
      parameters:
        - description: Activity Log UUID (eventUuid)
          in: path
          name: activityLogUuid
          required: true
          schema:
            description: Activity Log UUID (eventUuid)
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ActivityLogsDto$ActivityLogDetailResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/{activityLogUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/{activityLogUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/{activityLogUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/activity-logs/{activityLogUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Activity Log Details
      tags:
        - external-v2_Activity Logs API
  /api/external/v2/admin-role-history:
    get:
      description: List Admin Role History
      operationId: v2_list_admin_role_history
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Event Type
          in: query
          name: eventType
          required: false
          schema:
            description: Event Type
            enum:
              - ADMIN_ROLE_GRANTED
              - ADMIN_ROLE_REVOKED
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.AdminRoleHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan Admin Role History
      tags:
        - external-v2_Admin Role History API
  /api/external/v2/admin-role-history/gather:
    get:
      description: List Admin Role Change History
      operationId: v2_list_admin_role_change_history_by_cursor
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.AdminRoleHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Admin Role History - For Event Gathering
      tags:
        - external-v2_Admin Role History API
  /api/external/v2/admin-role-history/gather/cursor:
    get:
      description: List Admin Role Change History (sorted by the latest)
      operationId: v2_list_admin_role_change_history_by_datetime
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/admin-role-history/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Admin Role History - For Cursor
      tags:
        - external-v2_Admin Role History API
  /api/external/v2/audit-log-export:
    get:
      description: List Audit Log Export Tasks
      operationId: v2_list_audit_log_export_tasks
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$GetListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Audit Log Export Tasks
      tags:
        - external-v2_Audit Log Export API
    post:
      description: Run Audit Export Task
      operationId: v2_run_audit_export_task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$AddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$AddResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Run Audit Export Task
      tags:
        - external-v2_Audit Log Export API
  /api/external/v2/audit-log-export/{taskUuid}:
    get:
      description: Get Audit Export Task Details
      operationId: v2_get_audit_export_task_details
      parameters:
        - description: Audit Log Export task UUID
          in: path
          name: taskUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$GetDetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export/{taskUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export/{taskUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export/{taskUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/audit-log-export/{taskUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Audit Export Task Details
      tags:
        - external-v2_Audit Log Export API
  /api/external/v2/audit-log-export/{taskUuid}/cancel:
    post:
      description: Cancel Audit Export Task
      operationId: v2_cancel_audit_export_task
      parameters:
        - description: Audit Log Export task UUID
          in: path
          name: taskUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.ExternalV2AuditExportDto$CancelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/audit-log-export/{taskUuid}/cancel
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/audit-log-export/{taskUuid}/cancel
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/audit-log-export/{taskUuid}/cancel
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/audit-log-export/{taskUuid}/cancel
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Cancel Audit Export Task
      tags:
        - external-v2_Audit Log Export API
  /api/external/v2/dac/access-controls:
    get:
      description: |
        List DB Roles (Access Controls)

        QueryPie is the centralized Database Access Control (DAC) system.
        Admin can grant the access control(role) to the user or group.
        The user or group will be able to access the database(s) based on the assigned access control(role).

        The Role is triple of (User, Connection, Privilege).
      operationId: v2_list_db_roles
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: Target type
          in: query
          name: userType
          required: false
          schema:
            description: Target type
            enum:
              - USER
              - GROUP
            type: string
        - description: Target’s authentication type
          in: query
          name: authType
          required: false
          schema:
            description: Target’s authentication type
            enum:
              - QueryPie
              - LDAP
              - Okta
              - SwivelSecure
              - OneLogin
              - SAML
              - Custom
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List DB Access Controls
      tags:
        - external-v2_DB Access Control API
  /api/external/v2/dac/access-controls/{userUuid}:
    get:
      description: |
        Get DB Roles assigned to a User
      operationId: v2_list_assigned_db_roles_by_user
      parameters:
        - description: UUID of a user or a group
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$GetDbAccessControlResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls/{userUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls/{userUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls/{userUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/access-controls/{userUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get DB Access Control
      tags:
        - external-v2_DB Access Control API
  /api/external/v2/dac/access-controls/{userUuid}/grant:
    post:
      description: |
        Grant DB Role to a User

        The Role is triple of (User, Connection, Privilege).

        When a user is granted a role, the user will be able to access the database(s) based on the assigned role.
      operationId: v2_grant_db_role_to_user
      parameters:
        - description: UUID of a user or a group
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$GrantRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$GrantResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/grant
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/grant
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/grant
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/grant
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Grant Role
      tags:
        - external-v2_DB Access Control API
  /api/external/v2/dac/access-controls/{userUuid}/reactivate:
    post:
      description: |
        Reactivate DB Role for a User

        The role can be deactivated by the admin.
        Admin can reactivate the role for the user.
      operationId: v2_reactivate_db_role_for_user
      parameters:
        - description: UUID of a user or a group
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ReactivateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$ReactivateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/reactivate
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/reactivate
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/reactivate
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/reactivate
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Reactivate Role(s)
      tags:
        - external-v2_DB Access Control API
  /api/external/v2/dac/access-controls/{userUuid}/revoke:
    post:
      description: |
        Revoke DB Role for a User

        The role can be revoked by the admin.
        Admin can revoke the role for the user.
      operationId: v2_revoke_db_role_for_user
      parameters:
        - description: UUID of a user or a group
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$RevokeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.accesscontrol.ExternalV2DbAccessControlDto$RevokeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/revoke
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/revoke
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/revoke
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/access-controls/{userUuid}/revoke
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Revoke Role(s)
      tags:
        - external-v2_DB Access Control API
  /api/external/v2/dac/account/unlock:
    post:
      description: DB Account Unlock
      operationId: v2_unlock_db_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.dbam.database.dto.ExternalV2DbAccountUnlockDto$UnlockRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.dbam.database.dto.ExternalV2DbAccountUnlockDto$UnlockResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/account/unlock
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/account/unlock
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/account/unlock
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/account/unlock
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DB Account Unlock
      tags:
        - external-v2_Account Management API
  /api/external/v2/dac/cloud-providers:
    get:
      description: |
        List of Database Cloud Providers

        Cloud Provider is used to integrate with the external system.
        For example:
          - AWS
          - Azure
          - GCP
          - etc.

        QueryPie uses Cloud Provider to fetch the list of AWS RDS, Azure SQL, etc.

        You can just click the "Synchronize" button to fetch the list of RDS, SQL Server, etc. from the Cloud Provider.
        And then, you can see the list of RDS, SQL Server, etc. in the QueryPie. They will be shown in the "Database Connections" section.

        You can also create your own on-premise database connections without using Cloud Provider.
      operationId: v2_list_db_cloud_provider
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: Type of DB cloud provider
          in: query
          name: cloudProviderType
          required: false
          schema:
            description: Type of DB cloud provider
            enum:
              - NONE
              - AWS
              - AZURE
              - GCP
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$GetPageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/cloud-providers
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/cloud-providers
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/cloud-providers
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/cloud-providers
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List DB Cloud Providers
      tags:
        - external-v2_Cloud Providers for DB API
  /api/external/v2/dac/cloud-providers/{uuid}/sync:
    post:
      description: |
        Synchronize DB Cloud Provider

        Synchronize the DB Cloud Provider with the Cloud Provider.
        This API is used to fetch the list of RDS, SQL Server, etc. from the Cloud Provider.
        And then, you can see the list of RDS, SQL Server, etc. in the QueryPie. They will be shown in the "Database Connections" section.
      operationId: v2_synchronize_db_cloud_provider
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.dbprovider.ExternalV2CloudProviderDto$SyncResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/cloud-providers/{uuid}/sync
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/cloud-providers/{uuid}/sync
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/cloud-providers/{uuid}/sync
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/dac/cloud-providers/{uuid}/sync
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Synchronize DB Cloud Provider
      tags:
        - external-v2_Cloud Providers for DB API
  /api/external/v2/dac/connections:
    get:
      description: |
        List of Database Connections (Cluster Groups)

        QueryPie is now mixing the word Database Connection and Cluster Group.

        Cluster Group has the following hierarchy:
          - Cluster Group
            - Cluster
              - Instance

        Cluster Group has the following properties:
          - Name
          - Database Type
          - Database Credentials (username, password)
      operationId: v2_list_db_connections
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: DB cloud provider UUID
          in: query
          name: cloudProviderUuid
          required: false
          schema:
            description: DB cloud provider UUID
            type: string
        - description: |
            Database type

            *multiple types may be queried at a time:

            databaseType[]=MYSQL&databaseType[]=POSTGRESQL
          in: query
          name: databaseTypes
          required: false
          schema:
            description: |
              Database type

              *multiple types may be queried at a time:

              databaseType[]=MYSQL&databaseType[]=POSTGRESQL
            enum:
              - MYSQL
              - MARIADB
              - POSTGRESQL
              - REDSHIFT
              - BIGQUERY
              - PRESTO
              - SQLSERVER
              - AZURESQL
              - ORACLE
              - HIVE
              - MONGODB
              - CASSANDRA
              - DYNAMODB
              - TRINO
              - IMPALA
              - DOCUMENTDB
              - SCYLLADB
              - ATHENA
              - REDIS
              - SNOWFLAKE
              - TIBERO
            type: string
        - description: Whether the DB includes ledger table(s)
          in: query
          name: ledger
          required: false
          schema:
            description: Whether the DB includes ledger table(s)
            type: boolean
        - description: Whether to list Query Audit-enabled DB connections
          in: query
          name: auditEnabled
          required: false
          schema:
            description: Whether to list Query Audit-enabled DB connections
            type: boolean
        - description: Whether to list DML Snapshot-enabled DB connections
          in: query
          name: dmlSnapshotEnabled
          required: false
          schema:
            description: Whether to list DML Snapshot-enabled DB connections
            type: boolean
        - description: Whether to list proxy-enabled DB connections
          in: query
          name: proxyEnabled
          required: false
          schema:
            description: Whether to list proxy-enabled DB connections
            type: boolean
        - description: DB authentication type with proxy
          in: query
          name: proxyAuthType
          required: false
          schema:
            description: DB authentication type with proxy
            enum:
              - QUERYPIE
              - MANUAL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$ListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List DB Connections
      tags:
        - external-v2_DB Connections API
  /api/external/v2/dac/connections/{dbConnectionUuid}:
    get:
      operationId: v2_get_db_connection
      parameters:
        - description: DB connection item’s UUID
          in: path
          name: dbConnectionUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.connection.ExternalV2ConnectionDto$GetDbConnectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections/{dbConnectionUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections/{dbConnectionUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections/{dbConnectionUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dac/connections/{dbConnectionUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get DB Connection
      tags:
        - external-v2_DB Connections API
  /api/external/v2/db-access-control-logs:
    get:
      description: |
        List DB Access Control logs (Role logs)

        You can retrieve the logs of the access control's grant or revoke events
      operationId: v2_list_db_access_control_logs
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Event Type
          in: query
          name: eventType
          required: false
          schema:
            description: Event Type
            enum:
              - ACCESS_CONTROL_GRANTED
              - ACCESS_CONTROL_REVOKED
              - ACCESS_CONTROL_UPDATED
              - CONNECTION_OWNER_GRANTED
              - CONNECTION_OWNER_REVOKED
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan DB Access Control logs
      tags:
        - external-v2_DB Access Control Logs API
  /api/external/v2/db-access-control-logs/gather:
    get:
      description: List DB Access Control logs (sorted by the latest)
      operationId: v2_list_db_access_control_logs_by_cursor
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessControlLogsDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DB Access Control Logs - For Event Gathering
      tags:
        - external-v2_DB Access Control Logs API
  /api/external/v2/db-access-control-logs/gather/cursor:
    get:
      description: List DB Access Control logs (sorted by the latest)
      operationId: v2_list_db_access_control_logs_by_datetime
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-control-logs/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DB Access Control logs - For Cursor
      tags:
        - external-v2_DB Access Control Logs API
  /api/external/v2/db-access-history:
    get:
      description: |
        List DB Access History

        You can retrieve the logs of the access history of the database.

        The log contains the following information:
          - Action Type: CONNECT, DISCONNECT
          - Result: Success, Failed
          - User
          - Target Connection (Cluster Group)
          - Used Role (Privilege)
          - Client Name (if connected via a client(not via QueryPie Web Editor))
          - Error Message (if failed)
          - Connected From (Proxy, Web Editor)
      operationId: v2_list_db_access_history
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Type of action
          in: query
          name: actionType
          required: false
          schema:
            description: Type of action
            enum:
              - CONNECT, DISCONNECT
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan DB Access History
      tags:
        - external-v2_DB Access History API
  /api/external/v2/db-access-history/gather:
    get:
      description: List DB Access History (sorted by the latest)
      operationId: v2_list_db_access_history_by_cursor
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DbAccessHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DB Access History - For Event Gathering
      tags:
        - external-v2_DB Access History API
  /api/external/v2/db-access-history/gather/cursor:
    get:
      description: List DB Access History (sorted by the latest)
      operationId: v2_list_db_access_history_by_datetime
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/db-access-history/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DB Access History - For Cursor
      tags:
        - external-v2_DB Access History API
  /api/external/v2/dml-snapshots:
    get:
      description: |
        List Database DML Snapshot

        QueryPie can record the DML (INSERT, UPDATE, DELETE) events of the database.
        You can retrieve the logs of the DML events from the database.

        You can also retrieve the CSV data of the before and after data of the DML events.
      operationId: v2_list_db_dml_snapshot
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Data change type
          in: query
          name: sqlType
          required: false
          schema:
            description: Data change type
            enum:
              - INSERT
              - UPDATE
              - DELETE
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan DML Snapshot
      tags:
        - external-v2_DML Snapshots API
  /api/external/v2/dml-snapshots/**:
    get:
      description: |
        Get Database DML Snapshot Data (CSV)

        You can retrieve the CSV data of the before and after data of the DML events.
      operationId: v2_get_db_dml_snapshot_data_csv
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/**
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/**
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/**
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/**
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DML Snapshot - Snapshot Data (CSV)
      tags:
        - external-v2_DML Snapshots API
  /api/external/v2/dml-snapshots/gather:
    get:
      description: List Database DML Snapshot (sorted by the latest)
      operationId: v2_list_db_dml_snapshot_by_cursor
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.DmlSnapshotDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DML Snapshot - For Event Gathering
      tags:
        - external-v2_DML Snapshots API
  /api/external/v2/dml-snapshots/gather/cursor:
    get:
      description: List Database DML Snapshot (sorted by the latest)
      operationId: v2_list_db_dml_snapshot_by_datetime
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/dml-snapshots/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: DML Snapshot - For Cursor
      tags:
        - external-v2_DML Snapshots API
  /api/external/v2/jobs/{cloudProviderUuid}/{historyDetailUuid}:
    get:
      description: |
        Get Cloud Provider Synchronization Job History

        You can retrieve the history of the cloud provider synchronization job, which can be triggered by schedule or manually.
      operationId: v2_get_cloud_provider_synchorinize_job_history
      parameters:
        - in: path
          name: cloudProviderUuid
          required: true
          schema:
            format: uuid
            type: string
        - in: path
          name: historyDetailUuid
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.job.ExternalV2JobDto$CloudProviderExecutionHistoryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/jobs/{cloudProviderUuid}/{historyDetailUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/jobs/{cloudProviderUuid}/{historyDetailUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/jobs/{cloudProviderUuid}/{historyDetailUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/jobs/{cloudProviderUuid}/{historyDetailUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get History Details - Cloud Provider Synchronization
      tags:
        - external-v2_Jobs API
  /api/external/v2/ledger-policy-tables:
    get:
      operationId: v2_search-all-ledger-tables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.dbam.ledger.dto.GetLedgerPolicyTableResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/ledger-policy-tables
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/ledger-policy-tables
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/ledger-policy-tables
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/ledger-policy-tables
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Search All Ledger Tables
      tags:
        - external-v2_Ledger Table Policy API
  /api/external/v2/policies/{policyUuid}/data-masking:
    post:
      description: |
        Create Data Masking Policy Rule for database
        This API creates a new data masking policy rule for a specific policy.
        You can specify the target databases and the actions allowed for these tables.
      operationId: v2_create-data-masking-policy-rule
      parameters:
        - description: Policy UUID
          in: path
          name: policyUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataMaskingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataMaskingResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/data-masking
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/data-masking
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/data-masking
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/data-masking
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create Data Masking Policy Rule
      tags:
        - external-v2_Policy Rules API
  /api/external/v2/policies/{policyUuid}/db-access:
    post:
      description: |
        Create Data Access Policy Rule for database
        This API creates a new data access policy rule for a specific policy.
        You can specify the target databases and the actions allowed for these tables.
      operationId: v2_create-data-access-policy-rule
      parameters:
        - description: Policy UUID
          in: path
          name: policyUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataAccessRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateDataAccessResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/db-access
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/db-access
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/db-access
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/db-access
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create Data Access Policy Rule
      tags:
        - external-v2_Policy Rules API
  /api/external/v2/policies/{policyUuid}/sensitive-data:
    post:
      description: |
        Create Sensitive Data Policy Rule for database
        This API creates a new sensitive data policy rule for a specific policy.
        You can specify the target databases and the actions allowed for these tables.
      operationId: v2_create-sensitive-data-policy-rule
      parameters:
        - description: Policy UUID
          in: path
          name: policyUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateSensitiveDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.policy.rule.ExternalV2PolicyRuleDto$CreateSensitiveDataResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/sensitive-data
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/sensitive-data
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/sensitive-data
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/policies/{policyUuid}/sensitive-data
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create Sensitive Data Policy Rule
      tags:
        - external-v2_Policy Rules API
  /api/external/v2/privileges:
    get:
      description: |
        List Database Privilege Types
        This API returns the list of database privilege types that define granular SQL statement permissions.
      operationId: v2_list-database-privilege-types
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: Privilege name
          in: query
          name: privilegeName
          required: false
          schema:
            description: Privilege name
            type: string
        - description: Privilege vendor
          in: query
          name: privilegeVendor
          required: false
          schema:
            description: Privilege vendor
            enum:
              - SQL
              - REDIS
            type: string
        - description: Privilege types. Refer to Privilege Type Info.
          in: query
          name: privilegeTypes
          required: false
          schema:
            description: Privilege types. Refer to Privilege Type Info.
            type: string
        - description: Whether to list export-permitted privileges
          in: query
          name: canExport
          required: false
          schema:
            description: Whether to list export-permitted privileges
            type: boolean
        - description: Whether to list import-permitted privileges
          in: query
          name: canImport
          required: false
          schema:
            description: Whether to list import-permitted privileges
            type: boolean
        - description: Whether to list clipboard copy-permitted privileges
          in: query
          name: canCopyClipboard
          required: false
          schema:
            description: Whether to list clipboard copy-permitted privileges
            type: boolean
        - description: Status of the target privileges
          in: query
          name: status
          required: false
          schema:
            description: Status of the target privileges
            enum:
              - ACTIVE
              - INACTIVE
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$ListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Privileges
      tags:
        - external-v2_Privileges API
  /api/external/v2/privileges/{uuid}:
    get:
      description: |
        Get Database Privilege
        This API returns detailed information about a specific database privilege type.
        It includes the privilege name, vendor, type, and allowed SQL statements.
      operationId: v2_get-database-privilege
      parameters:
        - description: Privilege UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.dbam.privilege.ExternalV2PrivilegeDto$GetPrivilegeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges/{uuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges/{uuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges/{uuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/privileges/{uuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Privilege
      tags:
        - external-v2_Privileges API
  /api/external/v2/query-audit:
    get:
      description: "Scan Query Audit Logs\nThis API returns the history of executed queries and database actions.\nLogs are displayed in descending order based on execution date. \n"
      operationId: v2_scan-database-query-audit
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Type of action
          in: query
          name: actionType
          required: false
          schema:
            description: Type of action
            enum:
              - CONNECTION, SQL_EXECUTION, EXPORT_DATA, EXPORT_SCHEMA, IMPORT_DATA, IMPORT_SCHEMA, COPY_CLIPBOARD
            type: string
        - description: Whether the DB is ledger
          in: query
          name: ledger
          required: false
          schema:
            description: Whether the DB is ledger
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.QueryAuditDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan Query Audit
      tags:
        - external-v2_Query Audit API
  /api/external/v2/query-audit/gather:
    get:
      description: Query Audit - For Event Gathering
      operationId: v2_database-query-audit-for-event-gathering
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.QueryAuditDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Query Audit - For Event Gathering
      tags:
        - external-v2_Query Audit API
  /api/external/v2/query-audit/gather/cursor:
    get:
      description: Database Query Audit - For Cursor
      operationId: v2_database-query-audit-for-cursor
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Query Audit - For Cursor
      tags:
        - external-v2_Query Audit API
  /api/external/v2/query-audit/{uuid}:
    get:
      description: Query Audit - Details
      operationId: v2_query-audit-details
      parameters:
        - description: Query Audit event UUID (eventUuid)
          in: path
          name: uuid
          required: true
          schema:
            description: Query Audit event UUID (eventUuid)
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.QueryAuditDto$GetDetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/{uuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/{uuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/{uuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/query-audit/{uuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Query Audit - Details
      tags:
        - external-v2_Query Audit API
  /api/external/v2/sac/access-controls/{userUuid}/permissions:
    get:
      description: |
        Get User's Direct Server Permissions
        This API returns the list of server and server group access permissions directly granted to a specific user.
        These permissions are granted directly to the user (not through roles).
      operationId: v2_list-user-server-direct-permission
      parameters:
        - description: User uuid
          in: path
          name: userUuid
          required: true
          schema:
            description: User uuid
            type: string
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.PermissionItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Direct Permission
      tags:
        - external-v2_Direct Permissions API
    post:
      description: |
        Grant Direct Server Permissions to User
        This API directly grants server and server group access permissions to a specific user.
        These permissions are granted directly to the user (not through roles).
      operationId: v2_grant-server-direct-permission
      parameters:
        - description: User uuid
          in: path
          name: userUuid
          required: true
          schema:
            description: User uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Grant Direct Permission
      tags:
        - external-v2_Direct Permissions API
  /api/external/v2/sac/access-controls/{userUuid}/permissions/by-name:
    post:
      description: |
        Grant Direct Server Permissions to User by Server Name
        This API directly grants server and server group access permissions to a specific user using server and server group names.
        These permissions are granted directly to the user (not through roles).
      operationId: v2_grant-server-direct-permission-by-name
      parameters:
        - description: User uuid
          in: path
          name: userUuid
          required: true
          schema:
            description: User uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionByNameRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/by-name
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/by-name
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/by-name
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/by-name
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Grant Direct Permission by Name
      tags:
        - external-v2_Direct Permissions API
  /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}:
    delete:
      description: "Revoke Direct Server Permission from User\n\nThis API revokes a specific server or server group access permission that was directly granted to a user.\nThis operation can only be performed on permissions that were directly granted (not through roles).\nOnce revoked, the permission cannot be restored and must be granted again if needed. \n"
      operationId: v2_revoke-user-server-direct-permission
      parameters:
        - description: User uuid
          in: path
          name: userUuid
          required: true
          schema:
            description: User uuid
            type: string
        - description: Permission uuid
          in: path
          name: permissionUuid
          required: true
          schema:
            description: Permission uuid
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Revoke Direct Permission
      tags:
        - external-v2_Direct Permissions API
    get:
      description: |
        Get User's Direct Server Permissions
        This API returns the list of server and server group access permissions directly granted to a specific user.
      operationId: v2_get-user-server-direct-permission
      parameters:
        - description: User uuid
          in: path
          name: userUuid
          required: true
          schema:
            description: User uuid
            type: string
        - description: Permission uuid
          in: path
          name: permissionUuid
          required: true
          schema:
            description: Permission uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantDirectPermissionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Direct Permission
      tags:
        - external-v2_Direct Permissions API
  /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}/whitelist:
    post:
      description: "Grant Command Whitelist to Direct Permission\nThis API grants command whitelist exceptions to a specific direct permission.\nIf a whitelist already exists, it will be revoked and regranted.\nThis function is only available for Direct Permissions. \n"
      operationId: v2_grant-server-command-whitelist
      parameters:
        - description: User uuid
          in: path
          name: userUuid
          required: true
          schema:
            description: User uuid
            type: string
        - description: Permission uuid
          in: path
          name: permissionUuid
          required: true
          schema:
            description: Permission uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GrantWhitelistResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}/whitelist
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}/whitelist
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}/whitelist
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/access-controls/{userUuid}/permissions/{permissionUuid}/whitelist
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Grant Whitelist
      tags:
        - external-v2_Direct Permissions API
  /api/external/v2/sac/commands:
    get:
      description: |
        List Commands Templates
        This API returns a list of all command templates available in the system.
        It includes details such as the template name, description, and creation timestamp.
        You can search templates by name and view their creation and last update timestamps.
      operationId: v2_list-commands-templates
      parameters:
        - description: Template name
          in: query
          name: name
          required: false
          schema:
            description: Template name
            type: string
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.CommandTemplateItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/commands
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/commands
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/commands
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/commands
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Commands Templates
      tags:
        - external-v2_Command Templates API
  /api/external/v2/sac/server-groups:
    get:
      description: |
        List Server Groups
        This API returns a list of all server groups available in the system.
        It includes details such as the group name, description, and creation timestamp.
        You can search groups by name and view their creation and last update timestamps.
      operationId: v2_list-server-groups
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: Server group name
          in: query
          name: name
          required: false
          schema:
            description: Server group name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.SearchServerGroupResponseItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Server Groups
      tags:
        - external-v2_Server Groups API
    post:
      description: |
        Create Server Group
        This API creates a new server group in QueryPie.
        You can specify the group name, description, and permissions.
        The group will be created with a default set of permissions.
        You can modify the group details later through the update API.
      operationId: v2_create-server-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create Server Group
      tags:
        - external-v2_Server Groups API
  /api/external/v2/sac/server-groups/{serverGroupUuid}:
    delete:
      description: |
        Delete Server Group
        This API deletes a specific server group from QueryPie.
        You must provide the serverGroupUuid of the group you want to delete.
        Once deleted, the group will no longer be available for use in server access control.
      operationId: v2_delete-server-group
      parameters:
        - description: Server group uuid
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Server group uuid
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Delete Server Group
      tags:
        - external-v2_Server Groups API
    get:
      description: |
        Get Server Group
        This API returns details about a specific server group.
        You must provide the serverGroupUuid of the group you want to retrieve.
        The response will include details such as the group name, description, and creation timestamp.
        You can search groups by name and view their creation and last update timestamps.
      operationId: v2_get-server-group
      parameters:
        - description: Server group uuid
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Server group uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetServerGroupResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Server Group
      tags:
        - external-v2_Server Groups API
  /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts:
    get:
      description: |
        List Server Accounts
        This API returns a list of all server accounts available in the specified server group.
        It includes details such as the account name, description, and creation timestamp.
        You can search accounts by name and view their creation and last update timestamps.
      operationId: v2_list-server-accounts
      parameters:
        - description: UUID of a server group
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: UUID of a server group
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$ListResponseCom.chequer.querypie.sam.interfaces.http.external.ListServerAccountsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Server Accounts
      tags:
        - external-v2_Server Accounts API
    post:
      description: "Create Account in Server Group\nThis API creates a new account and associates it with a specific server group.\nThe account will be managed as part of the server group's access control system.\nYou can configure account details and access settings for the server group. \n"
      operationId: v2_create-server-account
      parameters:
        - description: UUID of a server group
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: UUID of a server group
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerAccountResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create Server Account
      tags:
        - external-v2_Server Accounts API
  /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts/{accountUuid}:
    delete:
      description: |
        Delete Account from Server Group
        This API removes a specific account from a server group.
        You must provide the serverGroupUuid and accountUuid of the account you want to delete.
        Once deleted, the account will no longer be associated with the server group.
      operationId: v2_delete-server-account
      parameters:
        - description: UUID of a server group
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: UUID of a server group
            type: string
        - description: Server account UUID
          in: path
          name: accountUuid
          required: true
          schema:
            description: Server account UUID
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts/{accountUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts/{accountUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts/{accountUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/accounts/{accountUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: 'Delete Server Account '
      tags:
        - external-v2_Server Accounts API
  /api/external/v2/sac/server-groups/{serverGroupUuid}/filter-tags:
    put:
      description: "Update Server Group Filter Tags\nThis API allows you to update the filter tags for a specific server group.\nFilter tags are used to automatically manage server group membership based on server tags.\nWhen filter tags are set, servers with matching tags will be automatically included in the server group.\nYou must provide the serverGroupUuid of the group you want to update.\nThe request body includes the filter tags you want to set for the group.\nOnce updated, the filter tags will be applied to the server group. \n"
      operationId: v2_update-server-group-filter-tags
      parameters:
        - description: Target server group UUID
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Target server group UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.UpdateServerGroupFilterTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.UpdateServerGroupFilterTagResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PUT /api/external/v2/sac/server-groups/{serverGroupUuid}/filter-tags
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PUT /api/external/v2/sac/server-groups/{serverGroupUuid}/filter-tags
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PUT /api/external/v2/sac/server-groups/{serverGroupUuid}/filter-tags
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PUT /api/external/v2/sac/server-groups/{serverGroupUuid}/filter-tags
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Update Server Group Filter Tags
      tags:
        - external-v2_Server Groups API
  /api/external/v2/sac/server-groups/{serverGroupUuid}/owners:
    get:
      description: |
        List Server Group Owners
        This API returns the list of owners for a specific server group.
        You must provide the serverGroupUuid of the group you want to retrieve owners for.
        The response will include details such as the owner name, email, and creation timestamp.
        You can search owners by name and view their creation and last update timestamps.
      operationId: v2_list-server-group-owners
      parameters:
        - description: Target server group UUID
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Target server group UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$ListResponseCom.chequer.querypie.sam.interfaces.http.external.GetServerGroupOwnerResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Server Group Owners
      tags:
        - external-v2_Server Groups Owners API
    post:
      description: |
        Assign Server Group Owner
        This API assigns a specific user or group as the owner of a server group.
        You must provide the serverGroupUuid of the group you want to update.
        The request body includes the user or group you want to assign as the owner.
        Once assigned, the owner will have full access to the server group and its resources.
      operationId: v2_assign-server-group-owner
      parameters:
        - description: Target server group UUID
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Target server group UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupOwnerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateServerGroupOwnerResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/owners
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Assign Server Group Owner
      tags:
        - external-v2_Server Groups Owners API
  /api/external/v2/sac/server-groups/{serverGroupUuid}/owners/{userUuid}:
    delete:
      description: |
        Unassign Server Group Owner
        This API removes a specific user or group as the owner of a server group.
        You must provide the serverGroupUuid and userUuid of the owner you want to remove.
      operationId: v2_unassign-server-group-owner
      parameters:
        - description: Target server group UUID
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Target server group UUID
            type: string
        - description: User UUID for server group owner
          in: path
          name: userUuid
          required: true
          schema:
            description: User UUID for server group owner
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/owners/{userUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/owners/{userUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/owners/{userUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/server-groups/{serverGroupUuid}/owners/{userUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Unassign Server Group Owner
      tags:
        - external-v2_Server Groups Owners API
  /api/external/v2/sac/server-groups/{serverGroupUuid}/servers:
    get:
      description: |
        List Servers in Server Group
        This API returns a list of all servers currently associated with a specific server group.
        You must provide the serverGroupUuid of the group you want to retrieve servers for.
        The response will include details such as the server name, description, and creation timestamp.
        You can search servers by name and view their creation and last update timestamps.
      operationId: v2_list-group-servers
      parameters:
        - description: Server group uuid
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Server group uuid
            type: string
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.ListGroupServersResponseItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/servers
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/servers
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/servers
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/server-groups/{serverGroupUuid}/servers
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Group Servers
      tags:
        - external-v2_Server Groups API
  /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}:
    delete:
      description: |
        Remove Server from Group
        This API removes a specific server from a server group.
        You must provide the serverGroupUuid and serverUuid of the server you want to remove.
        Once removed, the server will no longer be associated with the server group.
      operationId: v2_remove-server-from-group
      parameters:
        - description: Target server group UUID
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Target server group UUID
            type: string
        - description: Server UUID
          in: path
          name: serverUuid
          required: true
          schema:
            description: Server UUID
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Remove Server from Group
      tags:
        - external-v2_Server Groups API
    post:
      description: |
        Add Server to Group
        This API adds a specific server to a server group.
        You must provide the serverGroupUuid and serverUuid of the server you want to add.
        Once added, the server will be associated with the server group and will inherit the group's access control settings.
      operationId: v2_add-server-to-group
      parameters:
        - description: Target server group UUID
          in: path
          name: serverGroupUuid
          required: true
          schema:
            description: Target server group UUID
            type: string
        - description: Server UUID
          in: path
          name: serverUuid
          required: true
          schema:
            description: Server UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.MemberServerAddResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/server-groups/{serverGroupUuid}/servers/{serverUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Add Server to Group
      tags:
        - external-v2_Server Groups API
  /api/external/v2/sac/servers:
    get:
      description: |
        List Servers
        This API returns a paginated list of all servers available in the system.
        You can filter the servers by cloud provider, OS type, and name.
        The response includes details such as the server name, cloud provider, OS type, and creation timestamp.
        You can search servers by name and view their creation and last update timestamps.
      operationId: v2_list-servers
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: Server cloud provider UUID
          in: query
          name: cloudProviderUuid
          required: false
          schema:
            description: Server cloud provider UUID
            type: string
        - description: Type of server cloud provider
          in: query
          name: cloudProviderType
          required: false
          schema:
            description: Type of server cloud provider
            enum:
              - AWS
              - AZURE
              - GCP
              - NONE
            type: string
        - description: Server OS Type
          in: query
          name: osType
          required: false
          schema:
            description: Server OS Type
            enum:
              - ETC
              - AWS_LINUX
              - UBUNTU
              - CENTOS
              - RHEL
            type: string
        - description: Server name
          in: query
          name: name
          required: false
          schema:
            description: Server name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.SearchResponseItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Servers
      tags:
        - external-v2_Servers API
    post:
      description: |
        Create Server
        This API creates a new server in QueryPie.
        You can specify the server name, cloud provider, OS type, and other details.
        The server will be created with a default set of configurations.
        You can modify the server details later through the update API.
      operationId: v2_create-server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create Server
      tags:
        - external-v2_Servers API
  /api/external/v2/sac/servers/{serverUuid}:
    delete:
      description: |
        Delete Server
        This API deletes a specific server from QueryPie.
        You must provide the serverUuid of the server you want to delete.
        Once deleted, the server will no longer be accessible through the API.
        Note that this action is irreversible and will remove all associated data.
      operationId: v2_delete-server
      parameters:
        - description: Server uuid
          in: path
          name: serverUuid
          required: true
          schema:
            description: Server uuid
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Delete Server
      tags:
        - external-v2_Servers API
    get:
      description: |
        Get Server Details
        This API returns detailed information about a specific server.
        You must provide the serverUuid of the server you want to retrieve.
        The response includes all the information associated with the server,
        including its name, cloud provider, OS type, and other details.
      operationId: v2_get-server
      parameters:
        - description: Server uuid
          in: path
          name: serverUuid
          required: true
          schema:
            description: Server uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.GetResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/servers/{serverUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Server
      tags:
        - external-v2_Servers API
  /api/external/v2/sac/servers/{serverUuid}/tags:
    post:
      description: |
        Add Server Tags
        This API allows you to add one or more tags to a specific server.
        You must provide the serverUuid of the server you want to tag.
        The request body includes the tags you want to add to the server.
        Once added, the tags will be associated with the server and can be used for filtering and grouping purposes.
      operationId: v2_add-server-tags
      parameters:
        - description: Server uuid
          in: path
          name: serverUuid
          required: true
          schema:
            description: Server uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.AddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.AddResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/servers/{serverUuid}/tags
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/servers/{serverUuid}/tags
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/servers/{serverUuid}/tags
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/sac/servers/{serverUuid}/tags
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Add Server Tag(s)
      tags:
        - external-v2_Server Tags API
  /api/external/v2/sac/servers/{serverUuid}/tags/{tagKey}:
    delete:
      description: |
        Remove Server Tag
        This API removes a specific tag from a server.
        You must provide the serverUuid and tagKey of the tag you want to remove.
        Once removed, the tag will no longer be associated with the server.
      operationId: v2_remove-server-tag
      parameters:
        - description: Server uuid
          in: path
          name: serverUuid
          required: true
          schema:
            description: Server uuid
            type: string
        - description: Custom tag key to remove
          in: path
          name: tagKey
          required: true
          schema:
            description: Custom tag key to remove
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/servers/{serverUuid}/tags/{tagKey}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/servers/{serverUuid}/tags/{tagKey}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/servers/{serverUuid}/tags/{tagKey}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/sac/servers/{serverUuid}/tags/{tagKey}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Remove Server Tag
      tags:
        - external-v2_Server Tags API
  /api/external/v2/sac/ssh-keys:
    get:
      description: |
        List Server SSH Keys
        This API returns a paginated list of all SSH keys available in the system.
        You can filter the SSH keys by name and view their creation and last update timestamps.
        The response includes details such as the SSH key name, public key, and creation timestamp.
        You can search SSH keys by name and view their creation and last update timestamps.
      operationId: v2_list-server-ssh-keys
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.sam.interfaces.http.external.SearchSshKeyResponseItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Server SSH Keys
      tags:
        - external-v2_Server SSH Key Configurations API
    post:
      description: |
        Create Server SSH Key
        This API allows you to create a new SSH key in QueryPie.
        You must provide the name and public key of the SSH key you want to create.
        The response will include the SSH key UUID and creation timestamp.
        You can use this key to connect to your servers securely.
      operationId: v2_create-server-ssh-key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateSshKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.sam.interfaces.http.external.CreateSshKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/sac/ssh-keys
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create Server SSH Key
      tags:
        - external-v2_Server SSH Key Configurations API
  /api/external/v2/security:
    get:
      description: |
        Get Security Settings
        This API returns the current security settings for the QueryPie platform.
        You can view the settings such as password policy, two-factor authentication, and other security configurations.
        The response includes details about the current settings and their status.
      operationId: v2_get-security-settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.ExternalV2SecuritySettingDto$Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Security Settings
      tags:
        - external-v2_Security Settings API
    patch:
      operationId: v2_update-security-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.ExternalV2SecuritySettingDto$Request'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Update Security Settings
      tags:
        - external-v2_Security Settings API
  /api/external/v2/security/database:
    patch:
      description: |
        Update Database Connection Security Setting
        This API updates the security settings for a specific database connection.
        You must provide the databaseConnectionUuid of the connection you want to update.
        The request body includes the new security settings you want to apply.
        Once updated, the new settings will be applied to the database connection.
      operationId: v2_updateDatabaseConnectionSecuritySetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.DbConnectionSecurity'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/database
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/database
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/database
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/database
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Update Security Settings - Database
      tags:
        - external-v2_Security Settings API
  /api/external/v2/security/secret-stores:
    get:
      description: |
        List Secret Stores
        This API returns a paginated list of all secret stores available in the system.
        You can filter the secret stores by name and view their creation and last update timestamps.
        The response includes details such as the secret store name, type, and creation timestamp.
        You can search secret stores by name and view their creation and last update timestamps.
      operationId: v2_list-secret-stores
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$Response'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Secret Stores
      tags:
        - external-v2_Secret Stores API
    post:
      description: |
        Add Secret Store
        This API allows you to add a new secret store to the QueryPie platform.
        You must provide the name and type of the secret store you want to add.
        The request body includes the details of the secret store you want to add.
        Once added, the secret store will be available for use in the QueryPie platform.
      operationId: v2_add-secret-store
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$AddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Add Secret Store
      tags:
        - external-v2_Secret Stores API
  /api/external/v2/security/secret-stores/{secretStoreUuid}:
    delete:
      description: |
        Remove Secret Store
        This API removes a specific secret store from the QueryPie platform.
        You must provide the secretStoreUuid of the store you want to remove.
        Once removed, the secret store will no longer be available for use in the QueryPie platform.
      operationId: v2_remove-secret-store
      parameters:
        - description: Secret store UUID
          in: path
          name: secretStoreUuid
          required: true
          schema:
            description: Secret store UUID
            type: string
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Remove Secret Store
      tags:
        - external-v2_Secret Stores API
    get:
      description: |
        Get Secret Store Details
        This API returns detailed information about a specific secret store.
        You must provide the secretStoreUuid of the store you want to retrieve.
        The response includes all the information associated with the secret store,
        including its name, type, and creation timestamp.
      operationId: v2_get-secret-store
      parameters:
        - description: Secret store UUID
          in: path
          name: secretStoreUuid
          required: true
          schema:
            description: Secret store UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$DetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Secret Store Details
      tags:
        - external-v2_Secret Stores API
    patch:
      description: |
        Update Secret Store
        This API allows you to update the details of a specific secret store.
        You must provide the secretStoreUuid of the store you want to update.
        The request body includes the new details you want to apply to the store.
        Once updated, the new details will be applied to the secret store.
      operationId: v2_update-secret-store
      parameters:
        - description: Secret store UUID
          in: path
          name: secretStoreUuid
          required: true
          schema:
            description: Secret store UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$EditRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.secretstore.ExternalV2SecretStoreDto$Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/security/secret-stores/{secretStoreUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Update Secret Store
      tags:
        - external-v2_Secret Stores API
  /api/external/v2/security/server:
    patch:
      description: |
        Update QueryPie Server Security Settings
        This API updates the global security settings for the entire QueryPie server.
        These settings affect all server connections and apply system-wide.
        The request body includes the new security settings you want to apply.
        Once updated, the new settings will be applied to the entire QueryPie server.
      operationId: v2_updateServerConnectionSecuritySetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.v2.security.ServerConnectionSecurity'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/server
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/server
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/server
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: PATCH /api/external/v2/security/server
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Update Security Settings - Server
      tags:
        - external-v2_Security Settings API
  /api/external/v2/user-access-history:
    get:
      description: "List User Access History\nThis API returns the history of user access to QueryPie.\nYou can view when and how users accessed the system, including login attempts and session information.\nThe history includes details such as access time, IP address, and access method. \n"
      operationId: v2_scan-user-access-history
      parameters:
        - in: query
          name: since
          required: false
          schema:
            description: Start date and time (UTC); Default value = "7 days before 'until'"
            format: date-time
            type: string
        - in: query
          name: until
          required: false
          schema:
            description: End date and time (UTC); Default value = "Current time"
            format: date-time
            type: string
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
        - description: Type of action
          in: query
          name: actionType
          required: false
          schema:
            description: Type of action
            enum:
              - LOGIN
              - LOGOUT
              - LOCKED
              - EXPIRED
              - LOCKED_MANUALLY
              - UNLOCK
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserAccessHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Scan User Access History
      tags:
        - external-v2_User Access History API
  /api/external/v2/user-access-history/gather:
    get:
      description: |
        User Access History - For Event Gathering
        This API returns the history of user access to QueryPie for event gathering purposes.
        It includes details such as access time, IP address, and access method.
        The history is paginated and can be retrieved starting from a specific cursor value.
      operationId: v2_user-access-history-for-event-gathering
      parameters:
        - description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
          in: query
          name: cursor
          required: false
          schema:
            description: Invoke the API for logs starting from the cursor value returned in the previous API call (using the nextCursor key)
            type: string
        - in: query
          name: count
          required: false
          schema:
            default: 50
            description: Number of Requested Log Rows (Up to 100 Rows)
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.UserAccessHistoryDto$ScanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: User Access History - For Event Gathering
      tags:
        - external-v2_User Access History API
  /api/external/v2/user-access-history/gather/cursor:
    get:
      description: |
        User Access History - For Cursor
        This API returns the history of user access to QueryPie for cursor purposes.
        It includes details such as access time, IP address, and access method.
        The history is paginated and can be retrieved starting from a specific cursor value.
      operationId: v2_user-access-history-for-cursor
      parameters:
        - in: query
          name: since
          required: true
          schema:
            description: Start date and time (UTC)
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.audit.dto.NextCursorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather/cursor
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather/cursor
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather/cursor
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-access-history/gather/cursor
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: User Access History - For Cursor
      tags:
        - external-v2_User Access History API
  /api/external/v2/user-groups:
    get:
      description: |
        List User Groups
        This API returns a paginated list of all user groups in the QueryPie system.
        You can filter the groups by name and view their creation and last update timestamps.
        The response includes details such as the group name, description, and creation timestamp.
        You can search groups by name and view their creation and last update timestamps.
      operationId: v2_list-user-groups
      parameters:
        - description: Group name
          in: query
          name: name
          required: false
          schema:
            description: Group name
            type: string
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$SearchResponseItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List User Groups
      tags:
        - external-v2_User Group Management API
    post:
      description: |
        Create User Group
        This API allows you to create a new user group in the QueryPie system.
        You must provide the name and description of the group you want to create.
        The request body includes the details of the group you want to create.
        Once created, the group will be available for use in the QueryPie platform.
      operationId: v2_create-user-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$CreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create User Group
      tags:
        - external-v2_User Group Management API
  /api/external/v2/user-groups/{userGroupUuid}/users:
    get:
      description: |
        List Users In Group
        This API returns a paginated list of all users in a specific user group.
        You must provide the userGroupUuid of the group you want to retrieve users from.
        The response includes details such as the user's username, name, and email.
        You can filter users by username, name, and email.
      operationId: v2_list-group-users
      parameters:
        - description: Target user group UUID
          in: path
          name: userGroupUuid
          required: true
          schema:
            description: Target user group UUID
            type: string
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: View type
          in: query
          name: viewType
          required: false
          schema:
            default: ALL
            description: View type
            type: string
        - description: 'Filter: Member''s username'
          in: query
          name: loginId
          required: false
          schema:
            description: 'Filter: Member''s username'
            type: string
        - description: 'Filter: Member''s name'
          in: query
          name: name
          required: false
          schema:
            description: 'Filter: Member''s name'
            type: string
        - description: 'Filter: Member''s email'
          in: query
          name: email
          required: false
          schema:
            description: 'Filter: Member''s email'
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$ListItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Group Members
      tags:
        - external-v2_Group Member Operations API
    post:
      description: |
        Add Users To Group
        This API allows you to add new users to a specific user group.
        You must provide the userGroupUuid of the group you want to add users to.
        The request body includes the details of the users you want to add.
        Once added, the users will be part of the specified group.
      operationId: v2_add-users-to-group
      parameters:
        - description: Target user group UUID
          in: path
          name: userGroupUuid
          required: true
          schema:
            description: Target user group UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupUserDto$CreateResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{userGroupUuid}/users
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Add User to Group
      tags:
        - external-v2_Group Member Operations API
  /api/external/v2/user-groups/{userGroupUuid}/users/{userUuid}:
    delete:
      description: |
        Remove User From Group
        This API allows you to remove a user from a specific user group.
        You must provide the userGroupUuid of the group and the userUuid of the user you want to remove.
        Once removed, the user will no longer be part of the specified group.
      operationId: v2_remove-user-from-group
      parameters:
        - description: Target user group UUID
          in: path
          name: userGroupUuid
          required: true
          schema:
            type: string
        - description: Target user UUID
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/user-groups/{userGroupUuid}/users/{userUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/user-groups/{userGroupUuid}/users/{userUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/user-groups/{userGroupUuid}/users/{userUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: DELETE /api/external/v2/user-groups/{userGroupUuid}/users/{userUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Remove User from Group
      tags:
        - external-v2_Group Member Operations API
  /api/external/v2/user-groups/{uuid}:
    delete:
      description: |
        Delete User Group
        This API allows you to delete a specific user group from the QueryPie system.
        You must provide the uuid of the group you want to delete.
        Once deleted, the group will no longer be available in the system.
      operationId: v2_delete-user-group
      parameters:
        - description: Target user group UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Delete User Group
      tags:
        - external-v2_User Group Management API
    get:
      description: |
        Get User Group
        This API allows you to retrieve details about a specific user group from the QueryPie system.
        You must provide the uuid of the group you want to retrieve.
        The response includes details such as the group name, description, and creation timestamp.
      operationId: v2_get-user-group
      parameters:
        - description: Target user group UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserGroupDto$GetUserGroupResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/user-groups/{uuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get User Group
      tags:
        - external-v2_User Group Management API
  /api/external/v2/users:
    get:
      description: |
        List Users
        This API returns a paginated list of all users in the QueryPie system.
        You can filter users by email, expired status, locked status, username, name, and status.
        The response includes details such as the user's email, username, name, and status.
      operationId: v2_list-users
      parameters:
        - description: User email
          in: query
          name: email
          required: false
          schema:
            description: User email
            type: string
        - description: Whether to list expired users
          in: query
          name: expired
          required: false
          schema:
            description: Whether to list expired users
            type: boolean
        - description: Whether to list locked users
          in: query
          name: locked
          required: false
          schema:
            description: Whether to list locked users
            type: boolean
        - description: User's username
          in: query
          name: loginId
          required: false
          schema:
            description: User's username
            type: string
        - description: User's name
          in: query
          name: name
          required: false
          schema:
            description: User's name
            type: string
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: User status
          in: query
          name: status
          required: false
          schema:
            description: User status
            enum:
              - ACTIVE
              - INACTIVE
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$SearchResponseItem'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: List Users
      tags:
        - external-v2_User Management API
    post:
      description: |
        Create User
        This API allows you to create a new user in the QueryPie system.
        You must provide the details of the user you want to create.
        Once created, the user will be available for use in the QueryPie platform.
      operationId: v2_create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$CreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$CreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Create User
      tags:
        - external-v2_User Management API
  /api/external/v2/users/{userUuid}:
    delete:
      description: |
        Delete User
        This API allows you to delete a specific user from the QueryPie system.
        You must provide the uuid of the user you want to delete.
        Once deleted, the user will no longer be available in the system.
      operationId: v2_delete-user
      parameters:
        - description: Target user UUID
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Delete User
      tags:
        - external-v2_User Management API
    get:
      description: |
        Get User
        This API allows you to retrieve details about a specific user from the QueryPie system.
        You must provide the uuid of the user you want to retrieve.
        The response includes details such as the user's username, name, and email.
      operationId: v2_get-user
      parameters:
        - description: Target user UUID
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$GetUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get User
      tags:
        - external-v2_User Management API
  /api/external/v2/users/{userUuid}/activate:
    post:
      description: "Activate User\nThis API allows you to activate a specific user in the QueryPie system.\nThis is used to reactivate users who have been deactivated due to:\n- Account expiration from long periods of inactivity\n- Manual account locking by administrators\nYou must provide the uuid of the user you want to activate.\nOnce activated, the user will be able to access the QueryPie platform. \n"
      operationId: v2_activate-user
      parameters:
        - description: Target user UUID
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$UpdateStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$UpdateStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/activate
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/activate
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/activate
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/activate
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Activate User
      tags:
        - external-v2_User Management API
  /api/external/v2/users/{userUuid}/allowed-zones:
    delete:
      description: |
        Detach Allowed Zone
        This API allows you to detach a specific allowed zone from a user.
        You must provide the uuid of the user and the uuid of the allowed zone you want to detach.
        Once detached, the allowed zone will no longer be associated with the user.
      operationId: v2_detach-allowed-zone
      parameters:
        - description: User UUID
          in: path
          name: userUuid
          required: true
          schema:
            description: User UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.dbam.database.zone.dto.UserAllowedZoneDto$DetachRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Detach Allowed Zone
      tags:
        - external-v2_Users - Allowed Zone Mapping API
    get:
      description: |
        Get Attached Allowed Zones
        This API returns a paginated list of all allowed zones that are attached to a specific user.
        You must provide the uuid of the user you want to retrieve allowed zones for.
        The response includes details such as the allowed zone name, description, and creation timestamp.
      operationId: v2_get-attached-allowed-zones
      parameters:
        - description: User UUID
          in: path
          name: userUuid
          required: true
          schema:
            description: User UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.dbam.database.zone.dto.UserAllowedZoneDto$ListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Get Attached Allowed Zones
      tags:
        - external-v2_Users - Allowed Zone Mapping API
    post:
      description: |
        Attach Allowed Zone
        This API allows you to attach a specific allowed zone to a user.
        You must provide the uuid of the user and the uuid of the allowed zone you want to attach.
        Once attached, the allowed zone will be associated with the user.
      operationId: v2_attach-allowed-zone
      parameters:
        - description: User UUID
          in: path
          name: userUuid
          required: true
          schema:
            description: User UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.dbam.database.zone.dto.UserAllowedZoneDto$AttachRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/users/{userUuid}/allowed-zones
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Attach Allowed Zone
      tags:
        - external-v2_Users - Allowed Zone Mapping API
  /api/external/v2/users/{userUuid}/deactivate:
    post:
      description: |
        Deactivate User
        This API allows you to deactivate a specific user in the QueryPie system.
        You must provide the uuid of the user you want to deactivate.
        Once deactivated, the user will no longer be able to access the QueryPie platform.
      operationId: v2_deactivate-user
      parameters:
        - description: Target user UUID
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$UpdateStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$UpdateStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/deactivate
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/deactivate
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/deactivate
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/deactivate
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Deactivate User
      tags:
        - external-v2_User Management API
  /api/external/v2/users/{userUuid}/factor-reset:
    post:
      description: |
        Reset 2FA Factor
        This API allows you to reset the 2FA factor for a specific user.
        You must provide the uuid of the user you want to reset the 2FA factor for.
        Once reset, the user will need to set up a new 2FA factor to access the QueryPie platform.
      operationId: v2_user-2fa-reset
      parameters:
        - description: Target user UUID
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$ResetOtpResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/factor-reset
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/factor-reset
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/factor-reset
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/factor-reset
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: 2FA Reset
      tags:
        - external-v2_User Management API
  /api/external/v2/users/{userUuid}/password-reset:
    post:
      description: |
        Reset User Password
        This API allows you to reset the password for a specific user.
        You must provide the uuid of the user you want to reset the password for.
        Once reset, the user will need to use the new password to access the QueryPie platform.
      operationId: v2_user-password-reset
      parameters:
        - description: Target user UUID
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$ResetPasswordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.iam.dto.ExternalV2UserDto$ResetPasswordResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/password-reset
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/password-reset
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/password-reset
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/users/{userUuid}/password-reset
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Password Reset
      tags:
        - external-v2_User Management API
  /api/external/v2/workflows:
    get:
      description: |
        Search Workflows
        This API allows you to search for workflows based on various criteria.
        You can filter workflows by request type, approval status, execution status, urgency, ledger status, and date range.
        The response includes details such as the workflow request UUID, request type, approval status, execution status, urgency, ledger status, and creation timestamp.
      operationId: v2_workflow-search
      parameters:
        - description: Target page for the API call
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            description: Target page for the API call
            type: integer
        - description: Number of rows to include per page
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            description: Number of rows to include per page
            type: integer
        - description: Request type
          in: query
          name: requestType
          required: false
          schema:
            description: Request type
            enum:
              - ACCESS_ROLE
              - DB_ACCESS_CONTROL
              - SQL_EXECUTION
              - DATA_EXPORT
              - SERVER_ACCESS_CONTROL
            type: string
        - description: Start date and time of workflow submission (UTC); Default value = "7 days before 'requestedUntil'"
          in: query
          name: requestedSince
          required: false
          schema:
            description: Start date and time of workflow submission (UTC); Default value = "7 days before 'requestedUntil'"
            type: string
        - description: End date and time of workflow submission (UTC); Default value = "Current time"
          in: query
          name: requestedUntil
          required: false
          schema:
            description: End date and time of workflow submission (UTC); Default value = "Current time"
            type: string
        - description: Start date and time of workflow update (UTC); Must query along with 'updatedUntil'
          in: query
          name: updatedSince
          required: false
          schema:
            description: Start date and time of workflow update (UTC); Must query along with 'updatedUntil'
            type: string
        - description: End date and time of workflow update (UTC); Must query along with 'updatedSince'
          in: query
          name: updatedUntil
          required: false
          schema:
            description: End date and time of workflow update (UTC); Must query along with 'updatedSince'
            type: string
        - description: Workflow approval status
          in: query
          name: approvalStatus
          required: false
          schema:
            description: Workflow approval status
            type: string
        - description: Workflow execution status
          in: query
          name: executionStatus
          required: false
          schema:
            description: Workflow execution status
            type: string
        - description: Whether it was processed in urgent mode
          in: query
          name: urgent
          required: false
          schema:
            description: Whether it was processed in urgent mode
            type: boolean
        - description: Whether the DB is ledger
          in: query
          name: ledger
          required: false
          schema:
            description: Whether the DB is ledger
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.api.external.workflow.dto.WorkflowRequestDto$SearchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow - All Requests
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/access-role-request/{workflowRequestUuid}:
    get:
      description: |
        Get Access Role Workflow Request Details
        This API retrieves detailed information about a specific access role request for servers, Kubernetes clusters, or web applications.
        Access role requests allow users to request permissions for servers, Kubernetes clusters, or web applications.
        Upon approval, the requested role is granted immediately, enabling access to the permitted resources.
        The response includes details such as request type, approval status, execution status, and creation timestamp.
      operationId: v2_get-access-role-workflow-request-details
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowRequestUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.AccessRoleRequestDto$DetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/access-role-request/{workflowRequestUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/access-role-request/{workflowRequestUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/access-role-request/{workflowRequestUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/access-role-request/{workflowRequestUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow - Access Role Request Details
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/db-access-request/{workflowRequestUuid}:
    get:
      description: Workflow - Database Access Request Details
      operationId: v2_database-access-workflow-request-details
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowRequestUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.DbAccessRequestDto$DbAccessRequestResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/db-access-request/{workflowRequestUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/db-access-request/{workflowRequestUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/db-access-request/{workflowRequestUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/db-access-request/{workflowRequestUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow - DB Access Request Details
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/server-access-request/{workflowRequestUuid}:
    get:
      description: |
        Get Server Access Workflow Request Details
        This API retrieves detailed information about a specific server access request.
        Server access requests allow users to request access to specific servers or server groups.
        The response includes details such as request type, approval status, execution status, and creation timestamp.
      operationId: v2_get-workflow-server-access-request-details
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowRequestUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_ServerAccessRequestDto$DetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/server-access-request/{workflowRequestUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/server-access-request/{workflowRequestUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/server-access-request/{workflowRequestUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/server-access-request/{workflowRequestUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow - System Access Request Details
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/sql-export-request/{workflowRequestUuid}:
    get:
      description: Get SQL Export Workflow Request Details
      operationId: v2_get-workflow-sql-export-request-details
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowRequestUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlExportRequestDto$SqlExportRequestResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-export-request/{workflowRequestUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-export-request/{workflowRequestUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-export-request/{workflowRequestUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-export-request/{workflowRequestUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow - SQL Export Request Details
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/sql-request/{workflowRequestUuid}:
    get:
      description: Get SQL Request Workflow Details
      operationId: v2_get-workflow-sql-request-details
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowRequestUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.SqlRequestDto$SqlRequestResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-request/{workflowRequestUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-request/{workflowRequestUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-request/{workflowRequestUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/sql-request/{workflowRequestUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow - SQL Request Details
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/unmasking-request/{workflowRequestUuid}:
    get:
      description: Get Unmasking Request Workflow Details
      operationId: v2_get-workflow-unmasking-request-details
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowRequestUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.dto.UnmaskingRequestDto$DetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/unmasking-request/{workflowRequestUuid}
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/unmasking-request/{workflowRequestUuid}
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/unmasking-request/{workflowRequestUuid}
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: GET /api/external/v2/workflows/unmasking-request/{workflowRequestUuid}
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow - Unmasking Request Details
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/{workflowUuid}/approve:
    post:
      description: |
        Approve Workflow Request

        This API allows you to approve a specific workflow request.
        You must provide the workflowUuid of the request you want to approve.
        Upon approval, the workflow will proceed to the next step or complete if it's the final step.
        The response includes the updated workflow status and approval details.
      operationId: v2_approve-workflow-request
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.ApproveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.ApproveResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/approve
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/approve
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/approve
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/approve
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow Processing API - Approve
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/{workflowUuid}/confirm:
    post:
      description: |
        Confirm Workflow Request

        This API processes reviewers' remote confirmations for specific workflows.
        It applies only to workflows where a review step is included in the approval lines.
      operationId: v2_confirm-workflow-request
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.ConfirmRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.ConfirmResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/confirm
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/confirm
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/confirm
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/confirm
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow Processing API - Confirm
      tags:
        - external-v2_Workflow Requests API
  /api/external/v2/workflows/{workflowUuid}/reject:
    post:
      description: |
        Reject Workflow Request

        This API processes individual rejections based on the steps in the approval lines for a specific workflow.
      operationId: v2_reject-workflow-request
      parameters:
        - description: Workflow UUID
          in: path
          name: workflowUuid
          required: true
          schema:
            description: Workflow UUID
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.RejectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2_com.chequer.querypie.api.external.workflow.RejectResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/reject
                    status: 400
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/reject
                    status: 401
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/reject
                    status: 403
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                example:
                  error:
                    code: errorCode
                    message: errorMessage
                    path: POST /api/external/v2/workflows/{workflowUuid}/reject
                    status: 404
                  requiredKey: Keys that are optionally response
                properties:
                  error:
                    description: error Object
                    properties:
                      code:
                        description: Error Code
                        type: string
                      message:
                        description: Error Message
                        type: string
                      path:
                        description: Request Method And Path
                        type: string
                      status:
                        description: Response Http Status
                        type: integer
                    type: object
                  requiredKey:
                    description: Keys that are optionally response
                    type: string
          description: Not Found
      summary: Workflow Processing API - Reject
      tags:
        - external-v2_Workflow Requests API
  /api/external/workflow/access-requests/{workflowRequestUuid}:
    get:
      description: |
        Get Workflow Request of Database Access
      operationId: v1_get_workflow_database_access_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$AccessRequestResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Access Request] Detail'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/access-requests/{workflowRequestUuid}/approve:
    post:
      operationId: v1_approve_workflow_database_access_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.access.ExternalAccessRequestDto$ApproveRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Access Request] Approve'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/access-requests/{workflowRequestUuid}/reject:
    post:
      operationId: v1_reject_workflow_database_access_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.access.ExternalAccessRequestDto$RejectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Access Request] Reject'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/export-requests/{workflowRequestUuid}:
    get:
      description: |
        Get Database Data Export Workflow Request

        Database Data Export workflow is the workflow to export the database data to the CSV(or Excel) file.

        User can request to export the database data via SQL query.
      operationId: v1_get_workflow_database_export_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$ExportRequestResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Export Request] Detail'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/export-requests/{workflowRequestUuid}/approve:
    post:
      operationId: v1_approve_workflow_database_export_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.export.ExternalExportRequestDto$ApproveRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Export Request] Approve'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/export-requests/{workflowRequestUuid}/reject:
    post:
      operationId: v1_reject_workflow_database_export_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.export.ExternalExportRequestDto$RejectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[Export Request] Reject'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/requests:
    get:
      deprecated: true
      operationId: v1_list_workflow_requests
      parameters:
        - in: query
          name: pageNumber
          required: true
          schema:
            description: Page number
            format: int32
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            description: Page size
            format: int32
            type: integer
        - description: Request type
          in: query
          name: requestType
          required: false
          schema:
            description: Request type
            type: string
        - description: Start requested at
          in: query
          name: startRequestedAt
          required: true
          schema:
            description: Start requested at
            type: string
        - description: End requested at
          in: query
          name: endRequestedAt
          required: true
          schema:
            description: End requested at
            type: string
        - description: Start updated at
          in: query
          name: startUpdatedAt
          required: false
          schema:
            description: Start updated at
            type: string
        - description: End updated at
          in: query
          name: endUpdatedAt
          required: false
          schema:
            description: End updated at
            type: string
        - description: Approval status
          in: query
          name: approvalStatus
          required: false
          schema:
            description: Approval status
            type: string
        - description: Execution status
          in: query
          name: executionStatus
          required: false
          schema:
            description: Execution status
            type: string
        - description: Urgent
          in: query
          name: urgent
          required: false
          schema:
            description: Urgent
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$PageResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: All Requests
      tags:
        - external-v1_Workflow API
  /api/external/workflow/rules:
    get:
      description: |
        List Workflow Approval Rules

        If you want to create any workflow, you need to use a workflow approval rule.
        The workflow approval rule is a rule that defines the approval process for a workflow.
        There is a workflow step that is used to define the approval process.

        The workflow step can specify the approval assignee(s) (user, group)
        There is 3 types of workflow step:
          - Allow Assignee selection (Admin-Only)
             - Workflow requester can select the assignee(s) from the list of Admin users.
          - Allow Assignee selection (All Users)
             - Workflow requester can select the assignee(s) from the list of all users.
          - Selected Assignee(s) / Group(s)
             - Workflow requester is forced to request approval to the selected assignee(s) / group(s).
             - Approval rule creator can define the condition for the approval. For example:
               - All Assignees must approve.
               - A single Assignee can complete the approval.
      operationId: v1_list_workflow_approval_rules
      parameters:
        - description: page number
          in: query
          name: pageNumber
          required: true
          schema:
            description: page number
            type: string
        - description: page size
          in: query
          name: pageSize
          required: true
          schema:
            description: page size
            type: string
        - description: Request type
          in: query
          name: requestType
          required: false
          schema:
            description: Request type
            type: string
        - description: Approval Status
          in: query
          name: approvalStatus
          required: false
          schema:
            description: Approval Status
            type: string
        - description: Execution Status
          in: query
          name: executionStatus
          required: false
          schema:
            description: Execution Status
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.api.dto.Responses$PageResponseCom.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$PageResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: List
      tags:
        - external-v1_Approval Rule API V2
    post:
      operationId: v1_add_workflow_approval_rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$AddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Add approval rule
      tags:
        - external-v1_Approval Rule API V2
  /api/external/workflow/rules/{uuid}:
    delete:
      operationId: v1_remove_workflow_approval_rule
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Remove approval rule
      tags:
        - external-v1_Approval Rule API V2
    get:
      operationId: v1_get_workflow_approval_rule
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$DetailResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Detail
      tags:
        - external-v1_Approval Rule API V2
    put:
      operationId: v1_update_workflow_approval_rule
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.rule.ExternalWorkflowRuleDto$EditRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: Edit approval rule
      tags:
        - external-v1_Approval Rule API V2
  /api/external/workflow/sql-requests/{workflowRequestUuid}:
    get:
      description: |
        Get SQL Request Workflow Detail

        SQL Request is the workflow to execute the SQL query.
        User can request to execute the SQL query via SQL Request workflow.
      operationId: v1_get_workflow_database_sql_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.ExternalWorkflowRequestDto$SqlRequestResponse'
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[SQL Request] Detail'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/sql-requests/{workflowRequestUuid}/approve:
    post:
      operationId: v1_approve_workflow_database_sql_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.sql.ExternalSqlRequestDto$ApproveRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[SQL Request] Approve'
      tags:
        - external-v1_Workflow API
  /api/external/workflow/sql-requests/{workflowRequestUuid}/reject:
    post:
      operationId: v1_reject_workflow_database_sql_request
      parameters:
        - in: path
          name: workflowRequestUuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/0.9_com.chequer.querypie.newworkflow.interfaces.external.v2.sql.ExternalSqlRequestDto$RejectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json: {}
          description: Unauthorized
        "403":
          content:
            application/json: {}
          description: Forbidden
        "404":
          content:
            application/json: {}
          description: Not Found
      summary: '[SQL Request] Reject'
      tags:
        - external-v1_Workflow API
servers:
  - description: Generated server url
    url: http://127.0.0.1:8080
tags:
  - name: external-v1_Access Approval API
    x-displayName: Access Approval API
  - name: external-v1_Access Control API
    x-displayName: Access Control API
  - name: external-v1_Alert API
    x-displayName: Alert API
  - name: external-v1_Approval Rule API
    x-displayName: Approval Rule API
  - name: external-v1_Approval API
    x-displayName: Approval API
  - name: external-v1_Audit Log API
    x-displayName: Audit Log API
  - name: external-v1_Cloud Provider API
    x-displayName: Cloud Provider API
  - name: external-v1_Authentication History
    x-displayName: Authentication History
  - name: external-v1_Connection API
    x-displayName: Connection API
  - name: external-v1_Masking Pattern API
    x-displayName: Masking Pattern API
  - name: external-v1_Network Zone API
    x-displayName: Network Zone API
  - name: external-v1_Notification Channels API
    x-displayName: Notification Channels API
  - name: external-v1_Policy API
    x-displayName: Policy API
  - name: external-v1_Proxy API
    x-displayName: Proxy API
  - name: external-v1_Role Mapping API
    x-displayName: Role Mapping API
  - name: external-v1_Cluster Role API
    x-displayName: Cluster Role API
  - name: external-v1_Role API
    x-displayName: Role API
  - name: external-v1_User Access History API
    x-displayName: User Access History API
  - name: external-v1_UserGroup API
    x-displayName: UserGroup API
  - name: external-v1_UserGroup`s User API
    x-displayName: UserGroup`s User API
  - name: external-v1_User API
    x-displayName: User API
  - name: external-v1_User Role API
    x-displayName: User Role API
  - name: external-v1_Workflow API
    x-displayName: Workflow API
  - name: external-v1_Approval Rule API V2
    x-displayName: Approval Rule API V2
  - description: |2
      Administrators can view and configure QueryPie security settings remotely.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Security Settings API
    x-displayName: Security Settings API
  - description: |2
      Administrators can view and manage database connections. The response output for vendorDetail may vary depending on the data source type.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_DB Connections API
    x-displayName: DB Connections API
  - description: |2
      Administrators can access logs that define user connections and disconnections to databases.
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_DB Access History API
    x-displayName: DB Access History API
  - description: |2
      Administrators can view and manage server group owners.

      This API requires an "SAC" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Server Groups Owners API
    x-displayName: Server Groups Owners API
  - description: |2
      Administrators can manage various cloud providers for database connections and trigger synchronization in real-time.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Cloud Providers for DB API
    x-displayName: Cloud Providers for DB API
  - description: |2
      Administrators can manage policy rules, such as Data Masking, Data Access, and Sensitive Data Policy, by adding or updating them remotely.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Policy Rules API
    x-displayName: Policy Rules API
  - description: |2
      Administrators can manage user groups in QueryPie.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_User Group Management API
    x-displayName: User Group Management API
  - description: "\nAdministrators can manage connections with external secret stores such as HashiCorp Vault by providing the necessary information. \n\nThis API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.\n"
    name: external-v2_Secret Stores API
    x-displayName: Secret Stores API
  - description: |2
      Administrators can track the granting, modification, and revocation of administrator permissions.
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Admin Role History API
    x-displayName: Admin Role History API
  - description: |2
      Administrators can monitor DML snapshots and retrieve captured data both before and after INSERT/UPDATE/DELETE query execution (requires a separate setting).
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_DML Snapshots API
    x-displayName: DML Snapshots API
  - description: "\nAdministrators can remotely unlock connection locks caused by password failures and extended disconnections for users. \n\nThis API requires a \"DAC\"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.\n"
    name: external-v2_Account Management API
    x-displayName: Account Management API
  - description: |2
      Administrators can manage custom tags for servers.

      This API requires an "SAC" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Server Tags API
    x-displayName: Server Tags API
  - description: |2
      This API requires a license (of any type) issued by QueryPie. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Workflow Requests API
    x-displayName: Workflow Requests API
  - description: |2
      Administrators can view and manage servers.

      This API requires an "SAC" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Servers API
    x-displayName: Servers API
  - description: |
      Administrators can manage the database privileges defined within QueryPie.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.

      Permissions that can be assigned vary depending on the 'privilegeVendor' type. The list of assignable permissions is as follows:

      <details>
      <summary><strong>SQL</strong></summary>
      <p>
      ["SELECT","DELETE","INSERT","UPDATE",
      "MERGE_INTO","GRANT","REVOKE","COMMIT",
      "ROLLBACK","DROP","ALTER","CREATE",
      "RENAME","TRUNCATE","OTHERS",
      "BEGIN","EXECUTE","EXPLAIN","SELECT_SEQUENCE"]
      </p>
      </details>

      <details>
      <summary><strong>Redis</strong></summary>
      <p>
      ["BITCOUNT","BITFIELD_RO","BITPOS","DBSIZE",
      "DUMP","EXISTS","EXPIRETIME","GEODIST",
      "GEOHASH","GEOPOS","GEORADIUSBYMEMBER_RO","GEORADIUS_RO",
      "GEOSEARCH","GET","GETBIT","GETRANGE",
      "HEXISTS","HGET","HGETALL","HKEYS",
      "HLEN","HMGET","HRANDFIELD","HSCAN",
      "HSTRLEN","HVALS","LCS","LINDEX",
      "LLEN","LOLWUT","LPOS","LRANGE",
      "MEMORY_USAGE","MGET","OBJECT_ENCODING","OBJECT_FREQ",
      "OBJECT_IDLETIME","OBJECT_REFCOUNT","PEXPIRETIME","PFCOUNT",
      "PTTL","RANDOMKEY","SCAN","SCARD",
      "SDIFF","SINTER","SINTERCARD","SISMEMBER",
      "SMEMBERS","SMISMEMBER","SRANDMEMBER","SSCAN",
      "STRLEN","SUBSTR","SUNION","TOUCH",
      "TTL","TYPE","XINFO_CONSUMERS","XINFO_GROUPS",
      "XINFO_STREAM","XLEN","XPENDING","XRANGE",
      "XREAD","XREVRANGE","ZCARD","ZCOUNT",
      "ZDIFF","ZINTER","ZINTERCARD","ZLEXCOUNT",
      "ZMSCORE","ZRANDMEMBER","ZRANGE","ZRANGEBYLEX",
      "ZRANGEBYSCORE","ZRANK","ZREVRANGE","ZREVRANGEBYLEX",
      "ZREVRANGEBYSCORE","ZREVRANK","ZSCAN","ZSCORE",
      "ZUNION","APPEND","BITFIELD","BITOP",
      "BLMOVE","BLMPOP","BLPOP","BRPOP",
      "BRPOPLPUSH","BZMPOP","BZPOPMAX","BZPOPMIN",
      "COPY","DECR","DECRBY","DEL","EXPIRE",
      "EXPIREAT","FUNCTION_DELETE","FUNCTION_FLUSH","FUNCTION_LOAD",
      "FUNCTION_RESTORE","GEOADD","GEORADIUS","GEORADIUSBYMEMBER",
      "GEOSEARCHSTORE","GETDEL","GETEX","GETSET",
      "HDEL","HINCRBY","HINCRBYFLOAT","HMSET",
      "HSET","HSETNX","INCR","INCRBY",
      "INCRBYFLOAT","LINSERT","LMOVE","LMPOP",
      "LPOP","LPUSH","LPUSHX","LREM",
      "LSET","LTRIM","MOVE","MSET",
      "MSETNX","PERSIST","PEXPIRE","PEXPIREAT",
      "PFADD","PFMERGE","PSETEX","RENAME",
      "RENAMENX","RPOP","RPOPLPUSH","RPUSH",
      "RPUSHX","SADD","SDIFFSTORE","SET",
      "SETBIT","SETEX","SETNX","SETRANGE",
      "SINTERSTORE","SMOVE","SPOP","SREM",
      "SUNIONSTORE","UNLINK","XACK","XADD",
      "XAUTOCLAIM","XCLAIM","XDEL","XGROUP_CREATE",
      "XGROUP_CREATECONSUMER","XGROUP_DELCONSUMER","XGROUP_DESTROY",
      "XGROUP_SETID","XREADGROUP","XSETID","XTRIM",
      "ZADD","ZDIFFSTORE","ZINCRBY","ZINTERSTORE",
      "ZMPOP","ZPOPMAX","ZPOPMIN","ZRANGESTORE",
      "ZREM","ZREMRANGEBYLEX","ZREMRANGEBYRANK","ZREMRANGEBYSCORE",
      "ZUNIONSTORE","ACL_DELUSER","ACL_DRYRUN","ACL_GETUSER",
      "ACL_LIST","ACL_LOAD","ACL_LOG","ACL_SAVE",
      "ACL_SETUSER","ACL_USERS","BGREWRITEAOF","BGSAVE",
      "CLIENT_KILL","CLIENT_LIST","CLIENT_NO_EVICT","CLIENT_PAUSE",
      "CLIENT_UNBLOCK","CLIENT_UNPAUSE","CLUSTER_ADDSLOTS","CLUSTER_ADDSLOTSRANGE",
      "CLUSTER_BUMPEPOCH","CLUSTER_COUNT_FAILURE_REPORTS","CLUSTER_DELSLOTS",
      "CLUSTER_DELSLOTSRANGE","CLUSTER_FAILOVER",
      "CLUSTER_FLUSHSLOTS","CLUSTER_FORGET","CLUSTER_MEET",
      "CLUSTER_REPLICAS","CLUSTER_REPLICATE","CLUSTER_RESET","CLUSTER_SAVECONFIG",
      "CLUSTER_SETSLOT","CLUSTER_SET_CONFIG_EPOCH","CLUSTER_SLAVES","CONFIG_GET",
      "CONFIG_RESETSTAT","CONFIG_REWRITE","CONFIG_SET","FAILOVER",
      "FLUSHALL","FLUSHDB","INFO","KEYS",
      "LASTSAVE","LATENCY_DOCTOR","LATENCY_GRAPH","LATENCY_HISTOGRAM",
      "LATENCY_HISTORY","LATENCY_LATEST","LATENCY_RESET","MIGRATE",
      "MODULE_LIST","MODULE_LOAD","MODULE_LOADEX","MODULE_UNLOAD",
      "MONITOR","PFDEBUG","PFSELFTEST","PSYNC",
      "REPLCONF","REPLICAOF","RESTORE","RESTORE_ASKING",
      "ROLE","SAVE","SHUTDOWN","SLAVEOF","SLOWLOG_GET",
      "SLOWLOG_LEN","SLOWLOG_RESET","SORT","SORT_RO",
      "SWAPDB","SYNC","ACL_CAT","ACL_GENPASS",
      "ACL_WHOAMI","ASKING","CLIENT_CACHING",
      "CLIENT_GETNAME","CLIENT_GETREDIR","CLIENT_ID","CLIENT_INFO",
      "CLIENT_REPLY","CLIENT_SETNAME","CLIENT_TRACKING","CLIENT_TRACKINGINFO",
      "CLUSTER_COUNTKEYSINSLOT","CLUSTER_GETKEYSINSLOT","CLUSTER_INFO","CLUSTER_KEYSLOT",
      "CLUSTER_LINKS","CLUSTER_MYID","CLUSTER_NODES","CLUSTER_SHARDS",
      "CLUSTER_SLOTS","COMMAND","COMMAND_COUNT","COMMAND_DOCS",
      "COMMAND_GETKEYS","COMMAND_GETKEYSANDFLAGS","COMMAND_INFO","COMMAND_LIST",
      "DISCARD","EXEC","FUNCTION_DUMP","FUNCTION_KILL",
      "FUNCTION_LIST","FUNCTION_STATS","MEMORY_DOCTOR","MEMORY_MALLOC_STATS",
      "MEMORY_PURGE","MEMORY_STATS","MULTI","PUBLISH",
      "PUBSUB_CHANNELS","PUBSUB_NUMPAT","PUBSUB_NUMSUB","PUBSUB_SHARDCHANNELS",
      "PUBSUB_SHARDNUMSUB","PUNSUBSCRIBE","READONLY","READWRITE",
      "RESET","SCRIPT_DEBUG","SCRIPT_EXISTS","SCRIPT_FLUSH",
      "SCRIPT_KILL","SCRIPT_LOAD","SPUBLISH","SUNSUBSCRIBE",
      "TIME","UNSUBSCRIBE","UNWATCH","WAIT","WATCH"]
      </p>
      </details>
    name: external-v2_Privileges API
    x-displayName: Privileges API
  - description: |2
      Administrators can manage user group membership in QueryPie.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Group Member Operations API
    x-displayName: Group Member Operations API
  - description: |2
      Administrators can monitor user login and logout activities.
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_User Access History API
    x-displayName: User Access History API
  - description: |2
      Administrators can view and manage direct permissions for servers.

      This API requires an "SAC" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Direct Permissions API
    x-displayName: Direct Permissions API
  - description: |2
      Administrators have the option to view the database access privilege status of each individual or group,
      as well as the capability to directly grant or revoke database access for both individual users and groups.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_DB Access Control API
    x-displayName: DB Access Control API
  - description: |2
      Administrators can view and manage ledger tables defined by administrators.

      This API requires a "DAC with Ledger Table Management" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Ledger Table Policy API
    x-displayName: Ledger Table Policy API
  - description: |2
      Administrators can view and manage server groups.

      This API requires an "SAC" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Server Groups API
    x-displayName: Server Groups API
  - description: |2
      Administrators can manage users and their statuses in QueryPie. Admins also gain the capability to reset their passwords and/or authenticators.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_User Management API
    x-displayName: User Management API
  - description: |2
      Administrators can manage users' individual IP access controls by attaching or detaching Allowed Zones set within QueryPie.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Users - Allowed Zone Mapping API
    x-displayName: Users - Allowed Zone Mapping API
  - description: |2
      Administrators can monitor changes made to resources and settings in the QueryPie Settings menu.
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.

      <details>
      <summary><strong>Event Types Available: EventType</strong></summary>
      <p>
      [NETWORK_ZONE_CREATED, NETWORK_ZONE_UPDATED, NETWORK_ZONE_DELETED, NETWORK_ZONE_ATTACHED, NETWORK_ZONE_DETACHED, USER_CREATED, USER_UPDATED, USER_DELETED,
      USER_ALLOWED_ZONE_ATTACHED, USER_ALLOWED_ZONE_DETACHED, GROUP_CREATED, GROUP_UPDATED, GROUP_DELETED, GROUP_ALLOWED_ZONE_ATTACHED, GROUP_ALLOWED_ZONE_DETACHED,
      GROUP_MEMBER_ADDED, GROUP_MEMBER_REMOVED, KERBEROS_UPDATED, KEYTAB_CREATED, KEYTAB_DELETED, MASKING_PATTERN_CREATED, MASKING_PATTERN_UPDATED, MASKING_PATTERN_DELETED,
      SSL_CREATED, SSL_UPDATED, SSL_DELETED, SSH_CREATED, SSH_UPDATED, SSH_DELETED, API_TOKEN_CREATED, API_TOKEN_DELETED, CHANNEL_CREATED, CHANNEL_UPDATED, CHANNEL_DELETED,
      CLOUD_PROVIDER_CREATED, CLOUD_PROVIDER_UPDATED, CLOUD_PROVIDER_DELETED, ALERT_POLICY_CREATED, ALERT_POLICY_UPDATED, ALERT_POLICY_DELETED, DATA_ACCESS_POLICY_CREATED,
      DATA_ACCESS_POLICY_UPDATED, DATA_ACCESS_POLICY_DELETED, DATA_ACCESS_POLICY_RULE_CREATED, DATA_ACCESS_POLICY_RULE_UPDATED, DATA_ACCESS_POLICY_RULE_DELETED,
      DATA_MASKING_POLICY_CREATED, DATA_MASKING_POLICY_UPDATED, DATA_MASKING_POLICY_DELETED, DATA_MASKING_POLICY_RULE_CREATED, DATA_MASKING_POLICY_RULE_UPDATED,
      DATA_MASKING_POLICY_RULE_DELETED, SENSITIVE_DATA_POLICY_CREATED, SENSITIVE_DATA_POLICY_UPDATED, SENSITIVE_DATA_POLICY_DELETED, SENSITIVE_DATA_POLICY_RULE_CREATED,
      SENSITIVE_DATA_POLICY_RULE_UPDATED, SENSITIVE_DATA_POLICY_RULE_DELETED, CONNECTION_CREATED, CONNECTION_UPDATED, CONNECTION_DELETED, CLUSTER_CREATED, CLUSTER_UPDATED,
      CLUSTER_DELETED, INSTANCE_CREATED, INSTANCE_UPDATED, INSTANCE_DELETED, GENERAL_SETTING_UPDATED, QUERY_SHARING_SETTING_UPDATED, WORKFLOW_SETTING_UPDATED,
      AUTHENTICATION_SETTING_UPDATED, QUERY_SHARING_UPDATED, ACCOUNT_LOCKOUT_POLICY_UPDATED, MAXIMUM_PASSWORD_AGE_UPDATED, TIMEOUT_SETTING_UPDATED, WEB_IP_ACCESS_CONTROL_UPDATED,
      CONNECTION_SECURITY_SETTING_UPDATED, PRIVILEGE_CREATED, PRIVILEGE_UPDATED, PRIVILEGE_DELETED, APPROVAL_RULE_CREATED, APPROVAL_RULE_UPDATED, APPROVAL_RULE_DELETED,
      COMPANY_UPDATED, JOB_CREATED, JOB_UPDATED, JOB_DELETED, EMAIL_PROVIDER_UPDATED, SECURITY_SETTING_UPDATED, LEDGER_TABLE_POLICY_CREATED, LEDGER_TABLE_POLICY_DELETED,
      LEDGER_TABLE_POLICY_RULE_CREATED, LEDGER_TABLE_POLICY_RULE_UPDATED, LEDGER_TABLE_POLICY_RULE_DELETED, LEDGER_APPROVAL_RULE_CREATED, LEDGER_APPROVAL_RULE_UPDATED,
      LEDGER_APPROVAL_RULE_DELETED, SERVER_SSH_KEY_CREATED, SERVER_SSH_KEY_UPDATED, SERVER_SSH_KEY_DELETED, SERVER_CREATED, SERVER_UPDATED, SERVER_DELETED,
      SERVER_SERVERGROUP_UPDATED, SERVER_POLICY_DETAIL_UPDATED, SERVER_POLICY_INHERITANCE_UPDATED, SERVER_TAG_CREATED, SERVER_TAG_UPDATED, SERVER_TAG_DELETED,
      SERVER_ACCOUNT_CREATED, SERVER_ACCOUNT_UPDATED, SERVER_ACCOUNT_DELETED, SERVER_ALLOWED_ZONE_ATTACHED, SERVER_ALLOWED_ZONE_DETACHED, SERVER_ALLOWED_ZONE_INHERITANCE_UPDATED,
      SERVER_ACCOUNT_TEMPLATE_CREATED, SERVER_ACCOUNT_TEMPLATE_UPDATED, SERVER_ACCOUNT_TEMPLATE_DELETED, SERVER_ACCOUNT_TEMPLATE_ACCOUNT_CREATED,
      SERVER_ACCOUNT_TEMPLATE_ACCOUNT_UPDATED, SERVER_ACCOUNT_TEMPLATE_ACCOUNT_DELETED, SERVER_CLOUD_PROVIDER_CREATED, SERVER_CLOUD_PROVIDER_UPDATED, SERVER_CLOUD_PROVIDER_DELETED,
      SERVER_GROUP_CREATED, SERVER_GROUP_UPDATED, SERVER_GROUP_DELETED, SERVER_GROUP_SERVER_ADDED, SERVER_GROUP_SERVER_REMOVED, SERVER_GROUP_ACCOUNT_CREATED,
      SERVER_GROUP_ACCOUNT_UPDATED, SERVER_GROUP_ACCOUNT_DELETED, SERVER_GROUP_ALLOWED_ZONE_ATTACHED, SERVER_GROUP_ALLOWED_ZONE_DETACHED, SERVER_GROUP_POLICY_DETAIL_UPDATED,
      SECRET_STORE_CREATED, SECRET_STORE_UPDATED, SECRET_STORE_DELETED]
      </p>
      </details>
    name: external-v2_Activity Logs API
    x-displayName: Activity Logs API
  - description: "\nAdministrators can initiate actions to extract and download audit logs stored in QueryPie. \n\nThis API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.\n"
    name: external-v2_Audit Log Export API
    x-displayName: Audit Log Export API
  - description: |2
      Administrators can monitor connection locks caused by password failures and extended disconnections.
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Account Lock History API
    x-displayName: Account Lock History API
  - description: |2
      Administrators can monitor and retrieve records of completed query executions.
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Query Audit API
    x-displayName: Query Audit API
  - description: |2
      Administrators can monitor jobs triggered within QueryPie, such as Cloud Provider synchronization history.

      This API requires a 'DAC'-specific license and/or 'SAC' license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Jobs API
    x-displayName: Jobs API
  - description: |2
      Administrators can view and manage server OS accounts within server groups.

      This API requires an "SAC" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Server Accounts API
    x-displayName: Server Accounts API
  - description: |2
      Administrators can monitor the authorization and revocation of connection access for both users and groups.
      If you require a chronological log history without duplication or omission over time, please utilize the separately designed API for event gathering.

      This API requires a "DAC"-specific license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_DB Access Control Logs API
    x-displayName: DB Access Control Logs API
  - description: |2
      Administrators can view and manage command templates for servers.

      This API requires an "SAC" license. Please contact QueryPie Sales (sales@chequer.io) if you are interested.
    name: external-v2_Command Templates API
    x-displayName: Command Templates API
  - name: external-v2_Server SSH Key Configurations API
    x-displayName: Server SSH Key Configurations API
x-tagGroups:
  - name: QueryPie API
    tags:
      - external-v1_Access Approval API
      - external-v1_Access Control API
      - external-v1_Alert API
      - external-v1_Approval Rule API
      - external-v1_Approval API
      - external-v1_Audit Log API
      - external-v1_Cloud Provider API
      - external-v1_Authentication History
      - external-v1_Connection API
      - external-v1_Masking Pattern API
      - external-v1_Network Zone API
      - external-v1_Notification Channels API
      - external-v1_Policy API
      - external-v1_Proxy API
      - external-v1_Role Mapping API
      - external-v1_Cluster Role API
      - external-v1_Role API
      - external-v1_User Access History API
      - external-v1_UserGroup API
      - external-v1_UserGroup`s User API
      - external-v1_User API
      - external-v1_User Role API
      - external-v1_Workflow API
      - external-v1_Approval Rule API V2
      - external-v2_Security Settings API
      - external-v2_DB Connections API
      - external-v2_DB Access History API
      - external-v2_Server Groups Owners API
      - external-v2_Cloud Providers for DB API
      - external-v2_Policy Rules API
      - external-v2_User Group Management API
      - external-v2_Secret Stores API
      - external-v2_Admin Role History API
      - external-v2_DML Snapshots API
      - external-v2_Account Management API
      - external-v2_Server Tags API
      - external-v2_Workflow Requests API
      - external-v2_Servers API
      - external-v2_Privileges API
      - external-v2_Group Member Operations API
      - external-v2_User Access History API
      - external-v2_Direct Permissions API
      - external-v2_DB Access Control API
      - external-v2_Ledger Table Policy API
      - external-v2_Server Groups API
      - external-v2_User Management API
      - external-v2_Users - Allowed Zone Mapping API
      - external-v2_Activity Logs API
      - external-v2_Audit Log Export API
      - external-v2_Account Lock History API
      - external-v2_Query Audit API
      - external-v2_Jobs API
      - external-v2_Server Accounts API
      - external-v2_DB Access Control Logs API
      - external-v2_Command Templates API
      - external-v2_Server SSH Key Configurations API
